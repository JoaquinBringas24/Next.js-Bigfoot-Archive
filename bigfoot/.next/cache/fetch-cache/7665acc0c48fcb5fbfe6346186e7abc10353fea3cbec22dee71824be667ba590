{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:59:18 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"I grew up in Stark County Ohio in Paris Township from 1973 until I went away for school (1990) and then got married. The famous \"Minerva Flap\" happened in my back yard. The strip mine that was behind the Cayton families home where most of the sightings occurred belonged mostly to my family. We lived on the other side of the strip mine from the Caytons. I went to school with some of the Caytons but never asked about what had happened as there were many rumors floating around the community. Many more people in the area were having encounters but were unwilling to report it because of the ridicule the Caytons received, not to mention all the idiots running around ready to shoot anything with two legs and a pulse. I can't speak for the others but I will tell you what was happening on my family's property and the two sightings I had. The strip mine was owned by my aunt and uncle along with the rest of their farm. We lived next door on a large plot with three mobile homes back in the woods. My family lived in one, my grandparents lived in another and a different aunt and uncle, along with my cousins, lived in the third, all about 60 yards apart. In the late 70's we had our cornfield smashed down and a partial footprint was found. My cousin and I had discovered it and thought the area where the corn had been looked like something had rolled in it. Because of the excitement in the area, we were not alowed outside by ourselves. No one in the community knew what to make of everything. Even though I was young, I clearly remember the fear everyone felt. After a few years had passed there was not a lot of activity. My first sighting came in about 1984. It was such a close encounter I will have to explain the details as best as I can, so you can understand the situation. My brother and I shared a bedroom in the mobile home. We had a bunk bed and it was against the outside wall which put the top bunk right in the middle of the window. This next part is hard to explain if you have never seen how the windows in an older mobile home would open. One window is really a series of smaller windows that would crank open. As you would crank, the bottom of each of the smaller windows would begin to push out tilting the bottom of the windows out and leaving the top stationary. (I hope everyone is still with me.) Keeping all of that in mind, you know how at night windows in your house act as a mirror because its dark outside but the lights are on inside. Okay, I have explained all of this to tell you what I saw. My brother and I were getting ready for bed. I was already on the top bunk and my brother was not in the room yet. There was a night light on in the room and the window was cranked open so I would ordinarily see the reflection in the room, but since the window was open, and because of the tilt, I now could see the reflection straight down. The window in our room was made of two smaller windows, one on top of the other. I was inside of a sleeping bag, which will turn out to be a nightmare in a few moments. I could hear something coming up the drive way about 30 feet from our room. We had a dog outside loose, and I thought it has him. I heard it leave the drive way, and start heading straight for our window. Still thinking it was my white collie, I looked at the window reflecting down and expected to see him walk underneath. Instead, what I saw was black hair taking up the entire window. Now I was still looking for an explanation, and thinking this was my dad I said \"Dad\" and instead of hearing my dad answer from outside my window, he answers from his bedroom down the hall so I looked back at the reflection and there was a hand in between the two parts of the window. I would not say the hand was reaching for me, I got the impression it was feeling the glass. Well, needless to say I had seen more than I wanted! The problem was I was inside of a sleeping bag and couldn't do anything quickly, but with a hand 1/3 the size of one of the windows, and only inches away, I wasn't hanging around! I flipped over the rail in one motion, sleeping bag and all. I was so scared I still couldn't get free, so I hopped down the hall in my bag. My dad met me half way telling me to calm down. I told him what I saw, he grabbed a gun and went out the back door. He circled the house and came in, he said he saw nothing. The windows are about two and a half feet wide and about one and a half feet tall. I only saw the hand for about one-second before I bailed. I would have to say it was about 1/3 the size of the window. The hair was black and partially growing down the fingers. I did not see the palm. The hand looked very much like a man's only much, much bigger. I have an uncle who is 6 foot 6 with large hands but these were much bigger! The skin looked dark gray to black, but again I only saw it for a second. The thing that sticks most in my mind was the fingernails. Very clear, I think it's what made me realize in that second that this was no joke. They were long, but not like claws. The next incident happened in 1989. I was on an outing with my girlfriend at the time and her family. They were dropping me off at my house and usually wait for me to get in the house before leaving but this time her father was driving and left as soon as I got out. As they were driving away I realized I didn't have my keys with me. The whole property was dark but my dad's car was there. I thought this was very odd so I tried just knocking on the door. Sure enough my dad opens the door. My dad pulls me aside, because my brother was still young and he didn't want to scare him, and asked if I was here earlier? I told him no, this was the first I was home. He said they were watching TV and someone was playing around with the door knob on the patio. The light to the patio was broken at the time so he shut off the lights inside so they could see out. He said he didn't see anything so he locked the door, left the lights off and he and my brother sat on the floor in his bedroom and played video games. That's what they were doing when I got home. Now, I didn't think too much into it at the time so I blew it off. I hadn't had dinner yet that night and microwave was broke. So I was going to run next door to my grandmothers to use her microwave. Her house is about 60 yards away. She was on vacation so her place was dark and locked up. The only light was from a neighbors pole light about 150 yards away. My brother went over with me because he was going to warm up some food too. We walked over, unlocked the door, nuked our food and was shutting off the lights to leave. That's when it took place. I shut the door to lock it, and I couldn't get it to turn to lock. My brother was standing behind me holding the food and getting impatient. I turned around to tell him to chill out while I lock up, when I noticed about 40 feet behind him someone was standing there. The neighbors light was behind and to the right of what I was looking at. I kind of dismissed it at first and kept trying to lock the door. Then it hit me, I know there are no trees where this thing was and we were about three to four feet up on a porch and this thing was bigger! I turned again to get a better look, and this time I see it start to walk to the right behind a shed, the same direction we needed to go to get home. Hindsight being 20/20 I should have taken my brother back into my grandmothers house. I don't know why that didn't even cross my mind as an option. All I could think was I needed to get my brother home as quickly and as safe as possible. I needed to get to my dad and our hunting rifles. I actually turned and finished locking the door, it must have been shock. I didn't want to panic or scare my brother, since he hadn't seen anything, so I told him let's see who can get back home the fastest. So we ran and I let him beat me so I could stay behind him, and keep him in sight. It only took us a few seconds to cover the distance but I was watching the whole time for anything. I saw nothing. We got in the door and that's when my adrenaline kicked in. I began shaking and couldn't stop till I got my nerves calmed down. I pulled my dad aside and told him what I saw. Like before he got a gun and told me to give him 30 seconds outside then turn on the back porch light. He went around the entire property and saw nothing. Well, my dad still thinks I'm nuts, but then I came to find out from my mom that back in the 70s one night there were these god awful screams coming from our woods that just wouldn't stop. So my dad got his rifle and drove the car back by the woods. All he could see in the head lights were bushes and trees shaking very violently. The next day my mom said he went back to see if he could find anything. The only thing she told me was he found a couple of dead animals but she did not know what they were. It wasn't until the late 90's when I found your website and seen the full reports from our area. Now I seen that the reports included the sighting of two panthers with the two Sasquatch that were seen. My grandmother's mobile home was closest to the woods, and I asked her recently if she ever heard anything. Before I could get anything else out, she said one summer night she had to close her windows to go to sleep because there was a cougar roaring in the woods. She said she was sure it was some kind of cat. Again I don't know if she was hearing the screams sometimes associated with a sasquatch or if she really did hear some kind of large cat. There have been no further incidences on the property that I am aware of.","location_details":"My families property is just off of Route 30, northwest of Minerva. By the way on the Cayton report the directions are wrong. Paris Township does not go east of Minerva. I'm not sure if this was just a mistake or if it was done intentionally. You can verify this with a map of Ohio.","county":"Stark County","state":"Ohio","season":"Summer","title":"Report 8406: Encounters with a hairy creature in the same area as the well known \"Minerva monster flap.\"","latitude":40.7343,"longitude":-81.15622,"date":"1978-08-01","number":8406,"classification":"Class A","geohash":"dpnr9pry7p","temperature_high":81.1,"temperature_mid":70.8,"temperature_low":60.2,"dew_point":59,"humidity":68,"cloud_cover":50,"moon_phase":0.92,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1017.4,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":7.1,"wind_bearing":207.2,"wind_speed":12.8,"id":191},{"observed":"INVESTIGATORS: Ron Schaffner (Ron@bfro.net), Earl Jones, Jim Carnes Jim Rastetter, Iona Boyce, Barbara Mudrak,(Akron Beacon-Journal) and James Shannon (Stark County Deputy Sheriff) CASE DATA: All of our interviews and field investigations were conducted on the weekends of September 9 and 30, 1978. Other interviews were conducted by the late Jim Rastetter and his research team, the press and local law enforcement. We will list the incidents by date since there are several encounters. There are also many newspaper reports from this time period mostly from the Akron Beacon-Journal. The reader should be aware that these incidents are multiple witness sightings which adds some credence to the reports. The reports of large felines in conjunction with the hominids are a subject that I have never been able to explain. I will begin with the first major sighting which occurred on 21, August: Evelyn Cayton's family and friends were out on the front porch when they heard noises in the direction of an old chicken coop just to the right of the house. They saw two pairs of yellow eyes that seemed to be reflecting a porch light. Scott Patterson went to his car and turned the headlights on in hopes of getting a better look. The eyes were emitting from what appeared to be two \"cougar-type\" felines. Then, the party saw what looked like a large bipedal hairy creature step in front of the large cats as if to protect them. This creature then preceded to lurch towards Patterson's car. The witnesses fled to the house and called the Stark County Sheriffs Department. While waiting for the deputies, the bipedal creature appeared at the kitchen window - about four yards from the kitchen table. Patterson pointed a .22 caliber pistol at it, while Evelyn Cayton loaded a .22 caliber rifle. The creature stood outside the window for close to ten minutes. They all could clearly see the creature because of the back porch light. They decided they would not shot at it unless the creature made any advances toward them. The biped suddenly left without harming anyone. (Sketch of creature is on file with us.) \"It doesn't seem to want to bother anyone\", said Mary Ackerman. \"It was just curious. We all felt that it wanted to be friends\" Deputy Sheriff James Shannon arrived about 15 minutes after the call was made and about 5 minutes after the creature left the scene. A strong stench was still lingering in the area when Deputy Shannon began to interview the witnesses. Shannon later told reporters that it smelled like \"ammonia-sulphur\". Extra deputies were brought in and the searched the entire area on horseback and in jeeps. (The land behind the Cayton's was an old abandoned strip mine and beyond that were dense woods going up a gradual hill.) Unusual, but unsubstantiated foot prints were discovered. 22, August: Mrs. Mary Ackerman, of Minerva drove to the Cayton residence to pick up her daughter and friend. (Mrs. Ackerman is Evelyn Cayton's daughter.) As she turned into the driveway, she saw the same creature standing on top of the hill next to the strip mine. She watched it until it walked out of her view. 23, August: The creature appeared again at Cayton residence. Howe Cayton was not sure if it was the same thing. He fired a gunshot into the air and the figure departed. 8, September: During the late daylight hours, Mrs. Ackerman observed two \"ape-like\" animals across the strip mine. She stated that she thought the creatures were standing in a tree but wasn't sure because of the distance. Again, she watched them for a while, until they were no longer visible in the thick weeds. 9, September: Jim Rastetter interviewed Henry Colt who lives about 5 miles east of Minerva on U.S. 30. He told Jim that he was walking through some woods by his house when he caught a glimpse of an unknown furry animal. Mr. Colt said that the animal was squatting next to a tree and let out a sound similar to a loud cough. Actually, the incidents leading up to the August 21 sighting began about the first of the month. Mrs. Cayton believes the creatures' appearance were due to her husband (Herbert) cutting down the thick brush next to the pit and that he also dumped some garbage around for the raccoons. Several nights later, Cayton's grandchildren and their friends came running in the house crying in a frightened state. They claimed to have seen a large hairy monster in the pit. Mrs. Keck, Mrs. Cayton and Howe Cayton went outside to see what had scared them. They saw a creature that was covered with dark matted hair. They estimated it to be about 300 pounds and 7 feet tall. \"It just stood there\", said Mrs. Cayton. \"It didn't move, but I almost broke my neck running back down the hill.\" Mrs. Cayton claims that she later observed the creature in the daylight. It was sitting in the pit picking at the garbage. She could not make out any facial features due to the amount of long hair covering its face. She remembered that the creature had no visible neck. MORE GROUND LEVEL ACTIVITY AND COMMENTS: What about the two phantom cougars? This is one of the most puzzling aspects of this case. The \"ape-like\" creature was described by the witnesses as if to be protecting the big cats. If Patterson's testimony is truthful, the how should we ascertain such statements. Does this mean that these creatures live in harmony with each other, or is it more soft evidence to indicate that all this phenomena is originating from the same source? deputy Shannon said that he received many reports of bear and \"panther-like\" bobcats in the area. Was the creature a bear? Although the Ohio Division of Wildlife debunked the idea of bears, we know that they are coming into eastern Ohio from Pennsylvania. We also discovered a bear explanation was used by local law enforcement to down play the incidents. This reasoning was used to keep the local vigilantes and hunters away from the woods. We asked Mrs. Cayton; \"Do you think what you saw were bears?\" She answered; \"No, not unless they were mutated.\" Canine Activity: Prior to the August 21 sightings, one of the Cayton's German Shepherds was found dead with a broken neck. The dog had been chained up with a collar to the dog house. The collar was found next to the dead animal still in tacked to the chain. We can speculate that either; 1. The creature jerked the dog out of the collar, or: 2. The canine was so scared that it broke its own neck trying to escape. Consider the following: The other shepherd (\"Missey\") was still in a schizophrenic state during our investigations. At times, she is extremely calm and affectionate and on other occasions, she is scared and vicious. Missey has spent a lot of time digging, which is not uncharacteristic of a canine. However, she dug a tunnel about 8 feet into the ground. This hole is almost large enough to contain two medium sized dogs. Could this be a hiding place for the dog for when the creature returns? (We have photographs of this \"tunnel\".) EVALUATION: According to the Cayton's and Mrs. Mudrack, the Sheriff's department did an excellent investigation. However, there are some conflicting reports. The deputies stayed with the family until the early morning hours. They studied alleged prints and hair, but came up with no monster. They covered up the incidents to discourage hunters. They supposedly took the soft evidence to a local college in Canton for analysis. When we tried to obtain this evidence, Mallone College told us they did not receive anything. Many investigators have since talked to the Cayton family. I believe that they are sincere people who would have no real benefit to hoax. Evelyn had just been released from the hospital due to an ulcer and a thyroid tumor. her doctors told her to avoid emotional stress, so why would she fabricate a story like this? She did not need this type of publicity. One must not forget that this is a multiple witnesses incident. With this many witnesses, (interviewed separately, then as a group) it could be easy for one to \"slip up\", but all stuck to the same story. One cannot forget about the deputies' investigation and other phenomena surrounding these incidents. The witnesses were unfamiliar with the term \"Bigfoot\", until the press caught wind of the story. Barbara Mudrack gave us an excellent character reference of the witnesses. She told us (prior to our on-site investigations) that she really believed that the Caytons were telling the truth about their visitor. Earl Jones and Myself visited the Caytons on two separate occasions. On our second visit, we backpacked and spent the night in the upper woods looking for physical evidence. We came up with no evidence, nor did we witness anything unusual. We did feel the need for more hours logged, but were unable to do so, for lack of financial means. ( Could not afford lost time from our jobs.) This case is by far, the most complex and interesting one from my files.","location_details":"U.S. Route 30, west of Minerva, Ohio in Paris Township; Stark County","county":"Stark County","state":"Ohio","season":"Summer","title":"Report 4977: Ron Schaffner case report: The 1978 Minerva Flap","latitude":40.74451,"longitude":-81.0758,"date":"1978-08-21","number":4977,"classification":"Class A","geohash":"dpnrg163uz","temperature_high":77,"temperature_mid":65.9,"temperature_low":55.2,"dew_point":54.1,"humidity":67.9,"cloud_cover":16.4,"moon_phase":0.61,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1025.6,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":null,"visibility":16.1,"wind_bearing":42.2,"wind_speed":8.6,"id":192},{"observed":"August 1991 Stark County, East Canton OH near to US Route 30 It's hard to say where these stories come from. When I was younger I had always read about them with a grain of salt. I mean you never really take anything serious that you read about unknown phenomena, if you haven't experienced it. I think this just added to the surreal experience, in which I am about to finally indulge after all these years, whether anyone ever reads this or not. I was not a Bigfoot enthusiast by nature. As any other person who has shared an experience likewise can tell you, that all changes the moment you are faced with one. It was late August 1991 in a small town called East Canton in Northeast Ohio. I don't have an exact date. That never seemed very important to me at the time.  I know it was during that month. I grew up in East Canton, and knew the surrounding forests quite well, from plenty of hiking time with my dad and friends. It was not a good day. I had an outrageous argument with my girlfriend and simply had to take off for awhile. I decided to take to the woods for the night. I sometimes liked to hike and camp by myself, but it wasn't my style at that time. I had just gotten a used Ford Tempo which instantly changed my life. My days of woodland hiking/camping was over, for now anyway. At that time, I would have preferred to hit the mall or something meaningless like that. Thank God, I didn't. I packed up a small supply of gear to go camping for a night all by my lonesome. I knew exactly where I was going, the spot was perfect. I had camped there before, countless times. About two miles from my parent's house was an endless setting of woods. In these woods was a series of old abandoned coal mines. Above these caves was a gorgeous surrounding of pine trees. I am not sure how they was able to root above these caves, but they made for an absolutely gorgeous setting. Naturally, nothing makes a better bed than pine needles. All I really brought was a blanket to lay on, which was my first mistake. A machete for chopping fire wood and the standard nighttime armor, my trusty flashlight. I always like to travel light and sometimes, later regret it. You start to wish you would have brought a heavier blanket or sleeping bag when it gets cold. My friends, Pete & Joe (names changed, witness' request) came with me to help set up camp. Which there wasn't much to it,  I think they just wanted to hang out. So began the greatest quest of man, starting of the mystical fire. We made a huge clearing of the pine needles so there was no chance of a spark to set it off, and laid rocks around it. We was always really careful about this because we knew the owner of the land and he permitted us to hike or camp there anytime we felt like it. The sun was setting fast. Pete & Joe had to leave because they had to work early in the morning. I was glad. Not that I didn't enjoy company, but I needed to be alone to ponder the things that man does wonder. The fire was going real well. Since it was August, the nights would get very cold. So, fire good. Cold bad. At this point I was finding peace. It was a stressful day and well, needed silence therapy. The wilderness can be intoxicating if you set your attention towards it, and a great way of getting away from everyday problems. Well not this night anyway. At the time I had pop bottle glasses. I mean these suckers were thick. But I had perfect vision through them. Since then I have had lasik (laser correction) surgery and you will read on my purpose for that very soon. So I took my pop bottle glasses, and very carefully laid them very close to my blanket. If you've ever owned glasses and cannot see very well, you will understand, this is an insecurity. A few twigs snapped around me. I'm not going to kid you, when you hear that kind of stuff when you are alone in the deep dark woods, it scares you for a minute. Ultimately, nothing I have not heard before. I then realized it was something small, a little rabbit or squirrel. I was quite comfortable. I fell to sleep very fast. The doors of the unknown were about to be opened. At 3AM I wake with a very startled, uneasy feeling. I know I didn't have a nightmare, but I had a much more intense feeling that I was rudely awakened. Nothing seemed outwardly different with the camp, however, the weird sense was there. I'd felt this peculiar sense before. I am not exaggerating, and I hope that other people that have had the same kind of  experience can relate to this sense. It was the feeling of being watched, on an extreme level. Not your round about chill or alertness, I am talking an intense sensation. That tingly sensation that tells you that you are not alone and danger may be near. This sensation, was like a physical tingling behind my ears. It was like hypersensitivity. I guess like a Spidey-sense, if you will. I know I am not Spider Man, but if I was, this is probably what it would feel like when trouble was ahead. As all of you with glasses would know,  I immediately rush to find them and jam them onto my face. Dead silence. There isn't a cricket chirping, a tree frog singing, or anything. Just cold, dead silence. I however pass it off as a bad dream. Mind you, at this point I still have not heard anything, or understand why I seem to have been rudely awakened. I notice I am freezing. I am very cold and the fire is on its last red coals. I immediately lean over and start blowing on the coals to restart it. That's when it happened. I heard the most blood curdling scream (or shrill) I have ever heard, to this day. It sounded unnatural. This \"scream\" will never be able to be documented on paper by anyone, for anybody to understand it, unless they hear it themselves. It was simply terrifying, and unnerving. The kind of sound that shoots right up your spine and seems to peak through your every nerve. The octave levels of this scream was beyond my comprehension. If I didn't have ears, I still would have heard it. Let me expand more on this heart stopping shrill. Your first animal instinct reaction is two choices. To curl up into a little ball and hope it goes away, which is what I was feeling at the moment. Or flee as fast as you can. Those who ever read this, which will be very few, that have experienced this will know exactly what I am talking about. This scream I imagine will haunt us for the rest of our lives. A quick note on the bizarre side. I also had the instinct to yell back. Don't ask me why. It was one of those feelings I had that I cannot explain.  I did have to suppress myself to keep from yelling back. Maybe some kind of primordial defense mechanism? I'm going into weird territory here, but I felt a connection like that. Maybe someone else has felt the same, or else I am totally nuts? I am particularly interested in why I felt this. The fact is, it was a very surreal situation, and I didn't know how to react. I remember my first thought, and that was \"you've got to be \"%^*#^&\" kidding me.\" Because I have never heard anything like it in all my life. It sounded similar to the apes I would hear in old National Geographic documentaries, but much louder. This was Ohio though, not Africa. And it wasn't just once. This screaming continued in approximately 5-10 second intervals on both ends of my camp. On each end I heard rustling and shrills, as if they were screaming back and forth. I was shocked once again when I seen something thumping across the land. Fear took over. A large two legged something, thumped its way about twenty to thirty feet away through my camp. I say thumped because if you remember, I was sleeping on top of a series of caves, which essentially was like a floor. So I felt every step this creature made.  It didn't swing its arms around like a gorilla, but had features similar, from what I could tell. However, I can 110% guarantee it was no man. It was a moonlit night so I could see that is was very large and hairy. The top of its head reminded me of a gorilla's. It was mostly hair covered with some exceptions much like an orangutan. The hair color looked black, but could have had other colors with it. All dark hair looks black at night, and all hair has many colors that people don't immediately see without observation. It was a side view, so I did not see the eyes.  I wish I could have. I cannot give you a valid height. I did not see the full height, because it was running on a ledge. So I couldn't see below its calves. All I could see is it was massive. I am giving you the best description I can give of what little time I had to observe the creature. He/she didn't pose for me. All I know is it was colossal and I was frightened. My only conclusion at this point was that the ridiculous myth of bigfoot was real. That, or I was losing my mind. I was still hearing the yell from the rear of the camp as well. Which lead me to believe there was two or more. One thing I should mention is I did not smell the stench that so many encounters have mentioned. Perhaps because it was such a still windless night? My only instinct from that noise was, get out. Whatever it was.  It was saying, \"you are not welcome here,\" In its own language. I heeded the warning. I obviously picked the wrong place to sleep. My Dad always taught me not to run from wild animals because they sense the fear.  I grabbed my flashlight, and left everything else sit, and fearfully walked out...very fast. When I was about twenty feet away from the camping area, the continuous screaming ended. The silence was comforting, to an extent. I no longer felt in the immediate danger that I thought I was in initially and I did not hear anything following. When I cleared the woods and hit the road, I ran. I ran the entire distance to my parent's home to what seemed like the hardest haul I ever pulled. My chest hurt from breathing so heavily. I urgently beat on my Mom and Dad's locked door (I did not live there anymore). Mom rushed to the door. Naturally I had to catch my breath, but I eventually was able to recite what I just explained. Soon after, my Dad arrived home from work, and then I told him. This is coming from a nineteen year old kid mind you. They were good parents and listened. I am not so sure they believed me, but they agreed, something traumatic happened to me, to set me in such a disturbed mood. My dad had been Morel mushroom hunting for a few decades or more and had never seen anything like that before. Time has passed. I guess it was time to write all this down. I wanted to write this mainly for myself. I want to remember it as clear as I can. Every detail I recited in this is exactly how I remember it. No exaggerations. I would have through time, discarded this as a mere psychological episode. But I have not finished the story for you. The next day was equally thrilling. I knew that if I mentioned this to too many people it would be devastating. I had to tell someone what happened, and who better to tell than your trusting best friends, right? My two closest friends, once again were Pete & Joe. I explained this to them, and got the truthful expressions from them that I expected. Pete believed me to an extent, I think. But Joe took me for an idiot I think. Since I still was not on speaking terms with my girlfriend, the three of us decided to go camping in the same spot together. I wasn't about to take the day and go back by myself to retrieve my precious bear blanket. The word \"alone\" was not an option at this point and time. Why go back at all you ask? Well, its like this. When a man is alone he is alone. When he is with his buddies, he is an Olympian. Besides, I knew that lightning never strikes more than once in the same place. I mean come on, the chances of this same thing happening again were absurd.  I was concerned but didn't feel like it would happen again. That night, armed for battle, my friends and I headed for the woods once again. Much to my surprise, everything I left untouched. Nothing was out of the ordinary at all. No big fat footprints, no clumpy hair on tree branches, nothing. It was all still very dry from the summer. I've already begun to doubt my sanity. I am a skeptic, and generally believe nothing until I am presented with evidence. That is why we all elected to bring a tape recorder this time. We bought brand new batteries for this really cheap Radio Shack piece of junk recorder and set it up by our camp. Let me tell you a little bit about my friend Joe. Where I pack light, he is opposite. He was a Boy Scout (may have still been at the time, may still be now), and insisted on building his own personal living room right there in the woods. So where last night was blanket and machete, tonight was cot, tents, army gear, pellet guns, hot dogs and chips. Woohoo. Pete was very much like me. We were gung ho and liked testing ourselves with having less. It's not like one night is much of a survival test.  I only explain this to you to maybe get a grip on our personalities a little. So you see we were not Bigfoot enthusiasts on the hunt for the big score. We were casually camping out, as we had done many times before. In fact the previous night rarely entered my mind until God turned the lights out on us.  So here we are, looking straight up into the starry sky through the pines, with full bellies from complimentary snacks from Joe's workplace. Once again a very clear and starry night. Slowly we each dosed off, me being last as usual. I finally got comfortable with my surroundings. I convinced myself that the danger of last night, that still seemed all too familiar, was over. It is back to innocent camping. 3AM on the nose I awoke like clockwork. You ask, how could this be? I asked the same at that very moment, when I looked at my watch. How could this be? I woke once again at the same exact moment from the night before. With that dreaded feeling of unease...again. The fire seemed to be in the exact same condition, the coals slowly fading away. I was very cold again. The silence was unbearable. I looked over and seen Pete was awake too. His eyes the size of quarters. He had a strange look of fear on his blood drained face. I asked what was wrong. He just replied \"I don't know.\" It was a repeat of last night's show, which I did not want to sit through. I knew something had happened yet again, to startle us in this manner. I start blowing on the fire. The scream bursts out just like the night previous. Once again I am in a surreal situation. Over and over I ask myself, how can this be? The scream echoes our wilderness surroundings with great intensity right when I am blowing on the fire, at the exact same time as the night before. I'm sure Bigfoot doesn't have the same synchronized Swiss Army watch strapped to his or her own wrist. So I am not sure why this happened on the nose again. One point I would like to make, is on both nights, I was obviously rudely awaken by the scream, but couldn't remember it because I was coming out of sleep. That's the best I can conclude for waking up with that unease. Pete hits the recorder. We call for Joe. Nothing. We call once again. Finally Pete kicks his cot. Joe snaps angrily. \"I'm awake, I'm awake!\" We ask if he heard the shrill. He says he has been listening as well. Needless to say I felt more comfortable with the situation this time. I knew I had survived the first night and chances of survival again are probably good. I'm not going to BS you though, I was still terrified. Maybe not to the extent that Pete and Joe were. We knew we had to go. The shrills were more prominent. We urge Joe to get up but he replies in a cold dead fear \"I can't move.\" I had really never seen anyone so scared. He really just could not moved. He was paralyzed from fear (to this day he won't admit). We helped to motivate him. There was no sign of a large two legged mammal this time. None of us planned on sticking around to test that theory. Pete grabbed the recorder. Once Joe managed to secure his feet in his boots we started our long trek out of the woods. When we were about twenty feet away from the camp, the horrendous shrills stopped...again. The only thing I take from this was, they just didn't want us there, and once we were apparently leaving, they cut out the scare tactics. It worked. When we got to the trail, I wondered what would have happened had I looked behind us. What would I have seen on that trail if I would have simply turned my head back into that direction? Would I have seen that massive creature staring us down, that I had seen the night before? I have nightmares to this day about this question.  I wish I would have looked back at that time, because it obviously wouldn't have been as horrifying as the unknown. I thought the dreams would stop once I moved out of state, but I still have them. So now my friends believed me. It was a real rush because I really wasn't expecting it to happen twice in one life, much less two days. Pete and Joe both were walking very fast ahead of me and I tried to slow them down. I knew at this point the creatures was probably content with seeing us leave. Since we parked a car closer by this time, my exit was much quicker than the last night's. The next morning we awoke earlier that we should have. I think we maybe topped 2 hours sleep.  The fact is, we were eager to go see the site. Being late teens meant high expectations. The mission was, collect all the evidence we could find on site. Then turn in the cassette tape with our solid proof of Sasquatch calls and collect a million dollars from top paying anthropologists and newspapers all over the world. Of course this is ridiculous, but at that age, it seemed a possibility. In fact is seems people are quicker to believe in making money with get rich overnight schemes than the existence of bigfoot. We enter the woods treating it like a crime scene. The patch of pines looks just as we left it from a distance. No 3 inch deep massive foot prints, because the ground was incredibly dry. No patches of Yak type hair hanging from the trees. And no not even a huge nest where a tribe of Sasquatch decided to have a sleep over. As we got closer we did find some very interesting details. The cooler was hanging open. It had been rummaged through. The hot dogs were untouched (does that tell you anything)?, and the chips were scattered all over the ground. Not at all how we left it. Mind you there was no alcohol or drugs on our camp out, because none of us touched the stuff on excursions. We were too GI Joe for that. We were very conscience campers as far as neatness and tidiness goes. We ran a tight camp. A nifty little piece of evidence was the bread bag. We had two brand new bags  of bread and buns. None of us had any bread the night before. Neither of us had any bread with our dogs. The twisty tie still remained intact. There were no claw marks or reminisce of saliva. The bags had been simply pulled apart as if a human did it. Not a crumb left. We had plenty of footage to rummage through. But we knew it wouldn't be a good idea to play Sasquatch yells out in the middle of the woods, for fear we would call the tribe. Hey, we were nineteen and twenty years old! So when we got back we started the player. To our immediate disliking was our apparent lack of knowledge with audio expertise, the sound was very distorted. In attempt to capture every single noise we cranked the volume as high as it would go when recording. All this did was gather the sound of the motors of the machine running most of all. But there was sound! It was not a complete failure! Immediately the haunting shrills were apparent. I felt the hair raise on the back of my neck, reliving these moments in my mind. We heard ourselves leaving the campsite yapping like the scared kids we were. Our Sasquatch calls were captured. Now what to do? Another surprise hit us about two weeks later. With several attempts to go on another camping excursion, all failed. I am not sure if it's because we were all deep down still recuperating from our last Bigfoot adventure, or if we just were too laid back into our boring small town lives once again. My mom called me at work and mentioned about a Bigfoot researcher being in town and he was on the six o clock news. She taped it on our old clunker Beta machine and I watched it when I got home. Enter Robert Morgan, Anthropologist. Bigfoot hunter. It's just what we needed. I immediately called the news channel and requested Robert Morgan's phone number. Soon after I was in touch with Morgan. He asked if I meet him at his office in the city of Canton. Apparently, there had been many sightings of Sasquatch in this area at this very time which is why he was there. This amazed me, I had no idea. He pointed out to me that there were in fact lots of sightings here and in PA. From that point on I heard stories all over from that area and in Columbiana County. Morgan reviewed the tape & then had Pete and I fill out reports for him. Joe did not come. He was still pretty shaken up to even talk about it. In fact we have not discussed it until just recently. The next step was revisiting the site.  I had ultimately realized I had done all the right things to avoid a confrontation with a Yeti. He combed the site, and between that and our description of what happened,  speculated that we had been involved in a territorial dispute with two or more young males. Us being the dispute. Apparently they liked the pine needle bedding more than we did, and the local water hole. What he said made sense. Fourteen years later, the mystery is still there. What would have happened if I would have had the courage to stay? I don't know or will I ever. I would be joking myself if I thought these days I would have stayed longer. When I close my eyes and imagine that night 11 years ago, the hair still stands on my back. The fear of the unknown always gets the best of me. We had left Robert Morgan with our original sound recording. The next time I tried to call Morgan he had already left the state to do research elsewhere.  I know it wasn't the best recording, but it was our only evidence of this encounter, and clear enough to hear. I was so excited when I heard the Columbiana County recordings because the sounds were so like ours. I recently got back in contact with Robert, and it was nice to hear he did remember us and our recordings. Morgan was extraordinarily helpful then, and even more so now. That day was a special day for me. It showed me scientists aren't the big dogs they make themselves out to be. If there was no mystery in life then it would be too predictable for everybody. It was a day that took a large chunk out of my ordinary life and threw me right into my own X-FILE. It was scary, exciting, mysterious, thrilling and suspenseful all rolled up into one. The skeptic in me sometimes says, I just imagined all this. Like a mass hypnosis or something. It all seemed so real, but couldn't have been. The rational side of me butts in and says, this really happened, no matter how unbelievable the situation was, and my friends were there to witness it. It was amazing, and I would invite it to happen anytime of day or night again. I love the mystery of it, and that there are so many opinions out there, but I know the real truth. It's not a mystery to me at all anymore. Keeping themselves hidden so well that it lights a little flare of rich thought in all of us. These woods people have stayed hidden for as long as they need to be. They have to be really good at it to avoid all the people fighting to get footage with tripwire cameras and such. I walked into those woods as the king, and walked out a far less than that. All out there that have experienced this can relate to the amount of vulnerability associated with this. What I seen and heard was not a Harry And The Hendersons! I didn't get the chance to have smores with it. I'm not saying it was mean either, but damn persistent. No closing comments here. Just a great experience into the unknown, that I can call my own. That's enough for me.","location_details":null,"county":"Stark County","state":"Ohio","season":"Summer","title":"Report 17189: Close encounter remembered and possible vocalizations heard and recorded near Minerva","latitude":40.75079,"longitude":-81.27147,"date":"1991-08-15","number":17189,"classification":"Class B","geohash":"dpnpyd7yt3","temperature_high":84.6,"temperature_mid":72.5,"temperature_low":60.3,"dew_point":57.6,"humidity":63.7,"cloud_cover":65.4,"moon_phase":0.18,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1015.6,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":7.6,"wind_bearing":268,"wind_speed":17.6,"id":193},{"observed":null,"location_details":"Near the line between Stark and Carrol counties","county":"Stark County","state":"Ohio","season":"Unknown","title":"Report 5030: Flap of sightings offers clues pointing to deer predation, similar to evidence found elsewhere in Ohio","latitude":40.75872,"longitude":-81.19895,"date":"1992-01-15","number":5030,"classification":"Class A","geohash":"dpnrb7bsz2","temperature_high":22.1,"temperature_mid":17.1,"temperature_low":9.7,"dew_point":11.3,"humidity":77.9,"cloud_cover":74.7,"moon_phase":0.36,"precip_intensity":0.059,"precip_probability":100,"precip_type":"['snow']","pressure":1013,"summary":"Partly cloudy throughout the day with late afternoon snow.","conditions":"Snow, Partially cloudy","uv_index":null,"visibility":9.9,"wind_bearing":230.9,"wind_speed":19.6,"id":194},{"observed":"One morning between 6 & 7am in Feb./March 1995, I was driving west on Baum road in Stark County, Ohio. Just past where (.....edited.....), there's a small pond. At that time, there were large bushes growing on the east side of the pond. I travel that road a lot and it became habit to glance down at the pond to look for deer. On this particular morning, I saw what, without a doubt, was a large fur covered creature. He was squatting in front of the bushes at the edge of the pond and was using his right hand to drink...dipping into the water. A friend was in the car with me, we were going to breakfast, she saw the exact same thing. We didn't talk about it or even acknowledge that we'd seen anything. Frankly, I thought I couldn't possibly have seen what I saw. Finally, I asked her if she'd seen anything at the pond. She described the same scene. We were too stunned/awed to go back to turn around for a second look.","location_details":"The pond is clearly visible from the road but on private property.  The only change to the pond is that the owner tore the bushes out about 2yrs ago.  The pond is usually covered with algae in summer.","county":"Stark County","state":"Ohio","season":"Winter","title":"Report 2850: Two friends witness tall, hairy creature drinking from a pond","latitude":40.74065,"longitude":-81.35575,"date":"1995-02-15","number":2850,"classification":"Class A","geohash":"dpnpu8we3x","temperature_high":42.2,"temperature_mid":33.7,"temperature_low":20.9,"dew_point":27.4,"humidity":78.6,"cloud_cover":100,"moon_phase":0.5,"precip_intensity":0.319,"precip_probability":100,"precip_type":"['rain', 'snow']","pressure":1014.4,"summary":"Cloudy skies throughout the day with a chance of rain or snow throughout the day.","conditions":"Snow, Rain, Overcast","uv_index":null,"visibility":5.4,"wind_bearing":167.7,"wind_speed":21.9,"id":195},{"observed":"Yesterday up the road from my house a friend and I actually saw a bigfoot in the daylight about 6 pm.  As i stated on the 99 incident at my home this must be a route they use after what we saw yesterday.  We are going to go look for prints today. We we driving down the street and at the top of the hill I saw something dart past a telephone pole on my right.  It was very fast and my first reaction was that its a jogger dressed in black, just like in 1973 and I said nothing but as we got to the intersection my friend says \"where'd he go\" and I said \" did you see something dart up in the woods?\"  He said yes.  We turned around right then and there and went to look in the woods.  There was nothing there.  Nothing moves at that speed.  By the way we live just west of Alliance Ohio where there have been sightings.  Maybe this is a route they use?? Thing was all black and had a long torso with very tall long arms that were swinging in a forward motion when it was running.","location_details":"just off us state route 30 south out of E. Canton.","county":"Stark County","state":"Ohio","season":"Winter","title":"Report 1851: Two men see see a hairy creature running into woods","latitude":40.77789,"longitude":-81.25768,"date":"2001-02-24","number":1851,"classification":"Class A","geohash":"dpnpyzmuqv","temperature_high":46.3,"temperature_mid":32,"temperature_low":22.1,"dew_point":20.7,"humidity":64.1,"cloud_cover":81.4,"moon_phase":0.05,"precip_intensity":0.012,"precip_probability":100,"precip_type":"['rain', 'snow']","pressure":1027.6,"summary":"Partly cloudy throughout the day with rain or snow.","conditions":"Snow, Rain, Partially cloudy","uv_index":null,"visibility":8.4,"wind_bearing":119.7,"wind_speed":16.1,"id":196},{"observed":"On October 22, 2010, I was driving home from work, it was approximately 8 pm at night, and I was driving on a country road out behind canton airport when my headlights hit something huge standing at the side of the road..my mind couldnt make sense of what it was, all I knew was the hair stood up on the back of my neck and I felt the need to get past this thing very fast..so I sped up..and it was just standing...right at the edge on the line at the side of the road towering...it wasnt moving..yet there was some sort of movement like the wind blowing something..I was so terrified that as soon as I got past it..I checked my rearview mirror and whatever it was was gone..the next morning in the light..I checked the whole area on my way past to work and there were no trees, as was suggested by friends..nothing but farm fields and a low hedgerow..I know without a doubt what this was..this was Stark County, Ohio.It was as if this thing was just watching, I know this isnt funny but it reminded me of the snuffaluffagus on sesame street..thats how huge it appeared..I called my daughter right away and had her talk to me until I could calm down. Ive had others say..it could have been a cow..or a tree..and I say..does a cow stand upright alongside the road just chilling and watching...and how does a tree move from a field onto the edge of the roadway?","location_details":"Once you get out of Green, it its before you get to Malboro on the backside of the airport before you get to 44.","county":"Stark County","state":"Ohio","season":"Fall","title":"Report 28998: Motorist has possible roadside sighting at night west of Alliance","latitude":40.90177,"longitude":-81.26729,"date":"2010-10-22","number":28998,"classification":"Class B","geohash":"dpq0wtyynf","temperature_high":55.2,"temperature_mid":44.2,"temperature_low":33.7,"dew_point":30.8,"humidity":61.1,"cloud_cover":35.3,"moon_phase":0.5,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1020.1,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":9.9,"wind_bearing":271.4,"wind_speed":15.9,"id":197},{"observed":"It was toward the end of summer in September 2011 that I had my sighting of a tall hairy bipedal creature. I went to bed around 9:30pm on September 5th and it was a warm summer night approximately 70 degrees outside. I usually don’t get much sleep as I get older and it seems to get worse the older I get. I had awakened at about 2 a.m. in the early morning of the 6th, I had decided to go outside and smoke a cigarette because I don’t smoke in my house. I proceeded to the living room where the french doors are located to go out to the rear deck on my house that is positioned on the S.E. Corner of my house. I walked out on the rear deck and I stood there just in front of the french doors where the ashtray was sitting on the hand rail and I noticed that the moon was mostly full and set in place and that the temperature was rather warm. I was facing my back yard and enjoying the moon light and I might have been there for approximately two to three minutes when I heard a low guttural growl coming from my left from the cornfield. I live on a dead end street and the property that is located beside me is a corn field that belongs to a gentleman that lives up the street. There is a single line of large pine trees that divide my property from the corn field and as I looked over to my left after hearing the growl I couldn’t see anything even though the moon was shining in my direction. I still continued to stand there and about one minute later I heard this low guttural growl once again. I proceeded to extinguish my cigarette and walk back into the house not telling anyone about what happened. The next night I went to bed approximately ten p.m. and again I couldn't sleep and had awakened about one a.m. and  I got up and headed out to the rear deck totally dismissing what I had encountered the previous night. I was standing in the same area again enjoying the warm night and the moon was only showing at about sixty percent but it was still bright and very little clouds that night. The same thing occurred again, it must have been a few minutes as I stood there and I heard the low guttural growl coming from the same area from my left. This time it seemed to be a bit louder and I looked over between the pine trees but I couldn't see anything but darkness. I originally thought it might have been a bear but after checking bear sightings I dismissed it because none  has been reported for my area. At this time I am getting a little nervous because whatever this was it sounded extremely large and seemed to have a large set of lungs. I proceeded back into the house and just as I entered through the door way my wife had gotten up and she was headed to the door to go out to the rear deck. I stopped her and told her about the growls that I have been experiencing that night and the previous night. She replies with “I know,I have heard them before” and with a look on my face I thanked her for not telling me. I hadn't went outside at night for the rest of the week because I had no idea what was lurking in the shadows and I didn't know if it was still hanging around. The next day I had contacted my oldest son and told him what was going on around the house and he said he could come over on Friday the ninth after work and we could check things out. Now it's Friday the ninth and I got home from work at about 5:30 that day and my oldest son was already at my house waiting on me. We proceeded to walk through the the tree line that connects to the south eastern corner of my back yard and it runs along the edge of the corn field and as we were walking through we started to notice strange stick structures that didn't make sense and it seemed to rule out something done by nature. We finally got to the end of the tree line and it meets a large field with tall grass that gets five to six feet high and part of it seems to be swampy and has some cat tails growing on the one side. The temperature that day was warm and sunny with very little cloud cover and no rain but the ground of the field still seemed to be wet and muddy and definitely a paradise for ticks. My son and I made it partially through the field and we stopped to look across the field toward the wooded area and we were facing the south eastern direction over at some crab apple trees that was located on the tree line on the other side of the field. We were standing side by side and out of my peripheral vision I noticed some movement out of the corner of my left eye at the edge of the tree line that was approximately two hundred feet from where we were standing. I asked my son if he had seen the movement as I pointed in the direction of the wooded area and he relied “No I didn't see it” I then said lets go investigate that and see what it could have been. It was about five fifty p.m. by that time and I didn't know if it was deer or anything else because I just saw the movement but couldn't tell shape or color of the subject in question. We finally made it through the field to the tree line and there was a small creek about three foot wide with very little water flowing through it and we also noticed a trail where the deer had been crossing that creek in that same area and it was heavily traveled because the tree roots were showing. We both jumped across the narrow creek and started to walk the deer trail which followed the edge of the narrow creek and I told my son that I was going to check the creeks edge for any type of prints because I know I had seen something move over in that area. My son elected to wait up on the trail while I was searching the creeks edge. I was looking on both sides of the creeks edge when my son alerted me and wanted me to come look at something that was odd to him so I proceeded up the small embankment and walked over to where he was standing. He said “stand where I am and follow the creek down to a large tree on the creeks edge and tell me what that is”. I looked down to the tree which was about a good three hundred feet and I noticed something dark that seemed to be squatting behind that tree but I couldn't tell what it was but I know it wasn't moving so I dismissed it as a log or tree stump. I went back to the creeks edge to continue looking for any type of prints in the soft mud but came up empty handed. I told him we should go into the woods a little deeper just to see what else we can find and I walked back up to the deer trail and just for curiosity I went to the spot where I previously stood to look down to the large tree where we both seen that dark object and this time the area looked different. We walked the deer trail which followed the narrow creek and had noticed the narrow creek tees into a larger creek that was about 15 foot wide but we didn’t see a good spot to cross until we followed it a little farther and we had found a shallow spot that we could cross. Once we crossed the larger creek we split up and I headed south and he headed north and I had been looking around for about five minutes and I heard him call my name and wanted me to go to his location. I walked over to where he was and he was standing in a small clearing that had the greenest grass I had ever seen and this clearing was surrounded by thick brush in the shape of a U. He had noticed an unbearable smell in that area and he asked me if I could smell it and I replied “Yes” but then I asked him what it was because we couldn't pinpoint what type of smell it was because it had a combined odor of rotten eggs and rotted flesh. We both started searching that immediate area for a possible dead animal or anything that could have made that nasty odor. We didn't come up with anything and it was starting to get about 6:30 that night so I told him that we should go but we can come back another time and he agreed. We went back to the large creek and crossed over and walked along the deer trail until we got about twenty feet from the area that we had originally crossed the small creek that took us to the field with the tall grass and he was walking in front of me he stopped and he was looking to his left and I asked what he was doing. He said “look” and as I looked over to my left I couldn't see what he was looking at so I asked him again what he was looking at and he pointed to his left and told me to look with a more stern voice but yet again I couldn't see because I had a tree and limb covered with leaves obstructing my view. I hunched down about six to eight inches to look below the limb and about 100 ft. from us we saw a huge hairy creature standing in a bipedal fashion with a forward gate staring in our direction. There wasn't much between us and this creature but some brush and small saplings and as we stood there in amazement because of the size of this human looking creature I asked my son what it was doing and he replied “It's moving its upper body back and forth” at this time I really don't think that it had set in to our minds what we were exactly looking at but I can say that it seemed as though time stopped and I have no idea how long we actually viewed this thing. We both just stood there and watched this thing and we never moved an inch because I think we were in shock from the massive size. This unexplained creature appeared to be at least seven and a half foot tall and had to weigh a minimum of six hundred pounds. The hair was a dark reddish brown and it had a matted and dirty look to it and most of the face was covered with hair but from what you could see it appeared to be of human trait. The ears were covered with hair and it was standing at an angle to us but I could see the legs were extremely muscular and large and the arms length seemed to go just slightly past the knees. I just couldn't help but to stare at this creature because I couldn't believe the size and just how big it was. I believe that as it was swaying its upper body back and forth because I knew that it knew that we were there but I don't think it knew what our exact location was and it was trying to find us as we were kind of hidden behind some brush. It seemed as my son and myself broke out of some type of hypnosis I looked at my son and said “we need to go”. He agreed and he said he was running but I told him not to run and that we would walk out but we can keep an eye and see if we were going to be followed. We finally made it to the small creek and jumped across and headed across the field with the tall grass as we kept looking behind us to see if we were being followed but didn't notice anything. We made it across the field and took a short cut through the corn field and as we both stepped into my back yard we turned around and looked in the direction of where we just came from and just slightly north of us in the wooded area we both heard two really loud tree knocks and my son looked at me and asked if I heard that and I said “Yes I did”. To this day I will never forget what I had seen that day and I will remember it like it was yesterday and nobody can convince me that it was anything else other than what we call bigfoot. From that day I vowed to become a researcher in the bigfoot world and my goal is to get enough proof of this creature so it can be recognized to mainstream science and documented so we can protect this creature and its habitat.","location_details":"About 1/4 mile north of Route 30","county":"Stark County","state":"Ohio","season":"Summer","title":"Report 42745: Strange occurrences outside a home lead to a daylight sighting by a father and son near East Canton","latitude":40.79438,"longitude":-81.31219,"date":"2011-09-09","number":42745,"classification":"Class A","geohash":"dpq0jdqk2x","temperature_high":76.7,"temperature_mid":67.5,"temperature_low":63.9,"dew_point":62.6,"humidity":85.2,"cloud_cover":84.6,"moon_phase":0.4,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1013.1,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":4.4,"wind_bearing":308.4,"wind_speed":6.5,"id":198},{"observed":"My incident occurred on the 4th of july in 1995 in the CVNRA in Boston Twp(?), Ohio. I was in the Army, home on leave at the time. Three of us(myself, cousin, and a friend) had just left the Independence fireworks and decided to go for a night hike on the railroad tracks which run paralell to Riverview Rd. near Brandywine Ski Resort. This was a hike we have made several times before in varying locations along the same road without incident. On this particular hike, we parked in a public lot on the corner of riverview and vaughn rd. and headed north on the Cuyahoga Valley Line tracks. I would say the time was around 11:30p.m. and the sky was clear with a very bright moon. We hiked approx. 1/4 mile when all of a sudden we heard a distant, high pitched scream from the west... across riverview rd. The scream sounded similar to that of a coyote or peacock...only it was raspier and lasted about 5 sec. in duration and did not waver. We shrugged it off as some sort of animal and continued on. As we hiked the tracks, we got to a clearing that has a marsh/swamp to the west between the tracks and the road and tall weeds/brush/trees to the east. As we passed through this clearing, you could see beavers swimming in the swamp and hear typical summer insects and frogs. We entered a heavilly wooded area where some railroad cars and equipment were parked, nosed around for a few minutes and decided to head back. We were talking amonst ourselves as we entered the clearing again when a second, VERY powerful, angry roar came from the middle of the swamp. Once again, it was higher in pitch than what one would normally associated a \"roar\" to sound like, only this time, it lasted much longer(about 8 to 10 sec.)and was very close(approx. 50 to 75 ft.) The three of us froze dead in our tracks an barely uttered \"what the F*** was that!?!) when a very large creature came charging through the swamp right at us. All we could see was a silhouette, but it was definitly upright on two legs, swinging its arms and a massive torso as it was running through the water. This thing was actually making waves and moving extreamly quick for being chest deep in muck, water and cattails. The three of us sprinted back towards the car, occationally looking back to see if it was following us. We could see the silhoette at the edge of the swamp, but it never left that spot or climbed up onto the tracks. This happened over eleven years ago and I remember it as though it were yesterday. I would also bet that this was no prank...given the shear size and the power at which it muscled through the water. Not to mention the scream it made. I still live in the area (Richfield) and pass through this spot on a regular basis. Although I have never seen or heard anything like this since, it still gives me goosebumps when I drive through the area... my wife thinks i'm nuts!","location_details":"From RT.82 in Brecksville, OH., Head south on Riverview road approx. 5 miles. Vaughn road will be on the left with a bunch of yellow houses/buildings belonging to the park service. There is a public parking lot on the NE corner.","county":"Summit County","state":"Ohio","season":"Summer","title":"Report 15885: Possible confrontation with hikers at night in Cuyahoga Valley National Park","latitude":41.29621,"longitude":-81.5745,"date":"1995-01-04","number":15885,"classification":"Class A","geohash":"dpmfztxrb7","temperature_high":17.4,"temperature_mid":12.6,"temperature_low":9.6,"dew_point":3.9,"humidity":68.1,"cloud_cover":71,"moon_phase":0.11,"precip_intensity":0.013,"precip_probability":100,"precip_type":"['snow']","pressure":1026,"summary":"Partly cloudy throughout the day with late afternoon snow.","conditions":"Snow, Partially cloudy","uv_index":null,"visibility":8.2,"wind_bearing":251.1,"wind_speed":17.4,"id":199},{"observed":"I know of a friend who saw a bigfoot behind Boston Mills Ski Resort in the Cuyahoga National Recration Area in 1990. He faced it and described it as the pictures others have scripted. I saw a bigfoot in 1995, in the evening, at around 9 p.m., running. It was at least 7 ft tall, hairy, and fast....in a weird way. I saw it running across route 82 in Sagamore Hills Ohio. It was running along the bike path which is located near a small Plaza with a Marcs located in it. It was dark, but I know it couldn't be human and it wasn't a bear, for it was more upright. It ran too fast and was too tall for it to be a man. It was hairy, but we were driving 45, so I can't get detailed. I think you should look into observing the CVNRA, especially behind Boston Mills Ski Resort. Start at Blue Hen Falls.","location_details":"route 82 or Brecksville Rd in Sagamore Hills by Marcs. It is located close to Route 8 which is off of 480, the Ohio turnpike or 77N.","county":"Summit County","state":"Ohio","season":"Winter","title":"Report 13882: Road crossing sighting outside Cleveland - St. Rt. 82 near the CVRA","latitude":41.31609,"longitude":-81.56152,"date":"1995-03-11","number":13882,"classification":"Class B","geohash":"dpq5012ewv","temperature_high":60.7,"temperature_mid":45.2,"temperature_low":31.9,"dew_point":28.2,"humidity":52.7,"cloud_cover":14.6,"moon_phase":0.33,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1026.8,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":null,"visibility":13,"wind_bearing":209.6,"wind_speed":17.3,"id":200}]","status":200,"url":"http://localhost:3000/api/posts?page=19"},"revalidate":31536000,"tags":[]}