{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:23:23 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"","status":200,"url":"http://localhost:3000/api/posts?page=109"},"revalidate":31536000,"tags":[]}