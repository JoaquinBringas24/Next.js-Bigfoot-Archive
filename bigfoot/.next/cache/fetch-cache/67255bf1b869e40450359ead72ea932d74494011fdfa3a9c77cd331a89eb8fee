{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:34:35 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"I had a little pony I was riding and I was supposed to meet a friend (Holly) by this little village.  I was riding bareback that day, and as my pony (King) came to the top of this hill, (we were on a little back road) he suddenly stopped dead and braced himself and put his ears straight forward.  (As though he were looking and listening to something)  I looked down the road, and about 400 feet away, I saw this big reddish brown thing on the road, (which happens to be the same color as Hollys horse)  and it was moving toward us.  Keep in mind this all happened so very quickly, but at the time it seemed like everything was going slowly. My first thought was, oh, Holly must have got thrown and her horse is heading back to the barn.  But as I was thinking this, the thing was getting closer, and I could see it was very big, it had LONG reddish brown hair, and it's arms were swinging back and forth as it walked toward us.  (It had very long arms)  As I suddenly realized that this was Bigfoot, my pony (on his own) reared up and turned at the same time, and took off running back down the hill we had just come up.  Believe me, I had to hang on, my biggest fear was falling off, and Bigfoot 'getting' me.  I made him turn into this ladys yard at the bottom of the hill, and I yelled and screamed till she came out, then she went in and called my uncle.  My Uncle showed up, and followed me in his truck till I got the pony back to the barn, then he had me get in the truck and we went back to where I saw Bigfoot.  He got out and looked at the woods along the road, and he did find a place where the branches had been broken as if something had left the road and went into the woods.  This was all reported to Stan Gordon, many years ago. The only things I can really say, as far as being descriptive, are that it was very, very quiet that day.  It also seemed as if my pony and I were hit at the same time with the knowledge that this was not something 'normal' coming toward us.  We both reacted together, (thank goodness cause being bareback, I almost slipped off). As far as Bigfoot himself, he was very tall, but also very broad, a stocky or sturdy kind of build.  He had reddish brown LONG hair all over, although his head seemed like there was less hair, and it was small in proportion to his body.  I did not see his face.  His arms were very long, and they just swung back and forth as he walked.  For some reason, those long arms stand out in my mind.  Anyways, it doesn't matter to me anymore (after all these years) if anyone believes me or not.  I know what I saw.  Oh, and when I saw Holly later that day, I HAD to ask her if she had got thrown off her horse while out riding.  She said no.","location_details":"I don't know know the names of the roads, all I can say is it was on the outskirts of Keystone State Park, Derry Pa.  This is a little back road that leads to the village of Superior, Derry Pa.","county":"Westmoreland County","state":"Pennsylvania","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":1089,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":811},{"observed":"i was driving home late from dropping off my girlfrend about 11pm i was approaching an intersection on a back road when a movement caught my eye something crossed the road in front off me. it took about 3 to 4 steps to cross the road. all i made out was a huge manlike form about 25 to 30 yards away then disapear through the trees on the other side of the road. i stopped. at first i thought that maybe it was aperson but quickly realized there was no vehicle except mine. i have lived in the area all my life. im not crazy i have had every animal known cross in front of me while driving from a mouse to a bear and nothing absolutly nothing moves that fast or looks the way it did. i have been past that spot hundred of times and never seen it again. i did return the next morning and although there were no tracks there was a clear path through the field were it crossed. i from the waist down was clearly in view the uper half was shadowed. everybody said oh deer or bear.i say no not on 2 legs.  i can take enybody to the exact spot where it happend. im and not lying just interested in sharing my sighting","location_details":"route 780 from new kensington  towards apollo turn left at alcoa research go about 1 to 2miles to intersection see sign oak lake golf course your there","county":"Westmoreland County","state":"Pennsylvania","season":"Fall","title":"Report 14677: Late night road crossing near Apollo","latitude":40.5258,"longitude":-79.6575,"date":"2006-09-02","number":14677,"classification":"Class A","geohash":"dppqe37pvs","temperature_high":57.3,"temperature_mid":55.6,"temperature_low":54.4,"dew_point":52.9,"humidity":90.7,"cloud_cover":99.7,"moon_phase":0.33,"precip_intensity":0.502,"precip_probability":100,"precip_type":"['rain']","pressure":1017.9,"summary":"Cloudy skies throughout the day with rain.","conditions":"Rain, Overcast","uv_index":null,"visibility":7,"wind_bearing":21.7,"wind_speed":11.3,"id":812},{"observed":"I picked up my uncle from work. We were traveling down Rt. 66 towards Delmont. We were traveling up the hill where the rvs are sold on the right hand side near the gas facility. I was driving at 45 MPH When my uncle says \" what the hell is that?\" I asked what he saw and his reply was \" what ever it is it was walking on two feet. The sighting was quick no longer then 5-6 seconds at a distance of 70 yards on a cloudless moon lit night.My uncle said the subject was walking up the steep embankment that is covered in almost a foot of snow and bare of trees or brush behind the rv building on a horizontal path on two legs towards the woodline on top of the hill. He described the color as a uniform black. With no distinguishing clothing. The size he said was at least his size maybe bigger. my uncles is 6'4\" and 250 pounds and he even said it was the size that caught his eye. We can't think of any reason a person would try to traverse such a steep incline or even going to the top of the hill cause there is nothing but woods once u reach the top. My uncle said it was spooky because he couldn't think of any reason either. I laughed and jokingly said it was bigfoot and with that my uncle started rambling about even if it was. No one would believe us. So I am contacting u to see if you guys could maybe solve this for us.","location_details":"None","county":"Westmoreland County","state":"Pennsylvania","season":"Winter","title":"Report 44309: Beaver Run Reservior area, 28 miles East of Pittsburgh, motorist sighting around midnight in Winter","latitude":40.43163,"longitude":-79.58031,"date":"2014-02-16","number":44309,"classification":"Class B","geohash":"dppqj077k6","temperature_high":25.9,"temperature_mid":18.7,"temperature_low":11.2,"dew_point":11.8,"humidity":74.2,"cloud_cover":91.4,"moon_phase":0.56,"precip_intensity":0.032,"precip_probability":100,"precip_type":"['snow']","pressure":1019.1,"summary":"Cloudy skies throughout the day with afternoon snow.","conditions":"Snow, Overcast","uv_index":null,"visibility":6.3,"wind_bearing":273.2,"wind_speed":11.7,"id":813},{"observed":"Our family has some property down in deep East Texas at the top of what is called the Piney Woods region.  We have about 200 acres with open pasture fronting a farm-to-market road and pushing back into the middle of the property and heavy woods in a U shape on the sides and back into the back of the parcel.  There are two stream that originate on the land and another that passes through; two in the east woods, one in the west.  On the east side the woods are many miles deep going back across other properties and all the way over to some river bottom land where the Neches River runs through that part of the country. Anyway it was early spring before the leaves had come out and everything was still fairly dead looking except the evergreens.  I was out playing 50 yards from the trailer on the outside ring of a tall stand of large trees and about 250 yards from the edge of the forest.  It was about dusk, just before dinner time, but there was enough light to clearly see down into the edge of the forest.  I kept getting the willies or the feeling that something was not quite right and for some reason I was drawn to look to the east woods tree line - like I felt I was being watched, but I don't think I would have put it that way at the time.  I just stopped playing ( I had just come down from climbing a sweetgum tree and was looking for lizards at the base) and kept looking at the tree-line several times.  About the second or third time this happened I noticed a low evergreen shrub (in the shadows of the woods even evergreens look kinda grey/brown or just darker than the surroundings) or at least a dark pear shape that I took to be like a small bushy cedar just inside the forest canopy - I thought something like \"that sure looks like a big person shaped bush . . . \" and probably thought it looked creepy or something.  A few moments later the feeling was so strong I stood straight up and looked right at that bush - no scanning the line - that bush was what I focused on. I must have stood there stock still for a solid 20 count just staring at this shape when I got the shock and, frankly, the fright of my young life!  The damned thing stood up and ambled off into the woods!  Down into a streambed and up the other bank off into the forest to be exact!  It looked just exactly like a very large man wearing a solid dark fur parka pulled up over it's head only there's just no way it was a dude in a coat - there was no variation in clothing, no lines, waving flapping wrinkling nothing.  I can tell you I was jolted with fear like nothing you can imagine - first to realize I had been observed for all that time and second by something big and very monster looking to me at the time (I was eleven).  After it was gone I ran into the house crying that I had seen a monster in the woods.  My father dismissed the entire affair as a black cow down in the woods, but I've been out in those woods all my life and even had the cows come up on me in the woods while I was camping out - that was no cow. On a side note, although I've never again seen anything fishy down at that property, there have been reports in Rusk County over the years, which is just one county south of Cherokee County.  Also, when my father and I were discussing this event recently my dad pointed out something I thought a bit odd.  We have sometimes heard the thunderous pounding of our entire herd of cows running up through the pasture away from the woods, always at night, and always up from the woods.  Who knows, maybe there's something passing through.","location_details":null,"county":"Cherokee County","state":"Texas","season":"Spring","title":"Report 2379: Man recalls childhood experience with bigfoot","latitude":31.90791,"longitude":-95.01264,"date":"2003-10-22","number":2379,"classification":"Class A","geohash":"9vsmtbtvj1","temperature_high":89.5,"temperature_mid":72.1,"temperature_low":58.4,"dew_point":56.3,"humidity":60.1,"cloud_cover":0,"moon_phase":0.91,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1014.4,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":null,"visibility":9.6,"wind_bearing":274.7,"wind_speed":7.9,"id":814},{"observed":"This sighting was told to me by a man that I have known for over 20 years. We have hunted and fished many times together over the years and I have never know him to tell tall tales. He is very respected in the community where he lives. He said that he had been cutting a load of firewood and was coming down a dirt road that goes from the bottom of the canyon on the Snake River and goes up into the timber. He said that it was hunting season and from one place on this road he could look down the mountain and he thought he could see a bear by a salt box. These salt boxes are put out by ranchers to put blocks of salt out for cattle. He said his intention was to shoot this bear so he hurried down the road in his pickup. There are many switch backs coming down this road and so at times he couldn't see this thing. When he finally could see it again he was about 400 yards from it. He said that it stood up on its hind legs and quickly walked about 40 to 50 yards where it went down into a steep creek bottom. He said that if it was a person that the person would have been dressed in dark brown or black clothing from head to foot all in one color. He said that it was over 6 foot tall. He also said that there were no other vehicles in this area and no other roads into this area. He said that he didn't stop and go look for foot prints and that he just kept on driving past the spot but with a very funny feeling about what he had just seen.","location_details":"I am a little ruluctant to say exactly where this sighting occured. The person that gave me this information probably doesn't want a lot of people to know about it. I will give the exact location to an investigator if they wish to contact me.","county":"Baker County","state":"Oregon","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":650,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":815},{"observed":"I was in Oregon up in the mountains at the Cornucopia Ghost Town. My older brother and I were messing around in the creek below the ghost town and we looked up to see bigfoot running up the creek. We were a little scared at seeing what looked to be a very hairy human running up past us. It just not really looked like a human face - it was different. He kind of looked like a monkey with a human body. My brother and I ran up to where our family was having a BBQ and they ran down just to see him running into the trees. Since that day I have been very interested in this mysterious creature that has left an image in my head.","location_details":"Cornucopia Ghost town, go to Halfway Oregon and go north.","county":"Baker County","state":"Oregon","season":"Summer","title":"Report 9797: Young siblings at play have visual encounter","latitude":45.0018,"longitude":-117.2022,"date":"1996-05-20","number":9797,"classification":"Class A","geohash":"c2h8hbrfqz","temperature_high":56,"temperature_mid":46,"temperature_low":34.1,"dew_point":33.2,"humidity":64,"cloud_cover":75,"moon_phase":0.11,"precip_intensity":0.012,"precip_probability":100,"precip_type":"['rain']","pressure":1018.4,"summary":"Partly cloudy throughout the day with afternoon rain.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":22.6,"wind_bearing":122.6,"wind_speed":13.6,"id":816},{"observed":"I was among a group that spent the summer and fall on the side of mountain several thousand feet up opening old gold mines closed down due to WWII. Phone reception was poor, and I was asked by Steve to run him up to the top switchback to make a phone call.  It was sunset, I ran him up the fairly short distance to the highest switchback and turned off the ATV, walking a hundred yards or so to give him privacy. It started getting dark (it gets dark and cold that high up real fast) and I began meandering back to hopefully hurry him up. As I approached a cluster of trees right up against the switchback on the uphill side, there was the deepest growl I've ever heard - in a warning manner.  At first I thought it was a cat, but it was much deeper in resonance. Thinking this would be a short trip, I left my rifle and shotgun at camp, and only had my 1911 sidearm on me, and I wasted no time in shucking it. I was fearful for Steve, as this thing was between me and Steve who was unaware of any threat, so I slid-walked toward Steve, both arms extended at ready-fire.  I peered as closely as I could, but could see nothing due to the tree cluster and twilight. As I finally slid-walked past the cluster and was now between the previously unaware Steve, I chanced a quick look over my right shoulder to see if Steve had noted anything yet.  He had, and had also shucked his pistol, with the phone in the other hand, clearly getting off. As my head was turning back toward the low growling in the tree cluster, halfway, I was stunned to see an absolutely massive, huge, very tall creature hurrying toward the tree cluster. It actually had to slide past me to get to the cluster, so it wasn't threatening me.  It reached the cluster and I heard no further noise, steadily backing up. Had there been a cat in those trees, there surely would have been quite a ruckus, but things went silent.  I recall very clearly being not stunned by its size, but how fast it was and how quickly it covered ground.  I remember thinking, 'this thing could run down a deer.' From Steve's angle, he couldn't see it, but the thing had to run across some thirty yards of knee high (to me) growth, so I got a good look at this thing. I reached the ATV and said, \"we're leaving.\" In retrospect, after replaying this a hundred times again and again, I feel that there was either a female or juvenile in the trees, and was surprised when I approached, and growled to warn me off. This is entirely speculative, but I feel confident that the huge adult was hustling over to the tree cluster to tell the other one to 'knock it off.' The .45ACP is a very effective anti-personnel round up close.  However, when I saw the sheer mass, if this thing wanted me dead, as big and as fast as he was, he'd have had me. Steve found another location to make phone calls after that which was much closer to the camp.  Two weeks later, he came fogging it back to camp running - as he heard loud thumping steps and turned to see one running away - up the mountain. We stayed another few weeks, but I didn't get a lot of sleep.","location_details":"Elevation 7821'","county":"Baker County","state":"Oregon","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":36076,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":817},{"observed":"What I saw was a thing about 6 foot tall, all black and short hair, its body was skinny and its forearms were bigger than its biceps. It was leaning over, drinking out of a stream by the path I was walking on. It had to be very strong because wen I came walking by, it stood up on two legs very fast and grabbed on to the tree behind it to help it up the hill. This thing I saw almost looked like a monkey except way too tall to be a monkey and also way to skinny to be a bear and too fast.","location_details":"Where I saw this thing was on the outside of Philomath when you're leaving and there's a road to King's Valley.  You take that right and on that road take another right and down that road there's an old abandoned mill and beside that there's a pond and a path. If you take the path, you will see that there are little areas of connecting streams that run off the pond. I saw it drinking out of one of them.","county":"Benton County","state":"Oregon","season":"Summer","title":"Report 4846: Boy has two encounters at eastern edge of Coast Range.","latitude":44.58335,"longitude":-123.4166,"date":"2002-08-24","number":4846,"classification":"Class A","geohash":"9rbjxs4ubf","temperature_high":67.4,"temperature_mid":59.1,"temperature_low":53,"dew_point":53.4,"humidity":82.7,"cloud_cover":16.7,"moon_phase":0.56,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1018.7,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":null,"visibility":9.9,"wind_bearing":255.9,"wind_speed":8.1,"id":818},{"observed":"While on a hike during this nice sunny day, I heard a low grumbling sound. My husband was leading me along the trail and he did not hear this sound. I stopped him and described the sound to him as a sort of \"wild boar\" type sound. It was VERY hard to describe. The sound was low, deep, like a vibrating growl or snort. We looked around and listened. When we didn't hear anything for quite a few minutes, we began walking again. Not more than 3 or 4 steps down the trail we hear a rustle noise and I quickly turned to see a rock or something rather large, dark and round fall to the ground with a large THUMP! The item had landed just where I was standing only a moment before. My husband heard this large item hit the ground and we stood stunned for a moment trying to figure out where it came from. I looked around the area and found a rock about the size of a baseball sitting where the item had hit the ground. My husband and I could NOT figure out where it had come from. Was a rock in the tree and it just now fell? Did something throw that rock at us? We were a bit jumpy but kept on down the trail. About 1/4 mile along the trail we hear a loud \"whomp, whomp\" like wood against wood sound ahead of us up on the hill. I asked my husband what that was and he decided it was probably just some people doing work on the trail. I didn't believe that's what it was. It sounded too heavy to be man made. Maybe machinery, but there was no motor sound and it was a Sunday evening. I doubt workers were on duty at this time and on this day. Just then we heard the sound move and we turned to hear the same wood on wood \"whomp\" noise behind us on the trail and still above us on the hill. My husband remarked, \"If that was bigfoot I don't know how he moved that quickly!\" I told him that we could rule out trail workers and that it was quite possible that it was TWO bigfoot communicating with each other. We joked about it, but we were both very shaken. We just could not come up with a more reasonable explanation for this sound. My husband describes this sound as a person hitting a tree quite hard with a large log. After yet another few minutes of looking around and hoping to see something, we walked along the trail without answers. After this we heard nothing more and came across several hikers on the last mile of the trail. Several hikers had dogs and we didn't hear any dogs going wild barking at anything unusual. My husband and I were going to stop some hikers to ask if they had heard anything, but we didn't want to look crazy or scare them away from the trail. Other than the rock being thrown at us we didn't feel as though we were in any kind of danger. When I got home I called my father who is quite familiar with forest animals and noises. He couldn't explain where the rock would have come from, but he believes that the wood on wood sound could possibly be deer or elk. I doubt that it was deer or elk just because the trail was so populated. They would have been spooked by the hikers and the dogs... besides, the \"whomp\" sound was SO heavy and SO loud that I can't imagine a deer making such a large sound. We didn't smell anything, we didn't see footprints...but I can't think of anything else that would explain these noises and the rock being thrown at us. I just really feel as though it could have been \"Bigfoot\".","location_details":"McDonald-Dunn State forest, west on 99 north of Corvallis, near Peavy Arboretum.","county":"Benton County","state":"Oregon","season":"Winter","title":"Report 10928: Hikers hear growl, wood  knocking, have rock thrown at them.","latitude":44.6693,"longitude":-123.2433,"date":"2005-03-13","number":10928,"classification":"Class B","geohash":"9rbq5ebcwc","temperature_high":67.6,"temperature_mid":50.4,"temperature_low":34.7,"dew_point":32.7,"humidity":55.6,"cloud_cover":0,"moon_phase":0.11,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1025,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":null,"visibility":9.9,"wind_bearing":3.6,"wind_speed":19,"id":819},{"observed":"My wife and I love to take our three young children on small treks (we usually hike 3-5 miles). We live very close to Silver Falls, but wanted to venture out a bit more. We read about Mary's Peak, just outside of Philomath and thought we'd give it a try. The following is what my wife wrote in her blog last night. Here is the link, where you can find some pictures of the area we hiked http://tleraadventures.blogspot.com/ Here's what she wrote: We were disappointed to find it incredibly foggy, since it is the highest point on the coastal range, and we had our hearts set on a spectacular view. As it turned out, the fog made the dense forest section of our hike even more interesting and gorgeous. All of the plants and trees were damp and dripping from the condensation, and the clouds were swirling around us at times- absolutely breathtaking! It was very secluded, and simply serene. About half way through our hike, we heard a UAS (Unidentified Animal Sound). The best way I can describe it is to say that it was a short, deep, guttural whooping sound. Whatever it was, was clearly rather too close for our liking. We weren't really frightened, but we were unnerved enough to take safety precautions. I stopped taking pictures, and Travis & I insisted that the kids walk between us in a tight group for the remainder of the hike. The sound came and went, and at one point it became clear that there were at least two of whatever-they-were, because we realized that not all of the sounds were coming from the same direction. They were alternating, as if they were communicating. It all continued for about 40 minutes, sometimes louder and closer, other times quieter, and obviously farther away as we continued to climb the trail. Eventually, the sounds ceased altogether, and we relaxed when we finally made it out of the forest section and back into the open.","location_details":"Mary's Peak. We parked in the large parking area and walked the inner trails through the forest.","county":"Benton County","state":"Oregon","season":"Summer","title":"Report 26137: Family hears whooping sounds while hiking Marys Peak","latitude":44.50455,"longitude":-123.5524,"date":"2009-06-13","number":26137,"classification":"Class B","geohash":"9rbjhmzcu3","temperature_high":67.8,"temperature_mid":59.6,"temperature_low":54.9,"dew_point":54.2,"humidity":82.8,"cloud_cover":80,"moon_phase":0.7,"precip_intensity":0.797,"precip_probability":100,"precip_type":"['rain']","pressure":1013.7,"summary":"Partly cloudy throughout the day with rain clearing later.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":9.2,"wind_bearing":293.8,"wind_speed":13.6,"id":820}]","status":200,"url":"http://localhost:3000/api/posts?page=81"},"revalidate":31536000,"tags":[]}