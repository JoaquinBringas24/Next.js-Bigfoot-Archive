{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:26:06 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"At about 10:45 PM EDT I walked out to my work vehicle to grab a smoke and my phone. After I shut the door I heard something hit the building next door followed by \"whooping\". \"WHOOOOWHOOP\" A lower tone followed by a higher one. VERY SIMILAR to your recordings.... almost spot on. This continued for about a minute or two. Not the first time I've heard it either. I came across your site while looking for sounds similar to that then found your clips.","location_details":"Glen Roy road, Nottingham, PA","county":"Chester County","state":"Pennsylvania","season":"Summer","title":"Report 30531: Possible whoops and knocks heard from a home near Nottingham","latitude":39.73523,"longitude":-76.04183,"date":"2011-09-01","number":30531,"classification":"Class B","geohash":"dr1fj9s42z","temperature_high":77.7,"temperature_mid":69.6,"temperature_low":60.2,"dew_point":61.8,"humidity":78.1,"cloud_cover":6.2,"moon_phase":0.12,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1021,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":null,"visibility":9.8,"wind_bearing":160.4,"wind_speed":8.8,"id":901},{"observed":"I am now 57 years old. I have told many people this story but never reported it. I lived in Bradford,  Pa. Where I grew up. I was 15 years old and we played softball at nights with my friends. This incident happen on Church Street, not there now it now South Center St. but we where playing ball one night as we always did. There was about 10 of us playing in a field by the creek on Barbour St. We played until it started to get dark. We all started home in different directions. It was getting dark now and me and my friend was all that was left. So we started home. I stopped because my shoe was untied. I leaned down to tie it and my friend was waiting for me. I started to get up for our trip home when I looked behind us, seeing a very tall figure, standing about 20 yards from us. I said what is that and about that time it started running at us. We ran as fast as we ever had to get out of there. It stopped chasing us. And we to my house where we told my father. We took some flashlights back to the area. but found nothing. To this day I know what chased us. Long arms and maybe 8 to 10 feet tall. I never seen it again but heard screams coming from the hillsides very often.","location_details":"Today it is S. Center St. Sorrounded by hills.","county":"McKean County","state":"Pennsylvania","season":"Fall","title":"Report 9546: Teens chased by upright running animal near Bradford","latitude":41.9548,"longitude":-78.65621,"date":"1963-10-01","number":9546,"classification":"Class A","geohash":"dr2ndjsk3m","temperature_high":47.2,"temperature_mid":39.3,"temperature_low":33.2,"dew_point":33.4,"humidity":79.6,"cloud_cover":63.9,"moon_phase":0.48,"precip_intensity":0.033,"precip_probability":100,"precip_type":"['rain']","pressure":1017.8,"summary":"Partly cloudy throughout the day with afternoon rain.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":12,"wind_bearing":231.8,"wind_speed":14.6,"id":902},{"observed":"My encounter happened at the end of summer in 1973, or 1974.  It was late August/early September, as it was the time the blackberries were ripening. I was 15 or 16 years old, and had a dirt bike that I rode on the many lease roads in the hills surrounding Bradford.  The bike had an expansion chamber, which is an extremely loud exhaust system.  I generally rode it every day on the hill behind our house in Bradford, so I knew all the roads and trails.  My grandfather had built a lot of the roads with a bulldozer, years back, working for the Kendall Oil Company.  We had also hiked this area extensively when my friends and I were kids, sometimes camping for the night.  On one occasion when we were about 9 or 10, we were chased home by a frightening screeching in the late morning from the top of this hill. (Just two of us)  We didn’t know what the noise was, only that we had to run from it.  I only mention this as it was very close to the same area as where I had my encounter, and in my mind, the same animal. The day of the encounter, I had ridden up to the road at the ridgeline of the hill, and about a mile and a half towards the hospital area.  I didn’t turn that way and instead went straight, towards the pipeline, which is a cleared area that runs straight up and down the mountain.  I stopped there for a second, and turned back around about 1/4 mile to a group of blackberry bushes.  I shut off the bike and started picking the berries, until the bees got to me, and I took my handful of berries and walked away. I walked back to the pipeline, stopping right before the clearing, hoping to catch some sort of animal crossing the clearing.  I had been a hunter since I was very young, which is the custom in the area, and was very good at walking quietly in the woods.  As I looked down the hill from the top of the clearing, I could see what looked like a bear, digging into the log that had been placed across the pipeline to keep people from using the cleared area as a road.  I reasoned that he heard the noise of my bike going away, so he figured I was out of the area.  The stink of the 2-cycle engine also probably masked the smell of me, as well. I was young enough to think I should get a closer look, so I got myself to a point about 50 yards away and uphill from the animal, and about 25 yards from the ridgeline road.  I stood there and ate the berries and watched what I thought was the butt of the bear visible above the log.  Remember; the log was about 50 yards down a steep hill, and the log was about 3 feet tall, and crossing the pipeline.  The bear would have to be very large for me to see as much as I did, which was a good foot or more above the log, and he was on the other side of it. He seemed to be digging for bugs or something in the log.  After a few minutes of me standing still watching him, he suddenly realized I was there.  He stopped, tried to remain still for a minute, and all the time I still thought I was watching a bear. Then he stood up.  This was no bear.  It was the most surreal moment in my life, either then or now, and I’m 52 years old.  He was tall, at least 7 feet, as his knees were just barely covered by the log.  He had hair like that of a black bear’s fur that time of year, basically the same color and length, which obscured a lot of the features of his face. We both stood there frozen for a minute, staring at each other.  My thought was to get out of there, but the only movement I could muster was to drop the few berries I had left.  I started dropping berries, and he just turned and “walked” to the far side of the pipeline and into the woods, down a trail just to his side of the log. I say “walked”, because it was so smooth and graceful across that terrain, that I was completely overwhelmed.  As I said, I thought I was pretty good at getting around in this terrain, and I am.  The movement he used was so economical and efficient that I still see it in my mind and marvel.  There was very little or no “bobbing” up and down; his arms swung, but not wildly, like you would expect with an ape. The arm swing wasn’t like a tight-rope walker either, as I may have needed to do, to walk across the area he walked.  It was just smooth, amazing. I stood for a few seconds after he disappeared, then decided to get myself out of there.  I ran back to my bike and headed the other way as fast as I could.  Then I started thinking I should go see where he went.  I turned around and headed back and down that pipeline to the tree.  I got the bike to the trail he used, which is a trail that immediately takes you from light to deep shade, and stays perpetually muddy.  I have tried that trail a few other times (with the same friend who was chased with me, years earlier) and have only been able to go a few yards before I had to get off the bike and push.  I started to get bogged down, so I got back out as quick as I could. I don’t know what I was thinking, I guess I thought the noise would keep him away, but when I hit the mud I remembered that I couldn’t take that trail.  It was always creepy dark back there, too.  I wouldn’t have gone back there if it weren’t to prove to myself that I didn’t have to run away. I never looked for tracks.  This is something else that’s very strange.  I was a hunter, I looked for tracks everywhere.  The muddy trail was probably covered with them.  This has always bothered me.  I can only think that my mind was so sure that no one would ever believe me, that proof was the farthest thing from my mind.  The whole experience was so alien that I never told anyone for about 25 years.  Back then, all the Bigfoot sightings were in Washington/Oregon/California.  No one would have believed me. Maybe I also didn’t want anyone to find him.  I felt extremely special to have had this experience, and I didn’t want to betray that or the Bigfoot.  Anyone from Bradford will now be able to figure out where this happened from my story, and that bothers me.  I don’t think they should be chased.  They seem to be a very “human” animal, and maybe too vulnerable to our world and weapons. I’m posting this after having read the other “Bradford” sighting, and seeing the Elk County photos.  I did quite a bit of hunting in Elk County, and it’s very easy for me to believe that those photos show a real, Bigfoot animal.  As to the 1963 Bradford sighting, the “Barbour” Street location is very close to my sighting, and I will leave it at that.","location_details":"In the report. I will try to get google earth's coordinates, if need be. It seems pretty blurry to really be of help. Maybe send me a topographical map.","county":"McKean County","state":"Pennsylvania","season":"Summer","title":"Report 26888: Man recalls his encounter after riding his dirt bike as a young man near Bradford","latitude":41.97226,"longitude":-78.66863,"date":"1973-09-12","number":26888,"classification":"Class A","geohash":"dr2ncbg60h","temperature_high":63.8,"temperature_mid":55.7,"temperature_low":44.9,"dew_point":44.5,"humidity":68.8,"cloud_cover":50.8,"moon_phase":0.5,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1013.3,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":12.6,"wind_bearing":307.5,"wind_speed":10.9,"id":903},{"observed":"myself and two others were leaving the woods at dark after being afield bow hunting.  the three of us met in a large field on a tractor or roadway that gained access to the fields. our meeting was by accident as we never had plans to meet. we usually just meet back at our car. while walking out myself and the first guy met up and stood waiting for the third person in our party to meet with us only because we heard him walking in our direction thru the field. it was dark and we could only hear not see unless close. any how as we met we all of a sudden heard this loud scream to a gutteral sound to a load grow and heavy breathing. this took place about 70 yds away in a very small patch of woods appx. 30 yds. oval in shape surronded by 100-200 yards of field, in fact i could never figure out why this small patch of woods were ever left standing when most has been cleared for fields. anyhow when this thing made this sound one friend started to run my other friend just froze in his tracks with me. the guy who ran realized we did not join him he raced back to us and both at the same time ask me what was that. i answered that i didn't have a clue except that it was an animal of some sort and was big. just due to the length of sound that came out of this beast  meant he had to have a large set of lungs. while we stood there for 30 seconds it again made this horror scream by now i pulled a small lite from my pocket  and shined in that direction the light was not bright enough to do any good we decided it was bigger than all three of us and walked back to the car quickly i might add. we later stopped at a local store and i over heard a man speak of his coon dogs acting very strange as he drove down the road with his dogs in the back of his truck. he said that his dogs started to howl and whine as he drove past on the road we were bow hunting i could not hear the rest of the conversation but i did hear him metion the hollw we were hunting. all night i thought about that sound like the rest of our group. i decided to go back before daylight the next day to hunt that area more out of curiosity which out weight any fear i might have had. i set up a tree stand in that small patch of woods, as morning came i could see that the area was all torn up, trees scrapped up as though they were buck rubs, a large area on the ground that looked similar to a buck scrape but was fresh and about the size of a small car. any how the only animal that i felt that i could blame that sound on was that of an elk but elk in this area is not the norm although we do have elk south and slightly east of the area in pa (st.marys)  they kind of stay in that area and don't wonder like elk out in the west any how the reason i felt i should write this is due to my sister who goes by bigfoot since she has had a close encounter with one down in st. charles,MO.","location_details":"Near town of smethport or closer to a very small town called crosby in norwich township","county":"McKean County","state":"Pennsylvania","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":3570,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":904},{"observed":"These incidents have occurred over a period of approximately 7 years. The occurrences have not been limited to a particular time of year. I have never, nor has any in our group, sighted a creature. Most have experienced hearing knocks, LOUD branch breaks, hearing bi-pedal footsteps emanating from a creature much larger than a human would make, smelled noxious odors, and had that inexplicable feeling of being watched. The place is a cabin which has been in my son-in-law’s family for 4 generations. It is located on the edge of the Allegheny National Forest, off the summit of a mountain. Across the lane from the cabin is a large meadow, belonging to a local doctor. This is sometimes planted in grain crops, other times allowed to remain fallow. There are other cabins scattered along the lane; none within eye-sight of the other. My first trip was in October of 2006. There was no other activity at the other camps. My son-in-law (Eric) and I arrived about 8-8:30 at night in the darkness. Upon exiting the Jeep, I had an immediate feeling of being watched. I have spent a good deal of time in the woods, hunting, fishing, and hiking. I am not easily spooked.  After dinner, cleaning up, and sitting up a bit talking we turned in about midnight. Around 2 A.M. I was awakened by the sound of the old wooden table and chairs being pushed about on the deck. We determined it must be a bear, and went back to sleep. Approximately 2 hours later we heard something rustling about the fire pit. We did NOT cook any food outdoors, we brought in all our empty bottles and such when we came in to discourage bears and other critters. In the morning, we found the table and chairs had been moved about, which a bear or even a large raccoon could have done. However, the fire pit had been scattered about, some of the smoldering logs rolled aside. Another time, we were hunting in the forest behind the cabin. The topography is typical Appalachian mountain; rugged, steep slopes, ravines, small streams and bogs. Here and there are small oil seeps as well. We had just descended into a fairly open area which promised grouse. This was early November, crisp but not cold. We were each carrying shotguns loaded with upland game shells. We were walking approximately 50 yards apart when we stopped, looked at one another and asked “What is that smell?” From out of no-where came the most putrid, overpowering smell. It was not the oil-seeps, which have their own sulfur like smell. This was horrid! It was like a skunk on steroids, with a good measure of open septic tank, and some rotten garbage added for good measure.  We continued on our way, the smell dissipated after about 100 feet.  We tried to tell one another it was a dead deer or something; but we both knew better. I worked in a funeral home while in college; and have never experienced anything that nauseating.   We also had an unnerving feeling of being watched the entire time we were there. Upon relating the above to my daughter, Eric’s wife, she stated she has smelled awful odors for no apparent reason as well and felt like she was being watched several times. We have heard howls, far in the distance, and others within a quarter mile  or so of the cabin. There are coyotes in the area, yet these are much longer in duration, and have more range. Some start low, and rise toward nearly a falsetto pitch. Others have been more monotone yet will waver somewhat. Others will start low, and culminate in a scream. This is not a bob-cat, not a coyote, and all members of our party are accounted for. In March of 2014, a group of us went for Spring Opening. There were 5 of us there. As darkness set in, I decided to venture out to the open meadow to observe the Winter constellations. This is about 100 yards from the cabin. The cabin is situated on the downward slope from the summit, which is the meadow. The area behind and on both sides of the cabin is a fairly steep slope. It is heavily grown with second growth trees, brush, and scrub. There are also a lot of blow-down branches which makes walking even in daylight difficult. At night, it is an invitation for a sprained ankle at best. As I was observing the stars and enjoying the silence, I heard footsteps. Not in the trail, not in the meadow, but coming UP the slope to the south of the cabin. My initial thought was a bear. As I listened, it was apparent the foot falls were from a biped. I called out if it was any of our group and received no reply. Then the steps would start again. I called again, louder, and the steps stopped for a moment.  Then, they began again, finally stopping by the edge of the lane. There were no lights showing, the moon was in the final phase of its final quarter, and just a sliver. I started to return to the cabin. I was about 20 yards from where I heard the steps stop along the edge of the lane. As I drew parallel to that area, I heard shuffling of the underbrush, as if whatever it was had turned it’s entire body sideways to watch me pass. When I entered the cabin, everyone was where I had left them. There were no new leafs, mud or debris in the doorway. When I asked if they heard anything, they all said no, as they were watching Planes, Trains and Automobiles on VHS. Finally, this past Spring, a group of us went up for a weekend. While sitting about the rear deck, enjoying a fire and talking, a member of our party was encouraged to do their howl. They did. Then about 30 seconds later, the sound of a very large tree limb snapping came from down the slope behind the cabin. Could it have been a bear stepping on a branch? Perhaps, but that would be very coincidental to step on a limb just after a howl. I KNOW there is something in those mountains. I can’t prove it physically; it one of those things that you know that you know. Please keep this location undisclosed. We would hate to see a bunch of people go hunting for these creatures. They don’t deserve to be pursued and bothered. I have been needing to share this with someone who won't think I am off my rocker. Thank you.","location_details":"Witness requested location be kept confidential.","county":"McKean County","state":"Pennsylvania","season":"Unknown","title":"Report 49903: Several possible incidents over the years in the Allegheny National Forest","latitude":41.73315,"longitude":-78.93985,"date":"2006-01-01","number":49903,"classification":"Class B","geohash":"dprv7tmc0p","temperature_high":32.3,"temperature_mid":30.7,"temperature_low":28.7,"dew_point":28,"humidity":89.6,"cloud_cover":96.7,"moon_phase":0.06,"precip_intensity":0.103,"precip_probability":100,"precip_type":"['rain', 'snow']","pressure":1015.9,"summary":"Cloudy skies throughout the day with a chance of rain or snow throughout the day.","conditions":"Snow, Rain, Overcast","uv_index":null,"visibility":7.6,"wind_bearing":246,"wind_speed":8.4,"id":905},{"observed":"My wife and I took an early evening stroll on private land by our residence. We arrived at a campsite about 7:15pm and as we were sitting on a picnic table, we looked out over a small pond and noticed a leaf on a tree fluttering very fast, as if someone was intentionally doing it. There was absolutely no wind at all. To the right of this leaf was a very large black mass moving back and forth methodically. It was between a couple of medium size trees, blocking out the background behind it. The sun was hitting the exact spot, and you could clearly see a large black mass of at least 7 feet tall, and 4 feet wide just swaying back and forth...we both witnessed this from about 30 yards or less, and my wife said the face looked like a gorillas...all I could focus on was the immense size of the body...this is not the first time we had encountered something. I filed a report back in 2013 which yielded a call from the BFRO.","location_details":"Specific directions omitted","county":"McKean County","state":"Pennsylvania","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":46320,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":906},{"observed":"This story was recently told to me second hand in confidence by a very good friend of mine.  He is an Eagle Scout and an honorable man.  We are avid sportsmen and had spent alot of time together and with other sportsmen in the woods of Pennsylvania.  I told him of my interest in the Florida Skunk Ape.  I asked him if he or any of his family had ever heard or experienced any bigfoot encounters.  He told me that it was ironic that I asked because I was present when his experience occurred.  We were in Boyscouts at the time at a fall campout with our Troop, we were in the same Patrol.  Our Troop was playing \"Capture the Flag\" around dusk.  We were camping at a place called \"Hell's Hollow\" near the Greenville Sportsman Club out on Route 358.  He and another Boyscout went out in the woods to hide.  While they were hiding in some brush, they pushed a Bigfoot that rambled out of the brush and away from them at an alarming rate of speed.  He said it definitely was bipedal and was huge.  My friend stated that he was scared to death and that they made a promise not to tell anyone for fear of ridicule.  He stated that he has never told anyone the story.  I couldn't get any details as to the size or scent.  He did state that he did not see its face.  I told him of my intent to report the story and he said he would discuss it if contacted by the BFRO. ","location_details":"In the \"Hell's Hollow\" dip.  Take left off of Rt. 358 on Hell's Hollow Road.","county":"Mercer County","state":"Pennsylvania","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":3584,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":907},{"observed":"I have had two occasions to observe an unkown creature in the wood's of western pennsylvania. The first was in the fall of 1986 as a teenager I was parking in a desolate location called Hell's Hollow about 1/2mile away from a boy scout camp. I was only pulled off the road enough not to block traffic because I did not want to get stuck in the muddy lane. While we were sitting there talking a figure of large proportion walked past the front of the truck. I would guess about 7 to 8 ft tall and about 300 to 400lbs. All I saw was a large dark-brown biped about three feet in front of the truck. It ignored us totally and was gone into the thick brush. It was dark and no further observation was made. I hit the key and split, the girl I was with evidently did not see this because she was clueless as to why I made such a hasty retreat.            The second sighting occurred in the fall of 1988 in the early fall while hunting in the same area.  Actually we parked in the same place. We crossed the small creek at the bottom of the hollow and proceded west up the next hillside which is very steep. We separated to better our chances of seeing squirrels. I walked about 1/4 miles north along the ridge and sat down. After sitting there for about two hours I had seen nothing. I went back down the hill to find my friend.  As I hit the bottom of the hill and started across the creek I could see my friend looking my way.  As I got to him he just kept looking past me. I thought he had seen something to shoot at and turned.   All we saw was a dark brown or black long haired creature running up the steepest part of the hill. It took me about 3 to 7 minutes to cover that hill on less sloping ground walking down hill. This thing ran up it in about 15 to 20 seconds. (I know I would have to climb the slope and maybe need a rope to just get up it.)  It ran sort of apelike on all fours pulling its way up with the front paws. The guy I was hunting with doesn't believe in bigfoot and says it must have been a bear. Bear are around this area but are very rare. And bears don't run in such a manner as this did.","location_details":"Site is located west of Greenville 5 miles on rt 358 and left on Hell's Hollow road.","county":"Mercer County","state":"Pennsylvania","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":3647,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":908},{"observed":"Father:  I was driving to go fishing with my son, at a local fishing spot. The place is on the Cass county side of Lake Wright Patman. We were around a mile or so from the lake I would say. As I topped a hill and a slight bend I spotted a big black bear in the road. I stopped because bear in the area are rare. I had never seen one in the area but heard stories of them. I was excited because not only I was getting to see it but my son as well. Then very quickly the bear stood and turned toward us and to my shock it was not a bear at all. It was a huge thing not a bear. The thing was I would say between eight to ten feet tall, three and a half to four feet wide at the chest and shoulders. It had a large head with dark eyes either dark brown or black, a big flat nose and the face was a little lighter brown than the body. It was not black as I first thought but a dark brown almost black and its fur or hair was around four inches long. It looked like a guy who spends all his time in the gym. It had fists around the size of a canned ham, I say this because one hand was closed in to a fist and had something in it. I think it may have been male, because it had no breasts and might have had a bulge in the crotch area, but I wasn't focused on that. I am a religious man and have the light of God in my heart and Jesus is my lord. I immediately believed I was looking at a demon. I question that now, after talking to people who seem to know a lot about these things, and reading a lot over it since I saw it. Think me mad if you will but I slammed the vehicle in park, jumped out and started preaching gospel at the thing. I don't know if it is a demon for sure or not but either it is and the word of God hurt it or it just didn't know what to make of me, because it roared at me so loud and deep I could feel its vibration, like a teen's car radio. It threw what it had in its hand, it flew a few feet above us and a good long way back up the road, then it turned and ran with otherworldly speed. This all happened very fast, I could not say how fast but from the time I stopped till it was up and gone was not long at all. I stood there a moment longer thinking I just saw a demon. I got back in the vehicle to drive back and see what it threw at me. It was part of a cotton mouth with its head and who knows how much of it missing. I chunked it in the back and went home. During all of this my son had been screaming at me to get back in and let's go and he was freaked. He did not want me to stop when I turned around and was pushing me to go as fast as I could. I was not scared because a demon not dare confront a man of God. Yet now I'm not so sure that it was a demon. Son: I don't scare very easy and my dad seems to have no fear but spiders and he is a big guy and I am like him, big. He is around 300 and even though I'm only 14 I'm as tall as him and almost as heavy. He is a little fat but not too much. I'm all muscle and you can call us corn fed. My dads a hell of a fighter and I think me and dad together could take just about anything you can throw at us. But I wont lie, my dad would be disappointed in me if I did. I was scared as hell when we came up on bigfoot. He wants me to talk to someone because he is scared that I might be messed up for life lol. I was freaked and scared he was going to get his crazy butt killed and me too and i was screaming at him the whole time and then when we did go he stopped to get that stupid snake with it nearby and wouldn't even break the speed limit and that thing could have caught us at that speed and I just knew it would. But dad says there are demons and says that's why no one can kill one or find one and they don't leave bodies. I will never talk to anyone about this and am just doing this to make him happy. I don't even like doing this he stopped and started yelling at the bigfoot. It yelled back and took off thank god but I guess they must not be mean or it would have killed us. I know my dad can be very scary when he is mad and he was mad as hell when he got out preaching at the bigfoot. I am not crazy, my dad may be and now I think so even more than before. I don't know what it was, don't want to and pray I never see one again.","location_details":"I DO NOT want the exact location listed in the report because I believe it WOULD cause me problems I don't want or need nor does my son. Not only that I am unsure of these things and this is VERY IMPORTANT to me. It would cause me GREAT HARM! If a curious reader of your site went to the area looking for the thing and something happened to them because I told you about this and where it happened. Not only that but the area is a regularly used fishing, camping, picnic area and boat ramp and it would break my heart if people stayed away from it because of me. I also did not include the date because people knew we where going out there and if they put two and two together we would be revealed. Date and road number will be available on request from you professionals ONLY.","county":"Cass County","state":"Texas","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":45818,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":909},{"observed":"I was returning home from a NFL football game that I had attended out of state.  It was about 8:45pm. The road I was traveling on had a lot bends with patches of woods on both sides, broken up by houses every so often.  It is a back road that connects two towns.  The posted speed limit ranges from 10mph to 45mph.  I was traveling at about 55-60mph on the straighter sections(I was trying to get home, I had been driving for a couple of hours).  This is where it happened.  One of my good friends was sitting in the front with me.  We had the radio up loud and was singing and staring straight ahead. Two more of my friends where in the back seat talking.  As I came around a bend into a straight-a-way, with woods on both sides, something caught my vision just in the edge of the headlights(high beams).  I saw the mid and lower torso, and legs of what appeared to be a person.  It appeared to be crossing the road. I saw it take a right and then left stride and then it went into the trees on the right side of the road.  I vaguely saw the color, it was a light brown.  When I first saw the movement I thought it was a person going into the woods, this is the movement it had, however it glided with great speed.  It happened so quickly, I thought that I had imagined it until I looked at my friend sitting next to me, he was staring back at me, this made the hair on the back of my neck stand on end.  I asked him if he \"seen that\" and he yelled \"yeah\".  I had slowed down to about 40mph with the intent to stop(not really knowing what to do) when the two in the back seat yelled \"whats going on?\"  I said, me and (name of friend) saw something, and the two in the back told me to keep going, they did not want to stop.  I now wish I had. stopped.","location_details":"Lamor connects Rte 18(Hermitage) and Rte 19(Mercer) in Mercer County.","county":"Mercer County","state":"Pennsylvania","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":3401,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":910}]","status":200,"url":"http://localhost:3000/api/posts?page=90"},"revalidate":31536000,"tags":[]}