{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:40:30 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"I travel, every year on vacation, to South Dakota to do some camping in the Black Hills and have for the past three years camped in the same location. I belong to a club of outdoor enthusiasts, we travel to certain locations to scratch a living from the earth for a few days and once you have the fever there's no such thing as a nonworking vacation. This last trip (June 2008) I had an experience I couldn't explain: I was asleep in my tent; I was the only person left in camp everyone else had packed up and left. I wasn't too concerned as I have camped by myself in this area several times and could only recall one other time when I felt like something was nearby perhaps a cougar or other predator type animal as the crickets stopped chirping and the whole area became extremely quiet. This particular night I was sleeping soundly and was then suddenly awake and aware that something was up, everthing was silent. I didn't know what had woken me at first but I reached over and checked my watch seeing that it was 3:11am I thought to myself I need to get back to sleep, then I heard it; someone or something was moving around in the stream below my camp. Not directly below, but more to the north and west of my camp following the curvature of the stream. Picture a curving \"L\" shape. Now rotate the \"L\" 1/4 turn to the right, apply that to moving stream water, my camp sits above the water 20 to 30 feet in the inside turn of the \"L\". I heard splashing in the stream and then, SMACK....SMACK. There was a pause of a few seconds then SMACK....SMACK....SMACK. It was two rocks being hit together in a pattern. Ok, creepy and not what I was expecting, I reached over and put a shell in the chamber of my weapon and checked the safety. I'll give it a few minutes and if nothing else happens I'll go back to sleep. Nothing else did happen except when the sun came up I packed up and left. The area around the stream is covered in rocks of every size and shape from small pebbles to boulders as big as cars and trucks. I didn't think to look for tracks. I was still the only one there and I didn't know what to think, except that if someone thought it was fun to show up at a secluded camp at that time of night to smack rocks together there must be something wrong with them and it's time to vacate the area.  A few months later I saw a program on primates and how they will knock rocks and sticks together to communicate I put two and two together and realized I may have had an encounter.","location_details":"Take Hwy 14A west out of Sturgis","county":"Lawrence County","state":"South Dakota","season":"Summer","title":"Report 25415: Possible nighttime visit while camping in the Black Hills of South Dakota","latitude":44.38611,"longitude":-103.6183,"date":"2008-06-22","number":25415,"classification":"Class B","geohash":"9xykd05ryd","temperature_high":76.6,"temperature_mid":65.6,"temperature_low":53.9,"dew_point":52.5,"humidity":64.1,"cloud_cover":9,"moon_phase":0.64,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1016.5,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":null,"visibility":9.9,"wind_bearing":114.6,"wind_speed":12.8,"id":1011},{"observed":"i just started working as a police officer, and i was assigned the midnight shift. i was doing my basic patrols, when i was runing low on gas. the officer who was working the evening had the gas card with him and he lived approx. 7 miles south of wanblee on a gravel road. i did speak to him over the phone and he said that he'll be waiting for me to come get it. i drove out to his residence and i did get the card and i started driving back into wanblee. as i was coming over a hill (the ditch area is approx.4-5 feet deep, on both sides of the gravel road) my patrol unit was a chevy tahoe, which did sit kind of high to the ground. i was north-bound when i started to descend the hill i noticed some thing \"bobbing\" in the ditch (west side of the road) and i was kinda high off the ground. i thought it was a bat or a bird, so i did'nt think nothing of it. the next minute, i did saw something run across the road, right in front of me. it was running towards the east.  i did see what i think was the shoulder area to the thigh area, through the windshield. i had a side view of this thing. i could still remember seeing the reddish-brown hair which covered the thing. the hair looked to be approx. 4-5 inches in length. and the overall torso/body from what i could see, was slim. from the chest to the arms. the arms were long and slim, i do not remember seeing the hands. it only happened for a brief second or so, but what ever it was.....was very fast. i did stop and turn around to try to see what it was , but it was gone","location_details":"i am quite surprised that there are no other reports, coming from the wanblee area. there is a creek running from a butte (8 miles south of wanblee) through wanblee and out to the badlands. and there is a rich history of sightings of bigfoots in this particular area.","county":"Jackson County","state":"South Dakota","season":"Fall","title":"Report 13691: Police officer describes late night road crossing sighting south of Wanblee","latitude":43.4471,"longitude":-101.7312,"date":"2003-11-01","number":13691,"classification":"Class A","geohash":"9xxxjj39en","temperature_high":38.5,"temperature_mid":30.6,"temperature_low":24.9,"dew_point":26.2,"humidity":84.1,"cloud_cover":89.5,"moon_phase":0.25,"precip_intensity":null,"precip_probability":0,"precip_type":null,"pressure":1021.3,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":9.8,"wind_bearing":151,"wind_speed":16.3,"id":1012},{"observed":"Incident #1:  A party of five people fishing on the Cheyenne River, on the reservation--south of Faith, observed a tall, hairy creature which looked like a bear, watching them from across the river.  As they hurried to gather their equipment to leave, one of the smaller boys said \"it was waving at them\". T. C. said it was taller then the little cottonwood trees by the bank. Incident #2:  A white man living near the CRST reservation, a bordertown called Faith spotted a hairy creature crossing his path and called the local highway patrol to investigate. This was heard on the police scanner by many listeners. Incident #3:  A man named R. D. was swimming north of Faith, on the reservation called Iron Lightning, and spotted a hairy creature with a little one and they (?) gave chase but were unable to get close. Incident #4:  F. V. D. (east of Faith) a white rancher and farmer and a former skeptic, now a believer, saw a hairy creature while he was damming (making a dam) at dusk. He told me it made some kind of noise and dove into a arroyo (?) or narrow creek. Incident #5:  Also, the Eagle Butte News (paper) carried a story a few years back about sightings on the reservation at Green Grass, South Dakota. There were actual footprints in the paper and was investigated by Officer S. P. of the CRST Law Enforcement.","location_details":"These recent sightings (August 1999) occured on the Cheyenne River Lakota Sioux Indian Reservation, near Eagle Butte, South Dakota, a radius of 50 miles--where four sightings occured.","county":"Dewey County","state":"South Dakota","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":1098,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":1013},{"observed":"I would like to start by saying i’m an avid hunter, hiker, and all around outdoorsman. I was going to the SD School of Mines at this time for engineering. It was late October 2012. I went solo camping in Spearfish Canyon area on Black Hills forest land. The location is near Devils Bathtub. I was going up an unused logging trail when I noticed the sun was getting low so I knew I had to find a place to rest or I’d end up setting up camp in the dark. I quickly found an overgrown logging trail that veered off to my right. The foliage consisted of either aspen or a birch thicket butting up to the edge of the trail with very little room to walk on the gravel trail. This continued for 20 yards at which point I came out into a fork in the trail. The fork had a patch of grass just big enough in it for me to set my tent up as the surrounding area was strung with rock, uneven ground, and thick overgrown trees. I watched as the sunset and laid in my tent for what felt like an eternity as the sun was setting by 7ish at this time of year and I of course forgot my book back in my vehicle. I startled from my relaxed state for all of a sudden I received a call. This was unusual because cell service drops when you go into the canyon, but I was high enough up to get a few bars. The call was from an officer working for the Spearfish Sheriffs Department. He had seen my car at the trail head. Usually only people go on day hikes in this area as the terrain is too aggressive for any camping, and it’s very popular for inexperienced hikers to get hurt on. The sheriff thought the worst and was able to look me up on Facebook and found my phone number, thus explaining the call. We chatted for a short while and once he figured out I was well equipped and knew what I was doing it put him at ease and called off a supposed search party!  Apparently the party hadn’t left Spearfish yet, but still. The sheriff told me to give him a call once i made it back to my vehicle the next day. Real down to earth guy he was. I then called my parents who had been informed I was “lost” to put them at ease. I finally attempted to go to bed. Of course sleep would elude me this night. I had been laying in my tent for a couple hours not able to sleep. It was 11PM when it all started. First I heard what sounded like a bird whistling a short tune a couple feet to the east of me, but it  sounded more like a person. A second after that, what sounded like a tree trunk hitting another tree trunk came not too far away from my tent to the south and 15 seconds after that something, on two feet started walking towards my tent. The steps where slow, long, and heavy. All I could hear was the steps and then came the skunk-y-trashy smell that almost burns the nostrils. I sat up in my tent (rain fly wouldn’t allow me to see outside of it), drew my hunting knife, and I screamed at the top of my lungs all the profanity I could muster at what ever had approached my tent. The scariest part was, it stopped for a second and continued with it’s long slow heavy stride beside my tent and headed in the direction of the tree noise heard earlier. It made no other noises but the smell lingered for a good fifteen minutes as I laid in my tent quivering. I called the sheriff about a half hour after this and described the whole account. We talked about every detail I could think of and walked through every animal it could have been in the hills. Nothing matched up. He told me he was an avid hunter of the area and it sounded like nothing he’s ever encountered.  He then asked me if I was planning on coming back down that night. I made the decision to stick it out since I didn’t want to be stumbling around in the darkness with whatever was out there, probably not to far away. I passed out from all the adrenaline. This was not the end of my experience. I awoke at around 2AM and started hearing more tree knocks in the same general area of the last time and then the whooping noises started. First came a whoop near the tree knock area and then whops where a few seconds apart maybe a mile away and MORE whooping noises and tree knocks where heard even farther away possibly across the canyon. I laid there in the thick of it not ever experienced anything like this, shaking in my sleeping bag with my sorry excuse for a hunting knife. I can truly say I’ve never been that scared in my life. I felt like the noises where coming from all over the forest. At this point I excepted my fate and was comfortable with the thought of death as I didn’t know the intentions of these creatures. I look back and laugh at the thoughts I had. These literal monkey-like whoops continued for about 15 minutes and I didn’t once think of recording it due to my paralyzing fear. Each whoop sounded different depending on the area it was coming from and would differ in length and strength. As soon as the hint of light crept over the trees I slowly unzipped my tent to find not a single sign of what ever had been there that previous night. Of course I didn’t know what to look for at the time. I quickly packed everything up and hiked out of the same way I came. Before I left that offshoot trail I turned around and said “thank you” and bowed, in case something or some one was listening. I wanted to let it know I was grateful, even though it wouldn’t understand.  I called the sheriff as soon as I charged my phone in my vehicle let him know what all he had missed. Once again he was dumbfounded. I never was big into Bigfoot before this but ever since then I go into the woods with a different level of respect.","location_details":"I parked my vehicle at Devils Bathtub trailhead on Cleopatra Rd,  just off the Spearfish Canyon Highway. The time was roughly 2pm. I hiked into the Devils Bathtub trail and reached the end of the trial where there was a fence that said “No Trespassing”, so adventurous me scrambled, parallel to the boundary, up a steep loose dirt incline for what felt 30 yards up the side of the small canyon. I came to a game trail and made my way north, back was facing the boundary, for a quarter mile to where there was a disused logging trail. I then started heading up the disused logging trail farther and farther up to the rim of Spearfish Canyon, maybe 2-3 miles.","county":"Lawrence County","state":"South Dakota","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":63646,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":1014},{"observed":"Sorry if duplicate, I keep hitting some key that throws me out of this page. Auditory report. Returned home after Vol Fire Dept meeting and heard weird howling.  Got my digital voice recorder from inside the house and obtained roughly 4.5 minutes of it on tape.  Ululating howl with some echo off of nearby cliff face.  I estimated the sound to originate (nearby).  I am an avid outdoorsman and have lived in the Black Hills for over 40 years.  This sound was odd, did not fit the pattern of any animal species I am aware of. We have Coyote, Mountain Lion, Big Horn Sheep, White Tail deer (occ. Mule deer) frequenting my home place.  Bobcat, skunk, etc.  Elk are within 1-2 miles. Wild animal park (Bear Country USA) is (nearby) and has Black Bear, Grizzly Bear, and Wolves to name a few.  We often have sounds from there drift in and what I heard was not any of them, either.  Would like someone there to listen and render an opinion on the origin of the sounds. On 20th sound was more distant, perhaps 1.2 to 2 mi, fainter and without the echo.  It appeared to be originating North-Northwest that night.","location_details":"(Edited for privacy at witness request.)","county":"Pennington County","state":"South Dakota","season":"Winter","title":null,"latitude":null,"longitude":null,"date":null,"number":23214,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":1015},{"observed":"I was visiting my family’s former home and treated myself with a night’s stay at the cottages. They lie along the road running through from Deadwood to Rochford. The campground was empty save for me, even the proprietor was not home. They have beautiful pastures and a huge assortment of farm life - from turkeys to quail to goats and llamas donkeys and horses.  Their fields run right up to the forest, probably not even a football fields length away. I was sitting outside watching their antics and enjoying the evening air.  Suddenly, something started to howl in the woods to the west. Everything alive on the place froze in that same moment and all of their heads - mine included- swiveled toward the sound. I cannot begin to describe it, but I had grown up in these hills and know it was nothing I could identify.  The sound was somewhere between a howl and a scream and just echoed. It went on for 3-5 minutes, and every creature stopped to listen. I didn’t hear it again while there. I didn’t tell the proprietor when I saw him next. Since then, I’ve listened to recordings to try and identify the sound and the recent recording by the hunter out of Canada is an exact match. That’s what impelled me to report it.","location_details":"Approximately 4 mi north of Rochford, at Carsten’s Cottages","county":"Pennington County","state":"South Dakota","season":"Summer","title":"Report 65588: Possible howls heard 4 miles north of Rochford in middle of Black Hills","latitude":44.21694,"longitude":-103.7742,"date":"2019-06-27","number":65588,"classification":"Class B","geohash":"9xy5w93ymg","temperature_high":79.5,"temperature_mid":68.7,"temperature_low":54.5,"dew_point":56.5,"humidity":67.3,"cloud_cover":3.8,"moon_phase":0.84,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1014.1,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":"10.0","visibility":9.9,"wind_bearing":103.1,"wind_speed":21.4,"id":1016},{"observed":"On Tuesday, August 2, 2022 my brother, sister, and I were visiting the Lighthouse at South Carolina’s Hunting Island State Park.  We were leaving the Lighthouse parking lot at approximately 12:00 noon and driving along the exit road from the Lighthouse. My brother was driving the vehicle, with me riding in the front passenger seat,  and my sister being in the rear driver’s side seat.  As we were rounding a slight curve on the exit road, we all spotted a creature walking quickly on the left side of the road approximately 15 to 20 feet in front of our car.  The incident happened very quickly as the creature disappeared into the lush Palmetto & Pine forest ( jungle) that surrounds the exit road. My brother stopped the car immediately and asked if we had seen what he saw.  All three of us reported seeing the creature.  We all saw the creature very clearly as it was walking directly in front of our car.  The three of us recalled and reported the exact and identical descriptions. The creature was walking upright, taking strides quickly to our left,  and disappeared into the bush on the left side of the road directly in front of us.  We only witnessed the lower torso of the creature as it’s head and shoulders were hidden behind a pine tree and a palmetto stump on the left side of the road. The height of the creature is estimated as being between 5 to 6 feet tall.  Legs were approximately 3 feet long, human like jointed knee, with dark brown, splotchy black hair that was approximately 2 inches long.  The incident happened quickly and lasted for only a few seconds as the creature disappeared quickly into the thick underbrush.  There were no sounds or odors noticed by any of us. We were all in a state of amazement as to what occurred as it happened so quickly.  We have enjoyed taking many vacations at the park throughout the years since we were children in the 1950’s to the present.  While the area is abundant in wildlife, we have never witnessed anything like this in the past. The three of us reported the incident to the Hunting Island State Park office on August 3, 2022 at around 12:00 noon.  The Park Superintendent called me a short time later and I provided him with a full description and details of the incident.  He informed me that he would take the report as a credible incident and initiate an investigation. Bob Frady, PhD Here is the phone interview with eyewitness Dr. Robert Frady:","location_details":"The sighting occurred in Hunting Island State Park on the Lighthouse exit road. [Investigator (MM) notes: These are the GPS coordinates for where the figure was spotted along the exit road (North Beach Road) from Lighthouse: 32.371525, -80.441090","county":"Beaufort County","state":"South Carolina","season":"Summer","title":"Report 74788: RECENT:  Close range daylight sighting by three witnesses in vehicle in Hunting Island State Park","latitude":32.37152,"longitude":-80.44109,"date":"2022-08-02","number":74788,"classification":"Class A","geohash":"djyb1t09f8","temperature_high":93.6,"temperature_mid":85.4,"temperature_low":78.6,"dew_point":72.8,"humidity":67.1,"cloud_cover":22.7,"moon_phase":0.17,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1017,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":"8.0","visibility":9.9,"wind_bearing":235.6,"wind_speed":12.8,"id":1017},{"observed":"I think I might have seen something while I was in South Carolina last May, but I'm really not sure. Anyways, I live in Florida and last May I went on a herping trip to South Carolina looking for snakes to collect and photograph.While I was in Francis Marion National Forest walking a trail with my eyes set to the ground on the side of the trail looking for snakes I saw something leap across the trail about 50 yards ahead of me from left to right in one leap.It was on two legs about the size of a person or bigger and was uniform brown in color.This is basically all I saw. I was only about 15-20 minutes into the trail when this occurred.The trail was very narrow but straight and densely wooded on either side.I was by myself and I never saw anybody else on the trail or in the park during my time there. I know this is disjointed but let me try to describe this further. After I saw this thing leap across the trail ahead of me, I stopped in place and listened, somewhat startled.I did not hear anything going through the woods. My first thought was it was a hunter,then I thought it might be a weird person following me or something,so I started to get a little worried and thought of turning back towards my car.I tried to play back in my mind what I saw,because it was somewhat of a blur when it happened.That's when I ruled out it was a person because it was all brown in color and had to be fur and not clothing.It knew it wasn't a deer because it was on two legs when it leaped across the trail.It was definetley a human shape though.After some thought I decided to proceed forward up the trail where I saw this thing cross.I had a 40 inch metal snake hook with me that I thought I could use if I needed to.When I got to the place I thought it crossed I looked through the thick trees to see if I could see anything but I did not. I resumed my snake hunting on the trail but I was looking over my shoulder the rest of the way.I returned back the trail a couple of hours later and did not see anything.I have to say it wasn't till I returned to my hotel room in Mt.Pleasant that I seriously thought what I saw  might be something out of the ordinary.","location_details":"SouthEast part of Francis Marion National Forest.East of US 17.","county":"Berkeley County","state":"South Carolina","season":"Spring","title":null,"latitude":null,"longitude":null,"date":null,"number":6020,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":1018},{"observed":"myself along with my two best friends went down to see some family in tennessee during the summer for a few days. while down there we usually take some time to do some small game hunting. on our second to last day there we went back for about a mile or two to try and find the property line since the man who owned the land was in poor health and couldnt do it himself. he hadnt been able to go back that far since about 15 years do to his condition. we noticed the deeper we went into the woods we saw no animals and that was interesting to us. later that night we were at a small pond with a bonfire when one of my friends decided he needed to go back to the house. we had heard something pacing back and forth on a hill behind us, but we figured it was probably just a coyote or fox so we didnt pay it too much attention. he had a remington 870 shotgun with 6 shells of buck shot loaded anyways for the half mile walk back to the house by himself, on the front of which he had mounted a flashlight. about two minuites after he left we heard him fire all six shots in rapid succession. once we got to him he was scared stiff. all he could say was that something was staring down at him and show us how far apart its eyes were. we didnt stick around long thinking that he may have just injured a bear so we ran back to the house. once we got there he told us that he turned a corner to see the eyes staring down at him just off the path.. he yeld at the animal twice and it didnt move, so he shot. the animal was about 10 feet away and still managed to run off. well he went to sleep in the house and his brother and i went to go bed down outside in the barn loft. i had just laid down in my sleeping bag when i heard the most terrifying scream i have ever heard to this day. this animal screamed for a solid 20 to 30 seconds on one breath. i could tell that it was coming from the area we had just been however it was so loud even still i get chills thinking about it. it only let out one scream and then stopped. but as soon as it did, the entire forest fell silent. the only sound heard was the horse that had been spooked running around its stable. i didnt get much sleep that night. the next morning we had to leave so we didnt have much time to investigate the spot in the daylight. however we did confirm the spot where he saw the animal with a steep incline about 15 feet off the trail. i found no shot impacts from the shotgun even searching the ground leading us all to believe that the animal had been shot. since it had rained the night before the ground was still wet and i couldnt find but maybe one spot of blood. we tried to track it but we didnt have time and the woods were so thick that it was difficult to find any prints. there was only one deep indent which may have been a print but we couldnt tell. all i know is that the animal was big and still ran off after being hit 6 times with buckshot from 10 feet away and still had enough air in its lungs to scream as loud as it did for that long. i know a lot about animals and the only thing that i know of that could be that big would be a bear, but even a healthy uninjured bear doesnt make the sound this animal did. so i dont know what it was for sure but the only thing that makes since is bigfoot.","location_details":"i dont know how to get there or any of the roads in the area.","county":"Fentress County","state":"Tennessee","season":"Summer","title":"Report 26829: Camper (active duty Marine from Cmp. Lejune) shoots at possible sasquatch and later hears moaning screams","latitude":36.39403,"longitude":-84.85902,"date":"2006-06-06","number":26829,"classification":"Class B","geohash":"dn7xhcrd9d","temperature_high":76.5,"temperature_mid":63.1,"temperature_low":47.9,"dew_point":50.3,"humidity":67.7,"cloud_cover":15.3,"moon_phase":0.34,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1016.6,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":null,"visibility":9.6,"wind_bearing":13.3,"wind_speed":8.6,"id":1019},{"observed":"I witnessed a 8-9 ft tall upright hominoid creature with black hair and brownish grey skin apparent on its face chest and abdomen. There was also noticeable scraggly matted hair hanging from its arms. It had wide bold shoulders and hair partly covering its forehead. The eyes were wide set and large. I witnessed this creature while on route to the Nucor Steel plant to deliver some steel coils from Canada while long haul trucking in spring of 2021. I saw it just for a few seconds as I was driving a big rig and there was water on either side of the road.","location_details":"The route I took that time was through the back country due to google maps trying to give the most economical route. To the best of my memory it was near Hwy 41 and Steed Creek Road. [Investigator (MM) Notes: During our converstation the witness looked at aerial images and clarified the location. It was not far from intersection of Hwy 41 and Steed Creek Road, but was actually on Cainhoy Road (also called State Road S-8-98). The spot was basically halfway between the Cooper River and Quinby Barony Ave. GPS coordinates: 33.093199, -79.810204 or 33°05'35.5\"N 79°48'36.7\"W For Google Maps pin click .","county":"Berkeley County","state":"South Carolina","season":"Spring","title":"Report 71700: Trucker's daylight sighting of a Sasquatch in Francis Marion National Forest","latitude":33.0932,"longitude":-79.8102,"date":"2021-03-15","number":71700,"classification":"Class A","geohash":"djzhrb7vze","temperature_high":63.9,"temperature_mid":58,"temperature_low":53.8,"dew_point":46.6,"humidity":69.2,"cloud_cover":66.1,"moon_phase":0.07,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1022.9,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":"7.0","visibility":8.6,"wind_bearing":87.3,"wind_speed":12.9,"id":1020}]","status":200,"url":"http://localhost:3000/api/posts?page=101"},"revalidate":31536000,"tags":[]}