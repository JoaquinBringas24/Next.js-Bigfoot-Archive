{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:25:59 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"WELL I CANT BELIEVE AFTER ALL THESE YEARS IM DOING THIS BUT DUE TO THE RECENT TRAGEDY I HAVE A NEW RESPECT FOR HOW SHORT LIFE CAN BE,AND I THINK LEGITIMATE RESEARCHERS NEED TO HEAR ABOUT AN EXTRAORDINARY OCCURANCE THAT HAPPENED IN MY LIFE.  I KNOW EVEN THE MOST BELIEVING OF YOU ARE GOING TO THINK THIS IS BULLSHIT, BUT AS THE SAYING GOES TRUTH IS STRANGER THEN FICTION: IT WAS IN 1976 IN LEVITTOWN PA.  MY FRIEND  AND I SKIPPED SCHOOL (I WAS 16).  WE WERE GOING TO HUNT THE THIOKAL PROPERTY WITH BOWS.  THIS ACTUALLY IS THE MOST INCREDIBLE PART OF THIS, THE THIOKAL PROPERTY IS LOCATED IN THE MIDDLE OF LEVITTOWN THE MODEL FOR SUBURBIA.  THE PROPERTY WAS A FENCED WITH BARBED WIRE ENCLOSURE ABOUT A MILE SQUARE EACH WAY WITH A ROAD ON THE PERIMETER THAT ARMED GUARDS WOULD PATROL.  SO MY FRIEND AND I PLAYED COMMANDO ,SNEEKING UNDER THE FENCE WITH DIRT ON OUR FACES WEARING CAMO SHIRTS.  WE DID THIS BECAUSE IT WAS THE ONLY PLACE TO HUNT OR TRAP AND THE PROPERTY WAS EXCELLENT, SWAMPS, RAVINES, FLAT FIELDS AT THE TOP,HEAVY OLD WOODS,  GREAT DIVERISITY(BY THE WAY I DONT KNOW IF THIS IS THE INFO YOU WANT BUT I THINK YOU NEED TO KNOW THIS BUT BECAUSE I THINK ITS PERTINANT).  ANYWAY WE SNUCK IN AND WERE HUNTING SQUIRRELS WITH BOWS.  MY FRIEND JUST SHOT ONE OUT OF A TREE AND WAS BENDING DOWN TO CUT OFF ITS TAIL WHEN I SAW (I WAS LOOKING OUT FOR THE GUYS IN THE JEEPS) A BIGFOOT.   IT WAS REALLY CLOSE ABOUT 100-120 FEET AWAY.  IT WAS JUST STANDING THERE WITH ONE ARM HOLDING ONTO A PIECE OF TREE CHEWING IT (IVE SINCE COME TO REALIZE (AFTER SEEING A COW) IT WAS CHEWING IT LIKE AN UNGULATE SIDE TO SIDE I MEAN IT WAS EATING IT, CHEWING AND BITING OFF NEW PIECES .I WAS FROZEN WITH FEAR.   MY FRIEND WAS BUSY WITH THE SQUIRREL SO I WATCHED IT FOR 20 SECONDS?  IT DOESNT SOUND LONG BUT IT SEEMED LIKE FOREVER.  I GOT AN EXCELLENT LOOK  AT IT - 7 FOOT TALL MAYBE JUST A LITTLE MORE-REDDISH/BROWN HAIR 3-4 INCHES LONG.  THE THING I REMEMBER MOST WAS THE FACE BECAUSE IT WAS EATING.   I GUESS IT LOOKED ALMOST HUMAN IF IT WASNT SO TALL AND COVERED WITH HAIR .  IT COULD HAVE BEEN SOME DEFORMED PERSON.  I THOUGHT A CROSS BETWEEN A GORILLA FACE AND HUMAN WITH BIG LIPS FLATTENED TYPE NOSE (NEGROID TYPE I GUESS THATS THE RIGHT DESCRIPTION NOT MEANING TO BE DEROGATORY).  IT JUST STOOD THERE LOOKING AT US.  I GRABBED MY FRIEND AND YELLED  LOOK! HE GOT UP AND PICKED UP THE BOW AND AN ARROW AND SAID 'WERE GONNA BE RICH'.   HE WAS GOING TO KILL IT.  I LOOKED BACK AT IT.   IT STILL DIDNT MOVE  - NOT A MUSCLE, SHOWED NO FEAR AT ALL , COMPLETELY CALM,KEPT CHEWING .  ANYWAY IT LIKE SOMEHOW TELEPATHICALLY TALKED TO ME AND SAID-IF YOU HURT ME IM GOING TO KILL YOU BOTH.  I FREAKED OUT AND STARTED SCREAMING ' ITS GONNA KILL US,  ITS GONNA KILL US'  AND GRABBED THE BOW OUT OF HIS HANDS .  WE THEN TURNED AND RAN FOR OUR LIVES. WE TOLD OUR PARENTS WHO SAID QUOTE WHAT ARE YOU GUYS SMOKING.  ANYWAY,  BECAUSE OF THE UNBELIEVABLE CURCUMSTANCES (MAINLY THIS WAS A CHEMICAL PLANT WITH ARMED GUARDS)  WE THOUGHT MAYBE THE GOVERMENT WAS INVOLVED OR SOMETHING AND WE DIDNT TELL ANYONE FOR YEARS.  I HAVE TALKED TO SOMEONE WHO WORKED THERE AT THE TIME AND THEY SAID THEY DID WORK FOR GOVERMENT- JET FUEL ADDITTIVE-WHEN I TOLD HER ABOUT BIGFOOT  SHE LAUGHED AND SAID THEY HAD NO BIGFOOTS.  (I THOUGHT MAYBE IT WAS CAPTURED ONE/TRAINED OR SOMETHING) .  SINCE THEY HAD ARMED GUARDS PATROL, ONLY PLAUSIBLE EXPLANATION I'VE COME UP WITH WAS A PERSON DRESSED UP IN HOLLYWOOD QUALITY BIGFOOT COSTUME TO TRY TO SCARE US AWAY.  THAT DOESNT EXPLAIN THE TELEPATHIC ENCOUNTER.  I THINK IVE SPENT A LONG TIME TRYING TO RATIONALIZE THIS AND HAVENT COME UP WITH ANY REASONABLE EXPLAINATION","location_details":"THIS IS AN EXTREMELY BUILT UP AREA, EASILY ACCESSED THEN AND TODAY INTERESTING THOUGH ALMOST UNCHANGED SINCE THEN AND NOW","county":"Bucks County","state":"Pennsylvania","season":"Spring","title":null,"latitude":null,"longitude":null,"date":null,"number":3122,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":921},{"observed":"Sighting was seen in 1991 in Blue Mountain Berks County PA.  State Game Land 110 I believe in early February.  I was grouse hunting on the top of the mountain, there was ten to twelve inches of snow with a half to one inch of ice on top of the snow.  It was very difficult to puncture your feet to walk through the snow and ice.  I shot my grouse, on top of the mountain about a half to 3/4 of a mile from where we came up to the top of the mountain.  I shot twice after my friend with me yelled grouse, I yelled I got it to my friend who then proceeded to walk up to me.  He was 75yds away and it took him about 15-20min to get up to me.  Then he walked a trail that went back to where the road starts at the top of the mountain.  I stood there for 15 min. as I heard my friend walking away from me,afer I could hear his footsteps no more, I turned the other direction and was looking at the side of the mountain that we came up.  I noticed a dark figure running along the ridge of the top of the mountain, for 50 to 100yds. it ran, there was an opening and it stoped.  Then it proceeded to run straight for me uphill and did not stop until it was about 40 to 50ft away from me.  It was not out of breath and did not make a sound and just stood there and looked at me for about 1-2min. and then walked away in the direction that it came from.  First of all in those conditions you could not run or barely walk in it.  It was hard to puncture the ice on top of the snow to walk let alone run.  It went through it like it wasn't even there for 200yds and when it stopped 50ft away, you couldn't even see it breath or hear it breathe.  He ran that distance, in about 1-3min maybe.  It scared the hell out of me i wasn't sure what it was, until it stopped right in front of me.  It found me I wasn't looking for it.  And I can tell that when he stopped in the opening on the ridge that he can see blaze orange because he ran faster then straight for me after he seen me in my blaze orange one piece outfit.  He was there in no time at all, running uphill a 100 to 150yds.  He walked away and looked back at me once and then kept going.  He was all black, very long hair, it was hard to see his face through the hair.  Tall around 7-7 1/2ft 400-500lbs I thought. Very powerful animal seemed very intelligent because I think he heard the gunshots or the yelling and wanted to find who was making the noise on the mountain and came right to me.  I was scared at first and when it stopped, I put my shotgun right on it at 45-50ft and it didn't even flinch it wasn't scared and it just walked away.  My friend with me is 6'1 200lbs and when I told him what happened, he didn't believe me but he tried to run on the road at the top of the mountain on level ground, flat, he took 3 steps and fell on his face.","location_details":"Top of Blue Mountain, the Appalachian trail, State Game Land 110. Marshall's path. (Pennsylvania Atlas and Gazetteer Plate 66, extreme SW corner.)","county":"Berks County","state":"Pennsylvania","season":"Winter","title":null,"latitude":null,"longitude":null,"date":null,"number":2758,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":922},{"observed":"It was summer in the mid 80's. (Sorry I can't be more specific.) Some friends and I had taken to exploring the woods that surrounded our town. We were constantly in the woods for one reason or another. On this particular morning, I think it was around 0900, only one of my friends was able to accompany me into the woods. We followed our normal trail to the rim of Curry Hollow, which was about 400yds into the woods. We strung some ropes, and went down the incline. It was steep enough that the ropes were necessary. When we got to the floor of the hollow we started walking through a section of woods that we hadn’t checked out yet. Mostly we were just wandering, and seeing what was in the area. At that time of my life I had a started developing an interest in the outdoors and wildlife, so whenever we were in the woods I tried to make sure we were quiet enough not to scare away any animals. We all enjoyed trying to track the different species in the area. In our wanderings we had found raccoon dens, snake and bird nests and even tracked a few deer through the trees and brush so when we saw the animal stand up in front of us we knew instantly that this was something different. We were coming up on a deadfall that had been covered over with vines and surrounded by small saplings since it had fallen. We started to go around the fallen tree (it was approx. 80 to 100 feet long and 2 ½ feet wide and the crown caused it to be about three to four feet off the ground) and had made it to the base when we both spotted a humped shape covered with brown hair or fur. The shape was about 10 feet in front of us and was close to a tangle of vines and brush. We both froze and just stared. We had both been told that though they were rare in the area, some people had seen bear in and around these woods. And that’s what we thought it was, and we knew we were to close. Thinking it might be injured since was so still, I decided we should go home and let my father know a local cop know about it. I glanced to my friend and motioned to him that we should go back the way we came. We had just started to turn when the shaped stood up and took off running. When it stood, we saw was that it was at least 2 feet taller than us. At the time we were both around 5’ 5”. When it started running was when I got scared, it was on two legs. It cleared a good 20yds through the brush in what seemed like a split second. We instantly took off the other way and didn’t stop until we had made it up the rope and out of the woods. We didn't discuss it at the time. Later that week we talked and told some friends, and few days later we went back to the area with 3 more people. We found the tangle of brush the figure was behind and saw a large clear space, the size of which a small family of deer would have made, but there were no tracks, neither foot-prints or hoof-prints. The ground cover was a thick mat of leaves over the entire area. We noticed nothing else out of the ordinary. At that time I had seen bears in the zoo and on nature programs. And had seen them stand up on two legs. This was not a bear. It moved too fast and did it upright. And it certainly wasn’t a deer, or a big dog or anything else I had ever seen outside of a movie. When the figure stood up it was a good 2 feet taller than us so that would put it around 7'5\". It had it's back to us and I got a good perspective of it's bulk. It was muscled but not fat like a bear. And it had sloping shoulders. That was all I saw. I started running around that time. I've read about a foul smell others have noticed during their encounters, but I noticed nothing like this. It did make a lot of noise as it ran, crashing thru the brush and trees. It ran in the direction of road which splits the hollow in half. The other side of the hollow has less steeply angled sides and would have been much easier to climb. Plus there was more wooded area on that side of the hollow. I have never spoken to anyone about this since that summer. I knew no one who would have believed me.","location_details":"Curry hollow is a steep sided valley the leads from the Monongahela river and Route 837 in Dravosburg to Lebanon Church Road and the Allegheny County Airport in West Mifflin. It passes below the Irwin Works steel processing plant. At the time of the sighting it was a medium to densely wooded area with a gravel road running parralel to a small stream that fed into the river. The sighting accured on the downhill side of the large train bridge that crosses the hollow and leads to the steel processing plant.","county":"Allegheny County","state":"Pennsylvania","season":"Summer","title":"Report 11228: Two teenagers have a surprise encounter in mid - 80's","latitude":40.357,"longitude":-79.8765,"date":"1985-06-15","number":11228,"classification":"Class A","geohash":"dppjw6g8wd","temperature_high":70,"temperature_mid":63.4,"temperature_low":51.9,"dew_point":48.2,"humidity":58.4,"cloud_cover":83.8,"moon_phase":0.91,"precip_intensity":0.001,"precip_probability":100,"precip_type":"['rain']","pressure":1016.4,"summary":"Partly cloudy throughout the day with late afternoon rain.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":8.2,"wind_bearing":165,"wind_speed":11.6,"id":923},{"observed":"It was late May 1990 and some of my friends and I were camping on the north side of Lake Ray Roberts. It was 12:30 AM when we decided to go fishing. We walked about one mile when my friend Russ looked at me and asked if I felt like some one was watching us. I replied \"I feel the same way\". At first we just thought it was some kids or a game warden, but when we called out no one answered. We decided to turn back. As we started walking back the feeling got stronger. We got to my truck at a dead run, then we noticed trees moving behind us. We got my mag light out of the truck and started looking at the tree line. We were parked about two hundred yards off the road, in a half circle of trees with an open field behind us. As we looked around we noticed the tall grass was pushed down like a deer had bedded down there. It was just beyond the tree line. That's when we heard a loud screeching roar. It was coming from the trees just beside my truck. When we turned to it, I shined the light and saw something plow through the trees. I looked at Russ and he was advancing toward the truck. I followed, and we asked Daryl and Kyle what they saw. Daryl was hunched down in the back of the truck with the .22 rifle I carry when camping. Kyle was getting in the truck and yelling at us to follow, we left in a hurry. The next night we went back with more guns (we were young and this seemed like the right thing to do since none of us had a clue as to what had happened.) I had taken a spotlight from my dad's boat, and a shotgun I owned. We went back to the same place and waited. At the same time as the night before we heard the roar again. This time it was further away, then it screamed again yet only a few feet from us. We got the spotlight and lit up the area and that's when we saw it running from us. It went from sounding far away to ten feet with out making a sound in the heavy brush. When we saw the creature, it was about eight feet tall and stood straight up with its back to us. Then as it ran away it stopped as if it was looking at us. Then Russ shot at it with the shotgun. I thought it hit it square in the chest. Then it made the same roar only more intense. Then it pushed a cottonwood tree over (we inspected the tree some time latter and the tree was very green and eight inch in diameter.). We left and did not return until the following summer. The area is more populated now and no evidence of the Critter (the name we gave it). That was some nine years ago and we have not seen it since then. We still go out there sometimes just to see.","location_details":"USA Texas/Cooke Mountain springs; north side of Lake Ray Roberts","county":"Cooke County","state":"Texas","season":"Summer","title":"Report 2394: Four friends saw and heard 8 foot creature plow through the trees while they were out fishing","latitude":33.48028,"longitude":-97.04361,"date":"1990-05-30","number":2394,"classification":"Class A","geohash":"9vfyrwyuzb","temperature_high":95.1,"temperature_mid":80.7,"temperature_low":71,"dew_point":69,"humidity":71.2,"cloud_cover":75,"moon_phase":0.21,"precip_intensity":0.063,"precip_probability":100,"precip_type":"['rain']","pressure":1006.8,"summary":"Partly cloudy throughout the day with early morning rain.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":9.4,"wind_bearing":169.7,"wind_speed":13.9,"id":924},{"observed":"Hello, I am from Koppel Pa, Beaver County. I have miles and miles of strip mines and mushroom mines all around my house. [Editor's Note: \"Mushroom mines\" are underground coal mines that were converted into subterranean farms for growing mushrooms. Mushrooms grew very well in these tunnels because the air temperature and humidity remained very stable and consistent throughout the seasons. Modern methods for stabilizing air temperature and humidity have made mushroom mines mostly obsolete, so most of these tunnels have been abandoned]. I was in the strip mines by the Wampum mushroom mines and heard a loud groaning sound. We (my buddy and I) went to make sure no one was hurt and we saw a large framed figure all a dirty brown color. I, thinking it was a brown bear, yelled very loud to spook it and make it run, but the large figure turned and looked us in the eyes and ran. I never believed in \"Bigfoot\" but this is hard to ignore. It stood about 6' plus. Very thick build kind of like a heavy weight boxer. The hair was medium in length, dirty brown. (closley resembled to a brown bear). The figure was not very threatenig but instead just ran off into the mines. We looked for it for about an hour or so but didn't see it again.","location_details":"It was about 1/8 mile from the Wampum Mushroom mines. In the Koppel Stip mines.","county":"Beaver County","state":"Pennsylvania","season":"Winter","title":"Report 17981: Possible sighting by two at a strip mine in the Koppel Strip Mines","latitude":40.50322,"longitude":-80.19804,"date":"2007-02-27","number":17981,"classification":"Class B","geohash":"dpnyrj3s65","temperature_high":35,"temperature_mid":33,"temperature_low":30.9,"dew_point":25.3,"humidity":73,"cloud_cover":99.1,"moon_phase":0.35,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1015.8,"summary":"Cloudy skies throughout the day.","conditions":"Overcast","uv_index":null,"visibility":8.7,"wind_bearing":264.2,"wind_speed":13.8,"id":925},{"observed":"We were just teenagers..and working as laborers throwing hay for Old Fat Minteer, who was our boss. I guess we were probably 2/3 fo the way done with the wagon,when I looked over on the other side of the dirt road which parelled the field. What I saw there, I could only describe as what would of been.. something about 7 to 8 feet tall, (we judged this later by the tree it was near. It was standing erect, with it's arms by it's sides, just kinda staring at us. We stopped the tractor, and watched it for about 2 minutes until it wandered off at a brisk pace on two legs. Not once did it make any noise, or any threatning gestures towards us in any way. I told my father about it that evening, as did Lee. He told me, we were probably just seeing things. We told people at school, and they just kind of blew it off as if we had made it up. This is area I grew up hunting and hiking in, and other occasions, we have heard strange howls, cries or moans or what ever you want to call them. I knew the couple times I have heard what ever it was, my hair stood up on the back of my neck. Just typing about it now, I'm getting goosebumps and a cold chill up my back.","location_details":"It was around 1976 0r 1977 right off of Rte 422 and Mushroom mine road, in Worthington, Pa 16262, which is located in Armstrong County. It was up in the fields and woods over looking the Mushroom mines.","county":"Armstrong County","state":"Pennsylvania","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":3547,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":926},{"observed":"Well, my younger brother saw it when he was around 8-9 years old, in the late '70's. Our home was somewhat isolated and had  woods all around it.  We  played in the woods a lot.  He told me that once he saw \"Chewbacca\" standing in the woods watching him.  Over the years he heard weird noises coming from the woods when he was walking down the road, like screams and grunts that were almost like words.  He describes them as \"chanting\"  or sing song. Also, while by myself in a field beside our house, I heard a very frightening noise coming from the woods at the edge of the field; like growling and snarling  coming from somewhere behind the trees.  I saw nothing, but the best I can tell you a very large animal made those noises. Since the noises were loud I could tell the direction they were coming from easily and it was way above my head from the tops of the trees.  I never heard any animal before or since that made a noise like that. Being around 10 or 11 years old, I didn't hang around to check it out, but later I told my brother and he related to me about the time he saw \"Chewbacca\".  Then one of us wondered out loud, \"Was it Bigfoot?\"  To this day, we don't know.","location_details":"Traveling outbound from Pittsburgh, PA on Ohio River Boulevard, go straight through communities of Belleview, Avalon, Ben Avon until you reach Emsworth.  When you reach Camp Horn Road, make a right.  Go about a quarter of a mile and make a left onto Eicher Road.  Go up Eicher road to where it forks, make a sharp left, go up that part and you will be on Roosevelt Road.  Now you will see straight ahead of you almost a very large hill, a long driveway with a small house at the top.  In the 1970's behind this house was a field with woods behind it.  That is where I heard those noises.  Now, make a right turn onto Roosevelt Road and drive up past the woods on your left, those are the woods my brother heard strange noises.  At that time the woods went back for miles behind the house, that is where he saw Chewbacca. I won't tell you which house it was we lived in, I have not been around there since 1980, and those people living there now don't want to be bothered, maybe they would even sue me.  For all I know, those woods have even been cut down.","county":"Allegheny County","state":"Pennsylvania","season":"Unknown","title":null,"latitude":null,"longitude":null,"date":null,"number":856,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":927},{"observed":"The exact date was October 15, 1998. I was training for a mountain bike race and this was to be my last ride prior to the race. I was riding at the Black Hut Management Area in Glendale,RI. Along for the ride was my three year old mixed breed (shepard/lab)large dog. It was sunny but cool and I planned to spend an hour or so breaking a swet. As i weaved my way through the trails, i had to leash my dog to cross a street. After I unhooked him we started up a hill toward a chasam. It's small and kids hang around there and drink beer, have fires etc. At the crest of the hill I could see the top of the chasam (approx. 50 yards away). Out of the corner of my eye I noticed something that first appeared to be a dirty white blanket perhaps hung on a small tree. Suddenly (I think it heard us)it turned (as it was squatting with it's back to me)saw me stood up and disapeared into the woods. I was shocked and could not believe what I had just saw. From my vantage point I would say the animal was white or grey but very dirty. In no way did it resemble a man. I did not see the face clearly. But from what I did see (full rear view) although it stood fairly erect, it's gate and posture was like an ape. The arms were not long like a gorilla and oddly it was no were near seven-feet tall. I'd estimate maybe six feet at best. I reversed my direction and rode immediately to the top of the chasam. I looked for footprints and hair but didn't find any. I walked a short distance in the woods in the direction were it disapeared. My heart was pounding so loud I could hear it. I knew it was no were in the general area because my dog was not barking. Anytime there is an animal near fox, coyote, deer, my dog barks and will usally chase. Interesting point is that my dog never barked and I don't think he saw, heard or smelled it. I noticed no unusual smell in the area. And also noted no signs of broken branches and no way to determine its direction. I've told one or two people and in November of 1998 a friend and I (with video and digital camera) spent two weekends hiking in the area directly behind the chasam with no results. I also snow shoed the area after the first snow. I was starting to believe I had imagined it. In 2002 I met a hunter in a bar and asked him if he ever hunted at Black Hut. He said \"yes\", \"and once I saw a white gorilla there! I had chills and related my story. The differences were in color, he stated white (the one i saw was more grey) and said the one he saw was eight feet tall. Still, same place same type of sighting. What made me write this is the two other RI sightings seem to be similar. I wish I could have seen it longer and closer. ","location_details":"From route 102 N or S. Take Spring Lake Road. Follow there are multiple points of entry in to the reserve and a general parking lot at the end of Spring Lake Road.","county":"Providence County","state":"Rhode Island","season":"Fall","title":"Report 15923: Daylight sighting by mountain biker in Black Hut Management Area outside Glendale","latitude":41.98067,"longitude":-71.6568,"date":"1998-10-15","number":15923,"classification":"Class A","geohash":"drmnc6m55s","temperature_high":60,"temperature_mid":53.3,"temperature_low":47,"dew_point":45.7,"humidity":77.2,"cloud_cover":66.8,"moon_phase":0.84,"precip_intensity":0.138,"precip_probability":100,"precip_type":"['rain']","pressure":1017,"summary":"Partly cloudy throughout the day with morning rain.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":11.4,"wind_bearing":297.1,"wind_speed":17,"id":928},{"observed":"I was driving along Route 6 crossing the CT state line into RI.  The road is very dark and heavily wooded in this particular area.  As I was traveling east, something quickly moved across the road in front of me.  I was driving approximately 55 mph.  Once I registered what I was seeing I also realized that whatever it was, it had walked on two legs.  It cleared the guardrail on the side of the road in one step and was gone.  I was very spooked.  The whole incident lasted less than 30 seconds, though I think about it often., especially when I drive through that area.","location_details":"Route 6 East going from CT into RI","county":"Providence County","state":"Rhode Island","season":"Spring","title":"Report 30906: Early morning sighting by a motorist along Route 6 near Foster","latitude":41.81391,"longitude":-71.74425,"date":"2011-11-15","number":30906,"classification":"Class B","geohash":"drkvz7vrtv","temperature_high":68.9,"temperature_mid":59.9,"temperature_low":54.3,"dew_point":49,"humidity":68.4,"cloud_cover":77.1,"moon_phase":0.67,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1009.5,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":9.9,"wind_bearing":243,"wind_speed":14,"id":929},{"observed":"One of my friends and I were camping on his family's land near Catawissa.  It was just the two of us late at night.  We were sitting by the camp fire talking when we noticed we needed more wood for the fire. There was an old apple orchard near by and we scavenged dead wood off of the ground for the fire.  It was a very well lit night, and we could see very well. As soon as we stepped into the orchard, we heard a sort of screeching or wheezing noise around 100 yards away (as best as we could tell).  We didn't think anything of it because we were always hearing noises from around that area, so we continued into the orchard. After about 10 steps in, we heard an awful scream that sounded like it needed two or three heads to make it.  We looked in the direction and then we saw it.  Maybe 50 yards away was the creature. It was about five foot six inches tall and about 350-400 pounds.  It started running at us full speed, and it was incredibly fast.  We immediately turned around and headed out of the orchard and for our car. As soon as we were into the clearing, the creature stopped running at us and turned away.  Needless to say, we put out the fire and left for the night.","location_details":"The incident occurred outside of Catawissa, PA near route 42","county":"Columbia County","state":"Pennsylvania","season":"Spring","title":null,"latitude":null,"longitude":null,"date":null,"number":3558,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":930}]","status":200,"url":"http://localhost:3000/api/posts?page=92"},"revalidate":31536000,"tags":[]}