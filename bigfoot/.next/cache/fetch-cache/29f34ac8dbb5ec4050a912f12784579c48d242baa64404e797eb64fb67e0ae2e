{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:14:01 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"First off I am not a true beliver in BigFoot.  I was messing around on the internet and stumbled apon your site.  I thought it would be funny to see what sightings have happend around my home city of Yakima Washington.  When I clicked on the report form of the July 2000 (class B) hearing sound around bumping lake, I got the chills.  Let me start from the begining.  Myself and a couple of buddies of mine took off from Yakima really late with the intent of climbing the trail and spending 3 days of camping at Twin Sisters. We were going to stay at the first lake (Or First Sister).  The lake is about 8 or 9 miles past bumping lake and you have to hike in about 1-1.25 miles straight up. When we arrived at the lake after taking way to long to climb the trail (Over confident and over packed) we set up came and got the fire going by 12:30am-1:00am.  We were exhausted and really didn't feel like drinking or anything else but eating and going to bed.  About two hours after going to bed I was awoken by some little grunting sounds.  I woke up kind of starteld but then realized they were basically a quarter the way around the lake so I just sat and listened.  All of a sudden they turned from little gruntings to a grunt/scream.  I quietly called out my friends Shawns name and he had been woken up and was listening to.  I asked him what the hell that was and after talking about it we both convinced ourselves that it was an elk or something.  I am not an animal call expert by any means but to this day when I think about that trip one of the first things I think about is how weird that sounded.  I have heard elk and deer grunts before but this sounded different. As Ron White would say \"I told you that story so I could tell you this one.\" On the last night I slow cooked some stakes over the fire coals for about.  When they were done my friends and I were enjoying them when were heard something about 60 or 70 yards out from camp.  We were camped out below the rocky base of the mountain top.  Its like the dirt stops and the rocks go up the rest of the way.  The sound was coming from the rocky area but we all thought it was a cat or bear so we got up grabbed the guns and an axe and started out with a lantern to go see what the hell was out there.  The sound was like what a rock being thrown and hitting the other rocks and then coming to rest.  It didn't sound like a little rock slide and it happen several times until we got closer, infact we had barehanded our stakes and finished them while we were away from camp as close to the sounds as we could get without climbing the rocky face, they completely stopped.  At no time did we every think it was bigfoot but we couldn't figure out what would make a sound like that?  It didn't sound like an animal that was mearly passing by, it moved to quick and to speratic(as if someone was throwing at different targets.  The only reason I look back on it now is that I was watching a bigfoot special today on the history channel and they had a gentlemen on there saying bigfoot was throwing rocks at him.  And now looking back I could definatley see how someone or something throwing a rock down twords us could make that sound.  Were the activity was would be the exact place I would be if I wanted to mess with my buddies back at camp.  We always talk about those noises and never ever gave bigfoot a chance of being the sorce of the sounds and now I just don't know.  After all this time of not even considering it now that I think of that as a possiblity it makes more and more sence even though I don't truely believe in Bigfoot.","location_details":"Go past bumping road and head up the dirt trail, anytime the road forks go right.  The trail will dead head and park you car.  Get out find the trail sign that says Twin Sister and follow it.  I can't remember how far it is exactly but it is between 1 and 1.25 miles in, very steep climb.","county":"Yakima County","state":"Washington","season":"Summer","title":"Report 11702: Campers hear scream and witness rock throwing at Twin Sister Lakes","latitude":46.74778,"longitude":-121.3603,"date":"2005-07-08","number":11702,"classification":"Class B","geohash":"c239yqhjs1","temperature_high":67.1,"temperature_mid":59.9,"temperature_low":53.2,"dew_point":48.4,"humidity":66.4,"cloud_cover":61.3,"moon_phase":0.08,"precip_intensity":0.278,"precip_probability":100,"precip_type":"['rain']","pressure":1011.1,"summary":"Partly cloudy throughout the day with rain.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":7.7,"wind_bearing":267.3,"wind_speed":10.4,"id":51},{"observed":"It happened close to midnight on August 18, 2007, on the last official night of a private expedition, east of Mt. Rainier in the Wenatchee National Forest, of Washington State. Out of respect for our WA-BFRO crew's primary Central Washington State research area, I've purposely withheld the exact location and am using \"Chinook Pass,\" which covers a broad general area. The event was both a weekend social gathering as well as a field expedition with one main base camp and several satellite camps over a 10-mile area. The area (which I initially felt was very dry aside from several marshy areas nearby, contained a tremendous amount of elk sign) has been used for a previous BFRO expedition as well as other private outings. It's been a consistent “hot zone” for our WA crew, who, lacking sophisticated heat-sensing equipment, have experienced a lot of curious activity over the years including purported vocalizations, wood-knocking, powerful footfalls, branch breaking, persons being paralleled, etc. and several documented sightings nearby within the BFRO database. In attendance were various members of both WABFR (Washington Bigfoot Field Research Group) & a majority of WA-BFRO researchers. A few of us CA-BFRO members were invited and held the furthest base camp from the main camp & shared that particular site with various WA bigfooters. A matter of fact, on any given night our camp held about 14-15 people with many walking back and forth only on the primary dirt road to the closest adjacent camp about one mile away. During the first two nights, there was no activity to report from my perspective other then some of the best barred owl vocalizations I've ever heard in my years in the field. For most of that Saturday, August 18th, I spent the day in Seattle with my friend Jamie J, picking up his son and we returned to the camp location around 5:30 PM. At around 11:00 PM our site held about 13-14 people (most of them researchers) who were consolidated in one small area. Everyone was congregated into this section of the camp that was bordered by vegetation on the backside in which there was a berm and trail running parallel right behind that vegetative border. Being a little antsy and not much in a socializing mood, I took a walk down that back pathway about 100 yds, (which was pitch black on a dark night with plenty of tree cover) to relieve myself. 30-40 yards further down that pathway the trail led to a swampy marsh & was broken up by denser vegetation & ponderosa pine (see map picture for camp layout). In the middle of urinating I was facing towards camp and heard a very close step-branch break at my eight-a-clock, 6-7 yds from me that did not give me the immediate impression a large subject was responsible. Casually walking back to camp and not hearing anything further, I asked one of my best friends & research partner, former BFRO researcher Cliff B., if I could borrow his X200xp handheld thermal imaging unit to scout around camp & see if I could see the subject responsible for the branch break on the pathway I'd just returned from. He immediately obliged and we walked to his truck, which was located about 30 yds behind the current congregated area in the opposite direction of that same pathway. When I received it, I immediately walked to the front of that pathway near where our tent was placed perpendicular to the trail and my companions congregation area was to my left about 20 yds in front of me down a small berm. As I could hear Cliff reshuffling equipment around the back of his truck, I put the imager to my eye to tune it and while doing so caught a glimpse of a small wood rat running 10 yds in front of me to the right. Straight ahead, I caught the heat signature of what I initially thought was a person standing behind a tree, beyond my party where it was pitch black. My initial impression did not change for about 20 seconds with the combination of only seeing about 10-15% of the subject. (partial legs, arms, knee & head were contrasted behind that biggest tree in view: see re-creation pic # 2) The subject then began to move its head right to left behind the tree repeatedly as if to possibly discern me or my presence more clearly. It then stepped out in plain view and dropped to \"all fours\" positioning, (see re-creation pic #3) looking over its left shoulder rotating its head in my direction as if to \"lock-in\" with arms fully extended and knees down. The second when it stepped out before dropping, the realization of what the subject was hit me and my reaction was a \"surreal\" shock considering the unexpected circumstances. When on the ground, the subject transitioned very rapidly to where it appeared it was now full body down favoring its right shoulder, rapidly moving and appeared to actually be inching up away from the tree it was initially behind & into a bit of a clearing from my perspective view. Knowing that the thermal unit I had was not self-recordable like a camcorder (at that time, to record video, our set-up was a back-pack attached to your front side containing a mini-DVR, connecting battery with plug-ins and helmet mount for the imager) I began snapping my fingers whispering loud \"Cliff,\" \"Cliff\" as I could hear Cliff repacking his truck about 30-35 yards behind me at a seven-a-clock position- back left. As I did that, the subject, who was grounded, still leaning off the right shoulder, began an almost unnerved & panicked, full-body convulsive movement obviously reactionary to the sound of my snapping fingers and voice (see re-creation pic #5). Oddly enough, it would pause-freeze in between those intervals and I was blown away that it appeared to react to my minimal sound, while my party (almost halfway between our line of site) was making a considerable amount of noise with conversing & acoustic guitar-playing. Cliff never responded in my cautious 5-6 attempts to get his attention and the subject further transitioned on the ground into what appeared to be a \"breaststroke\" uniformed-like motion (see re-creation pics #6 & #7). \"It\" was on its knees, head straight, facing toward a nine-o-clock position from my point of view, slightly down, back straight with clear space in between front torso and ground and violently swinging back what appeared to be both arms in a stroke-like motion. The hand positioning from my view (looking at the left arm) appeared to be positioned as if having four fingers held tight together and a thumb spaced away or extended, but I'm not absolutely certain. I could clearly see the subject repeat this movement 3-4 times and it appeared as if the large upper-body was being held up by the subject's abdominal muscles by the positioning and vertical space between the upper torso and ground. From this position, the subject got back down completely on the ground on its right shoulder and held an open hand above its face (facing me) as if \"blocking the sun from its eyes.\" (see re-creation pics #8 & #9) I could even make out pretty clearly, five spread digits on the left hand up by its face. From this positioning the very agile subject appeared to \"pop-up\" from the ground clearly using no arms and quickly backed behind the initial tree I first witnessed it from. Again it looked at me right to left with its alternating head on both sides of the tree before dropping right back to the ground behind that same tree. It immediately came back up with what appeared to be the benefit of one arm which I believe was its right (am not certain because of how quickly it got up). Within seconds, it had quickly moved a few feet further back in the clear with its back clearly to me and what looked like the left leg slightly forward (see re-creation pics #10 & #11) and remained completely motionless for the next 40-45 seconds or so. Now I could clearly see the full profile of the subject (estimate about 90%) from about just below the calves up. Remarkably, I do not recall actually seeing its feet from my vantage point during the entire encounter. I can remember just repeating to myself under my breath, over and over, \"Oh my god, oh my god, I can't believe it's really happening, right now.\" Its appearance (even with a white thermal profile) was absolutely remarkable & distinct with uneven weight distribution. The subject appeared to clearly possess about 2/3rds of its body weight in the upper extremities. It was obvious that the subject was predominantly bipedal by its build, though its movements on the ground just prior appeared agile, fluid and effortless. The subject's legs were fairly long but not particularly bulky in relationship to the massive torso above the waist as the bulk appeared from the waist up into just these massive shoulders & traps with no visible neck and what appeared to be from behind-- a smallish-rounder head (no discernable sagittal crest). The arm length was astonishing in that they looked \"exaggerated\" and appeared to hang as low as the subjects knees and possibly even further. A matter of fact, my guess would have its fingertips if completely extended (large hands seemed almost fisted) reach mid-to top calves. That impression was slightly thrown off a bit by the discovery the next day in daylight where it appeared the left foot had stepped over a small foot deep berm (while subject's back to me) just beyond the 10-15 yard window the subject stayed in during the whole encounter. The physical impression beyond that small berm, visually appeared to match the distance the subject was from me the night before and was also in wet thick pine-needle duff after raining all night. After about 40-45 seconds of just staring at this basically, glowing live \"statue,\" I had an extremely difficult decision to make--either continue watching the subject until it departs or attempt to document it by taking the imager from my eye, run back and notify Cliff to set-up for recording capability while praying the subject wouldn't leave in the process. I chose the latter, and it was one of the most difficult but unregrettable things I've done in my life. The last image I have of this subject was seeing it in that \"departing\" position (never saw it leave or even move again, just stood there glowing through the imager). I immediately ran towards Cliff, who was still at the back of his truck and was just screaming at him words I don't recall but must have been obvious as he moved very quickly in what I needed him to do. To my chagrin, looking back from where I came, the guitar playing had stopped and I could here a variety of scattering voices from my party and movement, including two people with headlamps on totally oblivious to what was happening, while walking up the small berm and into the line of sight between where I stood opposed to the subject during the encounter. In a panic, and without much of an explanation other then \"I just saw one, get back,\" I attempted to pull everybody back into the congregation area and continue with what they were doing minutes earlier. I had to physically pull some people back who began curiously looking down that pathway behind the congregation area. I knew Cliff was moving quickly and within minutes, saw him fully geared, running quickly back down the path towards where I last witnessed the subject standing. For the few minutes he was back there, my heart was racing from adrenalin & I was still cautiously optimistic Cliff would maybe catch the subject loitering or even departing. Unfortunately, after about 5 minutes he came back & looked at me shaking his head. About an hour later, close to 1:00 AM, Paul G. (WA-BFRO), walked back to the spot so we could interpret actual distance of the subject from my positioning during the encounter. As I saw him walk back to the initial tree it was behind, I yelled, \"stop,\" and he estimated the distance using his own steps at about 150 ft (50 yds). (After returning to this exact area the weekend of September 17-20th 2009, through exact measurement we determined that I first witnessed the subject at around 50 yds with a slight right to left angle, but worked my way up to only 33 yds from the subject with a line of sight from right to left-opposite ends of pathway). Seeing him stand there made my jaw drop as I know Paul is 6'3 & 170lbs, and it was a shock to see him \"fully clothed\" & realize the size discrepancy between both he and the subject. I'd estimate the subject at 4-7 inches taller, but even conservatively estimating its size in comparison, it was about 3 times the total body mass of Paul G. Even with the depth perception issue of this particular proprietary unit I was experienced with, I knew the subject was big once it was in the clear with its back to me, but was shocked how much thicker and oddly proportioned it was compared to Paul. I've always been great estimating people's height and poor estimating people's weight, but by comparing Paul within one hour after and the encounter so fresh in my mind, I'd estimate the subject I saw as being close to 7 ft (maybe 6'9 or 6'8) and between 475, to as much as 575 lbs. As I said earlier, the next day in daylight, what looked like a foot impression dug into heavy, wet duff was first noticed by Jamie J. and looked to be about where the subject had its back to me and left leg slightly forward. Except for the placement, it was unimpressive. Although there was heavy overnight rain, Jamie also found where the ground had been disturbed in several places where the subject had been transitioning on the ground. All of this surface was non-conducive substrate for any kind of attempted casting however and made up of wet, rain-soaked, pine needles. (to see the type of ground cover & me reenacting the subject's movements see second to last picture) It should also be mentioned that 10-15 minutes after the encounter, a female WA-BFRO member thought she was paralleled while walking away from our camp with her boyfriend on the primary vehicle road. Another CA member later heard heavy footfalls several hours later about 30 yds from where I witnessed the subject, and in the early morning hours of about 3:30-4 AM, in a heavy rain, two of us in separate tents heard large (powerful) bipedal footfalls outside our tents (confirmed next day) followed by what sounded like guttural \"doe-like\" grunts. Outside of my tent was a stationed 250D Raytheon thermal imager facing down the pathway of the encounter, but the subject never came close to breaching that pathway (was well behind opposite side of tent) & would've made little difference if it had as the battery life for that unit does not exceed 2 to 2 1/2 hours. Six of us also stayed in the camp one more night (August 19, 2009) and the night was uneventful around camp. But undetermined vocalizations (possibly barred owl) came from the ridge behind us (several miles away) well into the morning. \"RE-CREATION\" picture links in sequence below: (Note)--All \"Re-Creations\" were done taking a digital color picture of the immediate sighting location & the roughly 15-yard window the subject remained in the whole encounter, making it black & white to give a generic \"thermal effect.\" The subject was colored in using whiteout and should not be gaged by recurring size in each individual re-creation as my artwork has limitations. The idea was to give the reader/viewer a general impressionist view focusing on the various subject positioning I recall & a general idea of how the subject visually appeared to me. All re-creations were completed by me within two to three weeks after the encounter (late August to early September 2007)          Link to Canadian artist Brian Cundle's poster rendition of the sighting event: http://northamericanbigfoot.blogspot.com/2010/09/brian-cundle.html ------------------------------------------------------------------------------- More details, potential insight & subjective interpretations from my perspective regarding the subject during the encounter. --At no time did I hear or see the subject vocalizing in any manner ---From the time I first saw the subject behind the tree until I took that imager off my eye while it was in a \"frozen\" but \"departing\" position, the subject remained within about a 10-15-yard window during the whole estimated two-plus minutes of the encounter. --Although it's probable based on time and location, I'm not 100% certain that the \"step, branch break,\" down the trail 5-10 minutes before the encounter can be attributed to the subject I actually witnessed. --I'm certain that without using the thermal imager out of curiosity and boredom, myself nor anyone else in my party would've ever known one of these animals was there. Considering the circumference of the actual camp and where I witnessed the subject, it was strategically positioned far enough back to having no chance of being noticed on a quarter moon night under heavy tree cover. (see camp layout map) --With the unnerved reaction by the subject to my loud whispers and finger-snapping with noisy companions between our line of sight, I believe I saw obvious visual evidence of acute & possibly directional hearing ability of the subject. Furthermore, I believe and it's just my opinion, that the subject never could clearly see me (by never seeming to lock-in visually) but knew my exact presence at all times, maybe either through sound or my likely subconscious, nervous footsteps trying to position myself for better views. -- For as much as I could see, I'm certain I missed a lot when the subject was \"grounded.\" Some of the transitioning was so rapid that it was indiscernible during brief intervals in the encounter & can't properly be described. Much of what couldn't be made out in the rapid transitional movements (like when the subject appeared unnerved) was in-between the subject's distinct positioning I clearly recall. Furthermore, during some other brief intervals, partial ground vegetation blockage was also a factor. --At no time was the encounter a scary experience. If anything, it was very intensely \"surreal\" watching \"one\" through an imager as I have so many other humans & Pacific Northwest animals. Part of the absent fear likely also stemmed from the clear visual distance contrast from the subject and myself and being psychologically comforted that so many of my companions were nearby. --Although you can't interpret actual hair from 30-50 yards with this thermal unit, there did seem to be some hair shade (as have some other large mammals I've seen from a similar distance on certain nights) and the subject was undoubtedly void of any clothing. From 50 yds that night while doing the comparison and measuring the subject's distance from me, Paul G's clothing could be easily discerned through the unit as he wore a winter wardrobe with a checkered flannel, vest and beanie. (Note Paul G was measured and compared from roughly 50 yards when he stood at subject's initial positioning and his clothing was easily discernible, the majority of where I watched the subject was about 33 yards). --I saw nothing indicating the subject witnessed was a female (not extremely wide hips, no discernible breasts etc…) and based on size/behavior, it's my opinion the subject was likely a young adult male. ---Based on the agile, effortless movements of the subject both on the ground and standing up behind the tree in the beginning of the encounter, coupled with its profile appearance, I fully believe I saw a more \"ape-like animal\" being then my preconceived notion of what a sasquatch might appear like or actually be. --One month after the sighting, a local friend informed me that a boy scout master he knew personally & his troop had had a late afternoon sighting around 4:00 PM on August 19th (the day after my encounter) about 3-5 miles as the crow flies up-country from our camp location near a small lake. Coincidentally, our camp experienced nothing unusual our last night (August 19th). Several months later, the same friend also stated that he'd driven by our camp location and saw several hunters butchering and skinning elk right in broad daylight. Not uncommon during hunting season in that location I've been told. --The area continues to be a hot area as one of our WA-BFRO researchers had an almost identical but more brief & distant thermal sighting with the same X200xp unit, 1/4 of a mile from this location about 10 months later. On that expedition, several people reported much of the stealth & dexterous behavior I'd witnessed the previous August and emailed or called to inform me upon returning home.","location_details":"Withheld","county":"Yakima County","state":"Washington","season":"Summer","title":"Report 26065: California BFRO researcher has sighting with a thermal imaging unit in Wenatchee National Forest","latitude":46.85,"longitude":-121.25,"date":"2007-08-18","number":26065,"classification":"Class A","geohash":"c23f8bu3n0","temperature_high":68.9,"temperature_mid":58.8,"temperature_low":49.2,"dew_point":43.9,"humidity":59.8,"cloud_cover":25.5,"moon_phase":0.19,"precip_intensity":0.014,"precip_probability":100,"precip_type":"['rain']","pressure":1010.7,"summary":"Partly cloudy throughout the day with late afternoon rain.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":8.1,"wind_bearing":270.8,"wind_speed":14.8,"id":52},{"observed":"A knocking noise sounded like a limb was being being used to hit a tree this noise was late at night after midnight it  woke me up was like 10 to 15 knocks and then was quiet for  what seemed like 20 mins and the knocking started again.   This went on just like the first time the knocking was even in its rythem and happened three more times that night.","location_details":"Between the old burn and nasty flats along the creek  drainage.","county":"Yakima County","state":"Washington","season":"Fall","title":"Report 25999: Hunter reports hearing loud wood knocking NW of Tieton","latitude":46.52485,"longitude":-121.2957,"date":"2008-10-05","number":25999,"classification":"Class B","geohash":"c238xve4vk","temperature_high":61.1,"temperature_mid":50.8,"temperature_low":37.1,"dew_point":38.2,"humidity":64.9,"cloud_cover":41.3,"moon_phase":0.21,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1012.3,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":9.9,"wind_bearing":234.4,"wind_speed":13.9,"id":53},{"observed":"Never saw anything but 4 years ago my friend, his son and I went camping up near Mount Adams ( A very remote campground) and we were hearing strange screams right before nightfall. Shortly after dark we could hear something messing around on the outskirts of our camp, breaking large branches and such. Around 12am or so my friend was going to bed and unzipped the tent and something very large jumped and ran off from behind the tent. Whatever it was shook the ground to point that I could feel it from about 15 feet away. Later that night I awoke to garbage cans being hit or thrown..at first far off but moving closer over a few minutes time. Then I heard something walking at the edge of camp and it grunted loudly. I had woke up my friend and his son and without my being aware he said a really loud \"BOO\" as I was intently listening for sounds in the forest this scared the holy # out of me.....about had a heart attack. We heard no more sounds that evening. Fast forward to this years trip.......same camp..... Our first two nights were un-eventful. But our last night was not. My friend, his 20 year old Son, my 8 year old Daughter and I were at the same camp. My friend, because of the previous experience, decided to do a little tree knocking, there were no replies. An hour passed and we began to hear screams. First we heard it off in the distance to our south and 3-4 minutes later it was to the NW. I am not sure if whatever it was was traveling or if it was getting a reply from the other location. We probably heard these calls 3 times. All was quiet for a couple of hours. After dark we began hearing something around camp. We heard what sounded like very large branches being broken out in the forest. We shined flashlights out in the direction of the sounds and it would be quiet for a little while. Well this went on for 3 hours or better and we decided to go to bed. My friend, my Daughter and I were sleeping in a little RV and his 20 year old Son in a tent as he was being brave and said he was not freaked out by the noises. Everyone drifted off to sleep except me as I was listening to see if anything came into camp. Aprox. and hour passed and I heard what sounded like something running and breathing very heavy, with an almost grunting with each breath (kind of hard to explain) going right beside the RV and it sounded rather large. I actually thought bear for a moment. I listened intently but heard nothing. Now this night was a full moon and the windows on one end of the RV were faced in a way that allowed the moonlight to shine through them (These windows are aprox. 5-6 feet from the ground). While sitting there listening for any more noises the level of light decreased and I could notice the change in light through these windows. I could see no shape however. (I thought cloud? But this was a cloudless night and the timing of the thing running a few moments before made this a little less possible.) I wanted to look out, but the position in the RV that I was sleeping in would have taken a lot of movement and to be honest I was having these thoughts that if I was to look out that I would see a face staring back at me. I just listened to make sure that my friends Son was not being attacked. I wanted to wake up my friend but did not want my Daughter waking up. I heard no more sounds for a while and eventually fell asleep. I had been sleeping for a while and was awakened to the RV shaking and something trying to get in through the doors. I heard knocking and my friends Son yelling \"open the GD door\". He said he had been sleeping and was woke up by banging on trees and heard something running in the woods around the tent. He said that he heard something next to the tent and that this side of the tent went dark. He said that he was listening and heard what he thought was his Dad say my name and then laugh. He said that the voice sounded very close to his Dad's but he could tell it wasn't. He said that this is when he ran for the RV with a big stick in his hand. We heard nothing else this night. The next morning my friend went a little ways up a trail and knocked on a tree and kept hearing a series of whistles in the trees. Now I am not sure what this was as we did not see anything. The nearest campers to us were aprox. a mile away on the opposite side of the lake. They were a family with Grand parents and did not seem like they would have done all this for a practical joke on complete strangers in the middle of the night and I would think we would have caught a glimpse of them in our flashlight beams earlier. We want to go back here with some night vision and a couple more people next year to see if we can see anything.","location_details":"Exact location omitted upon request.","county":"Yakima County","state":"Washington","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":26447,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":54},{"observed":"Early one morning while scouting for mule deer and elk, I had also been hoping to fill my bear tag at the same time, as bear season was open. This area is not well known for black bear activity - but they are present. I was tipped off by a neighboring camper a few nights earlier, of a watering hole in a clearing a few hundred yards from camp and assure I would see plenty of elk and mulies. I was looking forward to snapping some pics with my new camera as well as having a shot at a black bear. I woke up well before the sun, gathered all my camera gear, rifle, pistol, and chair and headed out. Just inside the clearing, there is a grove of trees providing perfect cover for an 80 yd shot at the watering hole. Just beyond the watering hole (approx. 30 yds further) is the other side of the opening where the forest begins, and a massive game trail - like grand central station for the critters. I hunkered down and was immediately attacked by mosquitoes - like flies on sh*t. I couldn't let the constant squeeter slapping blow my cover so I cut two holes in my stocking cap, pulled it over my eyes and zipped my coat up over my neck. This helped, and I did not move a muscle for the next 30 minutes. Facing east, I was staring straight at the game trail entrance as the sun had just started coming up beyond the trees. Then, out of nowhere - just to the left of where I was patiently watching - it moved into view. According to google earth it was 110 yds away and all it did was stand there, full-frontal and facing me. \"I'm looking at bigfoot. I'm looking at bigfoot.\" - must have repeated a thousand times in my head. As I mentioned earlier, the sun was just coming up, and it glimmered off its fur perfectly in the dark woods. I could see its full outline from the elbows up, as it was standing behind a fallen tree that was still hanging on to its roots a few feet off the ground. There was enough light that I could barely make out the shadow of its jaw line and chin - well below its shoulder line. And the hair - its hair was beaming with light from behind. I could not tell what color it was for sure, with such a contrast of color between dark woods and brilliant sunlight beaming off it, but I will forever remember the outline of its body and long hair. So many things ran through my head, during the (approx.) 45 second encounter - with a camera on my left, and two firearms on my right - I could not gamble making a move for my camera, and I have NO reason to shoot a squatch. There was no threat, and through all the racing thoughts I came to the conclusion that this may be the last encounter I ever have. I soaked in every second. Though I knew beyond a shadow of a doubt what I was looking at, I waited to see if it was just a reflection of trees and shadows moving with the rising sun - but as soon as this thought had come to mind, the creature moved like a ghost behind a large tree and out of view. I waited a couple hours longer, and two mule deer bucks came running from the north and stopped at the watering hole - between me and the edge of the trees where I had seen the squatch. Still eager to get a photo of the deer, I stood up to get their attention and snapped a few pics of them both looking at me. I got a few nice pictures before they took off towards the area I saw the squatch. Just before before they reached the treeline, they stopped dead in their tracks, sniffed the air, looked at me, stomped their feet, sniffed the air again, and looked back in my direction, before cautiously entering the woods and out of sight. At this time, I grabbed just my pistol and camera and proceeded across the opening to the area of the sighting to gauge the height of the fallen tree from which behind I saw the squatch. I am 5'10\", and when I stood behind the fallen tree, the top of it came to my shoulders. This is the height at which I saw the squatch from its elbows up. With my camera in hand, and my pistol holstered, I did not feel any threat - but I really didn't want to stick around much longer either. I searched briefly for footprints, but there was so much grass, weeds, and pine needles I just assumed it was better to head back to camp and reflect. I am looking forward to another opportunity to observe.","location_details":"Cowiche Wilderness - I'd rather not say exactly where - I like this area and want to keep the traffic down during hunting seasons.","county":"Yakima County","state":"Washington","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":30526,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":55},{"observed":"Let me begin by stating that my mother Renae Sampson is a member of the BFRO and has gone on multiple expeditions, is fairly knowledgable about Bigfoot activities and sightings, and has shared her stories with me. I am somewhat of a skeptic, but believe there is always a possibility of discovering new creatures on our planet, but until this past weekend I had never experienced anything first hand. Growing up in central and western Washington, my whole family has always enjoyed the wild outdoor spaces whether camping, day hiking, fishing or just exploring old mountain dirt roads. This past weekend June 7-8, 2014 was no different... We made camp at the upper Bumping Lake campground using 2 small tents and a picnic table tent. The weather was in the upper 70's to low 80's during the day, we had 3 young children ages 4-9, and 4 adults age 37-62. (Whether that's notable or not, I don't know- but I added it in case.) My brother and his family joined us only for the day leaving around 5pm. We rode bikes, played in the water, ate lunch, hiked around the campsite on animal trails, normal camping activity with kids. One notable strange thing happened happened around 6pm... My 4 year old son needed to use the restroom and we decided to walk through the small island of trees at the end of the campsite paved loop. We startled a deer in there and I remember thinking \"that's strange to see a deer in here with so much human activity around the campsites\" I wanted to try and take a pic with my iphone and tried to walk a bit closer. My son stayed right at my heels, also being curious if we could get closer. I don't know why, but I always call wild animals \"baby\" and spoke to this deer: \"it's ok baby, we won't hurt you\" etc. (And I honestly never would, no guns or any type of weapons for my family) So we move forward, the deer slowly walking away a few feet, nibbling some leaves, me moving forward, Deer looking back at me, deer nibbling leaves, the deer never being more than 20' away from us, until we emerge from that small island of trees, cross the paved road into an empty campsite near the restrooms. It was almost as if it wanted me to follow, it kept looking back at me, but never running off. My son looks up and says, \"I don't want to follow that deer anymore, Mama\" and I try to coax him along a bit more. He was adamant and did not want to enter that part of the forest. I follow the deer a bit more trying to get that \"one great nature photo\" and then I lost the deer over a small rise. I even crouched low to see if I could spot moving legs-nothing. What is interesting about this is that my son is very outgoing, adventurous and always wants to lead the way. Was some instinct holding him back? (Whether this is notable or not, I included it anyway) After dinner, my mom, son and I went for a drive up the dirt road (1800) all the way to the end and back. Got back to camp about 9pm, made a fire, sat around and told stories, watched bats flying, watched for shooting stars. The night was calm with not much of a breeze to notice, few clouds in the sky. The moon was in its waxing gibbous phase and visible in the southern sky straight up from our campsite. I put my son to bed in our tent, then stayed up with my mom at the campfire till midnight. I simply couldn't keep my eyes open any longer and quickly fell into a deep sleep. Here's where it gets interesting and something I will never forget... Maybe its the cool night air (approx 54F) or the glass of wine before bed, but I had to wake up and go potty. As I lay trying to convince myself to get out of my warm cozy sleeping bag and don my slippers to outside behind the tent, I hear off in the far distance toward the South part of the lake a \"Clack....clack, clack, clack\" and my brain races to identify the sound. By the time I realize I am hearing rocks clacking together I hear it again, in a definite pattern \"Clack....clack, clack, clack\". Now I am wide awake, on alert and must pee now! I have to say, I did not much want to get out of my tent at this point. Nevertheless, I did, and quickly went potty behind my tent and hopped back into bed. I remember thinking \"what the hell is that?\" I grabbed my headlamp and noted the time on my watch as a few minutes past 2am. I wanted to remember this and tell my mom in the morning. I would say I listened to this clacking occurring repeatedly every couple of minutes for approx. 10 minutes and somehow fell back to sleep. Here's where it gets freaky! I'm fast asleep and become aware that there is the sound of stampeding animals right behind my tent. Still in a haze of sleep, my head on my pillow up against the wall of our tent, I feel what seem to be fingers touch the back of my head in what I can only describe as a \"hard petting\". I feel the end of my tent beyond my feet on the inflated bed my son and I are sleeping on LIFTS UP! And then its placed gently back on the ground, like floating down! I reach out to touch my son and he is facing away from me with his arms and hands under the covers. He had not touched me....what did?! I hear something brush the side of the tent! And then, I hear my mom's voice in a loud shouting whisper: \"Jennifer!!\" I am awake and alert and scared at this point and try to call out to her but my voice won't come out. I am barely able to utter a weak mumble sound.  I hear the clacking rock sound closer now, in the near distance south of our tent in the \"Clack....clack, clack, clack\" pattern, with a responding \"Clack....clack, clack, clack\" from further away maybe south-west, maybe even from the other side of the lake. And then the closer sound again this time, rapidly: \"CLACK, CLACK, CLACK, CLACK, CLACK, CLACK\"  I have to tell you I was completely petrified with fear at this point, could not move or speak. Somehow, like a miracle, I fell back to sleep. Again, with that night chilly air I woke with the need to pee. I woke up thinking \"Something weird is going on here\". I could still hear the occasional clacking far off now, in the southern distance. No longer feeling petrified with fear, I don my slippers, quickly potty behind the tent again and dash back to bed. I notice the sky is still dark, full of stars and the moon positioned in the south western part of the sky right above the mountaintops. I did not check the time, but imagine it was around 4-5am. I don't remember sleeping well, filled with fright and thought \"next time we're sleeping in my Explorer\" and then it was 8am. I could hardly wait for my mom to wake so I could tell her what happened. I rose before Mom and my son and walked around our campsite looking for any sign of a visitor. No Bigfoot footprints. My tent was still firmly staked down. Couple of fresh deer tracks on the trail behind our tents. WHAT THE HECK??!! Mom woke up and I recount my story to her of the night's events. She states she was not awake at all during the night, and doesn't remember calling out my name. The funny thing about that is that I've gone by \"Jen\" for 20 years, and only my parents still call me \"Jennifer\". Weird. We pack up camp with the intent of going to the other side of the lake for a hike along the Cougar/Swamp trail for a spell before we headed home. We wanted to get to the Boulder Creek crossing and were curious if my 4 year old son could make it. He did, and we had fun taking pics along the way, had a snack break, met some folks on the trail on the way back, not too hot, not too breezy...all in all a nice day. When we were about 15 minutes away from our cars at the trailhead, we heard a sound. A sound my mom and I have never heard before. We were in a thick wooded portion of the trail: close to the water on one side, and fairly straight up elevation on the other- meaning the hillside rose steeply upwards. I do not think either of us would be able to easily climb up this land covered thickly with Kinnickinick, Bunchberry, ferns, and many many trees growing closely together. This is where the sound came from...directly above us! Hard to describe, but sounded like this: \"HUMPF\" like coming from deep within a large animal, kind of guttural, but not a growl. And it was loud. And close. And no other sounds like the animal moving or walking through this thick vegetation. We all stopped and looked at each other wide-eyed. We looked up into the woods a bit but could not see anything through the thick plant life. I was a bit on edge and thought, \"let's get out of here!\" We continued the hike back to our cars and I remember thinking to myself, \"that was weird\", and what a weird night I had just experienced and why isn't my mom talking about this more?? She's the Bigfoot fanatic in our family! Didn't she think that was strange? Maybe she was meant to forget? Or not notice? I understand Bigfoot may have powers beyond our knowledge or capabilities. You never know... So, that is my story to the best of my recollection.  It scared the hell out of me. I literally felt paralyzed. I am intrigued. I will continue to go camping, and maybe...just maybe have another encounter-if that's how you would classify this story.","location_details":"OK to post online: Location was at Bumping Lake, Upper Campground site #37. Very end of the campground loop.  And on Swamp/Cougar Lake trail.","county":"Yakima County","state":"Washington","season":"Spring","title":"Report 45360: Campers sleeping inside their tent hear clacking and are touched near Bumping Lake","latitude":46.85524,"longitude":-121.3034,"date":"2014-06-08","number":45360,"classification":"Class B","geohash":"c23dx9tx9c","temperature_high":72.8,"temperature_mid":64.1,"temperature_low":55.7,"dew_point":43.5,"humidity":48.3,"cloud_cover":23,"moon_phase":0.36,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1018.8,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":9.9,"wind_bearing":306.9,"wind_speed":16,"id":56},{"observed":"September 14 My adult son, daughter and her son and I all hiked into Twin Sisters Lakes from the Deep Creek Campground around 1 1/2 to 2 miles. My son and were planning to spend 2 nights and daughter and her son, just for the day. We set up camp, ate lunch and just enjoyed the day at the lake and surrounding area. Many hunters were leaving due to it being the last day of Bow season for Elk so we watched them being packed out by Mules and Horses. Beautiful day in the low 80's I would say. My daughter and her son left around 3:30 so it was just my son and I and the 2 dogs. He fly fished and I just relaxed and read at camp. At dusk we started a fire, ate and had a glass of wine.  I did a couple wood knocks but did not hear a response. Around 9:00 we went to our tents with a dog in each for the night. At 1:30 in the morning the dogs needed out to do their business so we did also then back to bed. My son snores terribly so my sleeping was intermittent. Our tents were between two trees about 8 feet apart and a foot from each other and the trees. I awoke sometime in the night and raised up because I heard the dog moving around. He was staring out the window towards the Lake. He did this several times that night, didn't bark or growl. I heard nothing that night except my son and the dogs snoring. September 15 Awoke early and we decided to take a hike to Blankenship Lakes and Meadow. Spooked a Rough Grouse on the way and met 2 Bow Hunters on the trail. They had no luck but said where they were camped at Blankenship was busy with coyotes during the previous night. When we reached the Lake one of the dogs Maggie would not leave Bob's side so we continued on. Got back to camp around noon. When dusk arrived we made a fire and I decided to do a call, one loud Whoop and immediately across the lake we got a return whoop and Elk on both sides of the lake started bugling back and forth to each other. Also a coyote yip then it was quiet for awhile and then more Elk bugles and a loud knock on the hill behind our tents. By this time my son was wide eyed and couldn't believe what he was hearing. I had told him of all of my expeditions and reports from others so he was a believer but had never experienced it for himself. We decided to go to bed and he immediately went to sleep snoring right away. I on the other hand was awake and listening when I felt something heavy stepping on the side of my tent where my arm was lying , I slowly moved my arm not making a sound because I didn't want whatever it was to know I wasn't sleeping. I felt my head being pushed down also as it went by and a loud swoosh on the tent fly. I was petrified and tried to call out \"Go Away\" but nothing came out. I was mute, but continued to try and say something to wake my son up. He and both dogs were snoring. After it passed my tent I continued to hear soft bipedal footfalls around our camp. I did not sleep all night. Around dawn I heard another wood knock. We got up , packed up and left. Very memorable trip for us, shook me up but I still want to have a sighting and will keep doing this. Note: Actual names edited by the investigator in order to protect the identity and privacy of the witnesses. ST","location_details":"Trail head at Deep Creek Campground to Twin Sisters Lakes","county":"Yakima County","state":"Washington","season":"Summer","title":"Report 46546: Mother and son, while backpacking, experience a possible night-time camp approach near Natches","latitude":46.73581,"longitude":-121.3201,"date":"2014-09-15","number":46546,"classification":"Class B","geohash":"c239z7cruf","temperature_high":85.4,"temperature_mid":61.9,"temperature_low":41.8,"dew_point":37.3,"humidity":46.5,"cloud_cover":0,"moon_phase":0.75,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1013.6,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":"8.0","visibility":9.9,"wind_bearing":300.6,"wind_speed":9,"id":57},{"observed":"My incident was no visual in the sense of seeing bigfoot itself.  another family member of mine has seen him before.  So it has been common in the area.  My incident however was simply footprints in the snow.  I saw the footprints in the snow in the morning.  We had snow the night before.  The footprints started around a tree in front of our house.  I followed them and they led around the back of our house to another tree.  The footprints then circled around the area in front of the tree about 4 full circles and then stopped.  There were no footsteps leading from the circle to anywhere else, as well as no footsteps back to the front of the house.  I put a garbage can lid over one of the prints to preserve it until I could take a picture of it.  Unfortunately I never had a chance.","location_details":null,"county":"Rockland County","state":"New York","season":"Winter","title":null,"latitude":null,"longitude":null,"date":null,"number":5022,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":58},{"observed":"My friend and I rode snowmobiles about 8 miles into a wilderness area. No one had been in the are for at least 2 days because previous tracks were covered by Saturdays storm. We turned off the main road and onto a side road and rode a few hundred feet before we stopped at a bridge crossing a stream. As soon as we took off our helmets we heard a loud howl/moan sound that lasted 8-10 seconds. We looked at each other in shock. Another howl followed about 8 seconds behind it and then we head a loud bang on a tree in the opposite direction. It was like a super loud woodpecker just pecked once. A few seconds after we heard a large tree branch break in the direction of the howl and then heard a third howl. Two more loud wood pecker sounds then followed with about 5 seconds in between. The scream seemed like it was from a mile away, but in the dense trees it was likely much closer. The wood noises and loud break sounded like they were within 50 yards or so. Then it was silent for about 5 minutes and we started to get ready to leave and the howls started again, but seemed like they were twice as far away. After about 6 more howls with 5 seconds or so in between, we decided to leave the area. Neither of us have ever heard anything like it. It seemed like it had an amplifier and we were the only people within about a 8 mile radius. I listened to the \"Ohio howl\" and it was close but longer and more fluctuation in some of the moans.","location_details":"We parked at Fish Creek Snowpark at Lake Rimrock. Followed the 1000 road to the 1070 road. Went 150 feet down the 1070 and stopped at the creek.","county":"Yakima County","state":"Washington","season":"Winter","title":"Report 62332: Morning snowmobilers hear howls, tree knocks, branch break 8mi south of Rimrock Lake","latitude":46.51122,"longitude":-121.2719,"date":"2018-12-31","number":62332,"classification":"Class B","geohash":"c23b87h7rz","temperature_high":41.5,"temperature_mid":30.9,"temperature_low":21.7,"dew_point":19.8,"humidity":65.2,"cloud_cover":9.9,"moon_phase":0.82,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1030.9,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":"4.0","visibility":9.9,"wind_bearing":317.3,"wind_speed":9.2,"id":59},{"observed":"Heard at least four howls in the morning between 4-5 am at silver beach camp grounds. The sounds were about a mile away but could here clearly in the morning. Thought was wild life or maybe a person. Then looked up a video on YouTube of people using a parabolic sound dish recording Sasquatch vocalizing sounds when I arrived back home. Was able to recognize the sounds from the video to what I had heard. It was a terrifying sound. The best way to describe it was a howl sound between a man and a ape. This is the link to the video of the sounds I heard:  Hopefully this video helps or explains my experience.","location_details":"Silver beach near Rimrock lake","county":"Yakima County","state":"Washington","season":"Summer","title":"Report 63077: Camper hears Ohio howls at 4-5am near Rimrock Lake.","latitude":46.64558,"longitude":-121.2323,"date":"2019-06-22","number":63077,"classification":"Class B","geohash":"c23c37964w","temperature_high":76.5,"temperature_mid":64.2,"temperature_low":50.3,"dew_point":43.7,"humidity":49.2,"cloud_cover":13.5,"moon_phase":0.68,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1018.4,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":"10.0","visibility":9.4,"wind_bearing":301.1,"wind_speed":18.6,"id":60}]","status":200,"url":"http://localhost:3000/api/posts?page=5"},"revalidate":31536000,"tags":[]}