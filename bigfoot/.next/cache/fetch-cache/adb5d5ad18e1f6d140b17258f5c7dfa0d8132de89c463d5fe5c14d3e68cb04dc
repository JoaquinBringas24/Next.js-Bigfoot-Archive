{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:26:09 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"My experience with Bigfoot occured when I was about ten years old during the fall of 1977.  I was always exploring the wooded area between route 5 and route 20 in northwestern PA, west of Crayton road.  One cool, wet evening just before dusk, I walked north into the woods via the main trail from our house.  At the fork in the trail, running north and east, was a small sand pit which I crouched into because I saw someone or something in the distance.  I peered over the rough, looking slightly northeastward. I watched this thing for nearly five minutes.  It was over 7 feet tall and weighted about 500 - 700 pounds from as far as I could tell.  It was black from head to toe.  Even its face was black.  It was tearing off tree limbs and pushing over rotted trees.   Playing as such as I had done several days earlier at the exact same spot. It must have been watching me.  It amazed me because there were really no rotted trees left to push over or rotted tree branches to break. It's strength was incredible.  I could hear the sounds of trees crackling and smashing to the ground.  I grew extremely scared by bigfoots size and strength and what it might do to me if it saw me.  The hair on my body stood straight up and without looking back I turned and ran as fast as I could.  I ran approximately 50 yards back along the trail and another 100 yards through the field to my parents house.  I never returned to explore the woods for another six months.","location_details":"I-20 west from Erie, PA to West Springfield, PA. Goto Crayton Road.  Head north less than 1/4 mile on the west side of the road.","county":"Erie County","state":"Pennsylvania","season":"Fall","title":"Report 11506: Youth watches while bipedal creature pushes down trees","latitude":41.91826,"longitude":-80.54177,"date":"1977-10-15","number":11506,"classification":"Class A","geohash":"dpqwrnzr8d","temperature_high":60,"temperature_mid":46.9,"temperature_low":36.9,"dew_point":41.3,"humidity":81.9,"cloud_cover":50.6,"moon_phase":0.1,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1011,"summary":"Becoming cloudy in the afternoon.","conditions":"Partially cloudy","uv_index":null,"visibility":7.8,"wind_bearing":226.4,"wind_speed":14.8,"id":881},{"observed":"This incident happened around 1988-89.  I was about 17 years old at the time of the incident.  The incident happened in Harborcreek PA which is where I lived at the time.  My parents have a house up there in the middle of the woods approximately 50 yards off of the road.  The area is surrounded by woods and open fields.  My parents have 56 acres of woods behind the house that they own.  At the back of the property is a huge ravine/gully that runs east/west of the property.  We have apple trees around the house, and a pond.  (I'm just trying to give you a layout of the area that all this happened) The incident happened one night when a friend of mine dropped me off at our house around dusk.  It was just starting to get dark, but you could see just fine through the trees around the house.  You could see all the way to the next road over, approximately 100 yards or so. (visability was fine).  As I was saying,....I got dropped off and I walked up on the front porch to go inside the house and realized that the door was locked and I didn't have a key at that time.  My parents wearn't home, so I just sat there waiting for them on the front porch until they got back. I was waiting on the porch for about 5 minutes when I heard a crashing noise coming through the woods to the left of me.  I didn't think anything of it at first.  I figured it was an animal or something, maybe a limb fell off of a dead tree or something.  That sort of thing happens all the time there.  Anyhow, I glanced over to my left and noticed approximately 40-50 yards away a very large object moving rapidly through the woods.  It was walking very fast with very long strides.  I could see very long arms swinging down by it's sides, almost straight down.  I stood up to get a better look at whatever it was, and as soon as I did, the object stopped walking.  It actually heard me or something, because it turned my way and took a few steps towards me and then stopped.  I could get a good look at it through the trees even though it was getting darker outside, because the trees in that area are spaced far apart etc.etc.  Anyhow it was at this moment that I could see that it had RED eyes.  They almost glowed!  It appeared to me that it was watching me also trying to figure out what I was.  It was very large, maybe 8-9 feet tall.  It had long arms and legs.  It appeared to have no neck, or a very short neck, kind of like a gorilla.  It appeared to be covered in hair.  We looked at each other for maybe 30 seconds or so, before it turned around and ran back the way that it had come from.  When it turned and ran, it was moving!  I mean it was really moving!  It was almost like a blur running through the woods.  You could hear limbs and dead branches breaking as it ran and then I couldn't hear it anymore.  To say the least, I was terrified!  If what I had saw kept walking towards me, I was planning on putting my hand through the window to get into the house!  I had never been so scared in my life.  I waited a few minutes on the front porch and then decided to go up on the deck at the back of the house (It's on the second floor of the house).  I figured that I would be safer there.  I put the lawn furniture around me like a wall and hid.  About half an hour later I heard my parents car coming down the driveway and then saw the lights on the barn.  I ran down off of the deck and told my parents what had happened. I didn't think that they would believe me, but they actually did!  Anyway, we went outside the next morning to do work on the driveway (it was still dirt, we were putting in a cement driveway). In the soft wet dirt was a couple of huge feet prints!  My mother, my stepfather, and I all saw them.  It had just started to rain, so we went inside to find the camera to take a picture.  When we got outside, the prints were gone from all the rain and mud etc.  I told my friends about it the next day at school, and they all said that it was probably a deer or a black bear.  LISTEN:  I know what I saw wasn't a bear, because they don't walk or run on their back legs the whole time, and anything short of a full size grizzly wouldn't have been that big!  It looked more human/gorilla shaped!  Its movements were like a man walking with huge strides, with it's arms swinging at it's sides straight down.  I got a book out on bigfoot sightings and started to read about them and noticed that many of the people had similarities to mine.  Wooded area, secluded, I also noticed that the bigfoot was walking on the deer trail.  I know, because the next day I went down there and noticed that it was following the deer trail that crosses the street into a big field surrounded by nothing but woods.  They also mentioned glowing eyes in a bunch of them.  I know for a fact that these have to be true stories, because I saw the glowing red eyes myself!  I don't know if you believe me or not, but it doesn't really matter to me!  I know what I saw and I will never,ever forget it.  I will always believe in them, because I actually saw one!","location_details":null,"county":"Erie County","state":"Pennsylvania","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":3634,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":882},{"observed":"In 1991 my mom had a polebarn built on some property she owned in the country. This particular weekend my brothers and sisters and their families got together for a picnic. It was around noon when we arrived and started setting up the tables and preparing the food. My one brother had purchased a moped that was in exellent condition which he kept there for anyone to ride. After about an hour I thought I would take my son for a ride. He was 3 at that time. We were the first ones to ride that day. I thought that it would be a good idea to ride back in the woods since I like them so much. There are parts where there is mostly good size trees, and there are areas where there is alot of tall saplings. though those are up toward the front of the woods. We were back there about 15 minutes When I heard the most GOD AWFULL scream I've ever heard in my life. The kind that will make the hair on the back of your neck stand on end. The first time I heard it, it was quite some distance away but still very loud. Being that the moped was like new it was very quite, and at times you wouldn't think it was runnig. The second time I heard the scream it was alot closer. I'd say maybe 1/4 mile. But only 10 seconds or so had passed. You have to wonder what can travel that fast in the woods and swamp. About another 10 seconds passed and it screamed again. This time it sounded like it was right near us. I really wanted to see what it was but then I thought could I protect my son. Whatever was coming was smashing everything. It sounded like it was knocking everything down that was in it's way. As soon as I heard that I turned the moped around and was trying to go as fast as I could. Many times I would have to help push the bike with my feet to keep it going. I told my son if anything happened to run as fast as he could the direction we were going, and to not stop till he got back to the polebarn. We finally got out of the woods and into the field. I was hollering at the top of my voice to get someones attention. But everyone was in front of the polebarn so no body heard me. All I could think of then was here I'm about to die and nobody will see anything. We got to the front of the polebarn and the reason nobody heard me was cause they had the radio playing loud. I told everyone what happened, and everyone had a good laugh. But no one would go back to see if anything was still there. I really wanted to see what it was, but I was not willing to go back by myself.","location_details":"on Old State Rd off of Rt. 99","county":"Erie County","state":"Pennsylvania","season":"Spring","title":null,"latitude":null,"longitude":null,"date":null,"number":4709,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":883},{"observed":"It was the spring of 1994 I believe, probably April.  I was 15 years old.  The incident happened at my friends house in Girard, PA.  There was me and four of my friends.  It was the weekend and we were ready to camp out about a half a mile away from my friends house.  He lived at the end of a dead end road that ran right by Interstate 90.  Girard is about 15 - 20 minutes from the Ohio Border. We got all of our stuff back to camp and set up around 5 or 6pm.  Our camp site was at the bottom of a ravine with a small creek running through the middle of it.  It was right next to the highway but down a little bit.  The area was dense forest of deciduous mixed with pine. Around 12pm or so we split up into teams and started having a b-b gun war across the ravine from each other.  This was going on for probably about a half hour or so.  I was on the side of the ravine furthest from the highway with two of my friends, my other two friends were on the other side shooting at us.  Then I started to hear something moving through the woods behind us.  It was pretty loud movement with dead fallen branches snapping and twigs breaking.  I grew up out in the woods,and at the time was an avid hunter.  I have seen lots of deer and other native animals in the area and never heard such a ruckus.  Not even from humans before.  So the three of us sat there and listened for a while to this thing getting closer.  We were all a little nervous about what the hell this thing could be.  So when it continued we called a truce over to the other side and joined our other two friends on the bank next to the highway.  They said that they had been hearing the same noises and movement close to them. So with the five of us all huddled together with b-b guns aimed we waited for a little bit.  The noises started up again really close this time so we decided to shine our lights in the same direction on the count of three.  As soon as we turned on the lights the only thing I really saw or paid attention to were these very large green glowing eyes.  They were much bigger than a humans or a bear for that matter.  I took a couple of shots at this thing in reaction( I don't know what a b-b gun would have down but it was pure instinct).  When I got ahold of my self I realized that all of my friends were already over the fence and running down the middle of the highway.  I busted tail and caught up with them when we all stopped on the side of the higway in a ditch to rest for a second.  We were all questioning what each other saw and talking about what the hell this thing was when all of the sudden one of my friends looked up to the top of the hill that the highway fence was on and yelled wolf.  I looked up and saw this enormous outline of a body standing upright, and the biggest thing that stuck out in my mind was the size of the arms compared to the whole body.  The arms were hanging down past this creatures knees .  We got up and bolted down the rest of the highway until we reached the exit and proceeded to walk all the way down route 18 untill it hooked up with route 20.  This was no small jaunt, but we were all scared pretty severely. ","location_details":null,"county":"Erie County","state":"Pennsylvania","season":"Spring","title":null,"latitude":null,"longitude":null,"date":null,"number":3866,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":884},{"observed":"Working as a volunteer at the camp, I was with several campers at a site. Two of the campers began walking down a path away from the campsite, and I was forced to go after them. After walking approx. 60 yards from the campsite (the path bended from the campsite, giving us minimal light from the campfire) one of the campers ducked behind a tree and the other crouched in the path about five feet in front of me. I told the one behind the tree to come over to me which he did. I was about to tell the second camper to get up and come over to me, when the \"creature\" strolled across the path. It was aprox. 7 1/2 feet tall, and slim (it was about 10 feet farther than the camper away from me). Losing sight of the creature, due to the dark and the trees, I turned to the camper besides me, and asked \" did you see that?\". When I was asking the camper , the second camper on the ground said \"there it is again\". I personally did not see it the second time. The camper besides me said he didn't see anything, and i wrote the incident off as another staffer strolling the camp. The next day I did further investigating, looking for footprints, etc. to see if i could see who was roaming around. There were no signs. I must admit I put little effort in lookng though. I asked my co-counselor ,Ted, if he had been roaming about or if he knew who had. Ted said (he was at the lodge at the time) that everybody was in bed( the non-couseling staff stay in the lodge and another cabin)and that it wasn't him. Upon hearing this, i then thought about the possibility of a sasquatch. After this incident, i have regained my interest in cryptozoology as a hobby, which is limited, since i now attend art school in downtown Pittsburgh.","location_details":"Erie county, Pennsylvania. Dirtpath on a campground less than 1 mile south of lake Erie.","county":"Erie County","state":"Pennsylvania","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":3561,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":885},{"observed":"Late at night, in or about July, 1975, I heard a large noise in the woods in front of our house. Although it was dark it was a clear night and quite warm. I looked down into the woods and saw two very large red eyes staring back at me, at first I thought it was a deer but I realized that they were too high up, and I heard what sounded like long slow breaths. I went in and got a flashlight and shined it down there but whatever it was had gone. In the morning I went down to the spot and found no discernable prints but the ground had been heavily trampled. It should be noted that there are many abandoned coke ovens within a quarter mile of here and a fresh running stream right below them. The incident in Zaleski happened years later and involved a feeling of utter terror. I saw nothing but several days later the Columbus Dispatch reported a number of bigfoot sightings were coming from that exact area that was in 1980.","location_details":"near Uniontown, a little town called New Salem, and Zaleski State Forest in Ohio","county":"Fayette County","state":"Pennsylvania","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":3562,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":886},{"observed":"Me and my brothers were playing on these dirt hills behind our house.We were all having fun.When i got this feeling that something was watching me.So i turned around and i saw something that i will never forget.It was maybe 8 feet tall.Standing on 2 legs coverd in brown hair.As soon as i seen it,it just slowly turned around and walked away.When it walked away it swinged its arms up and down.Then i ran home to tell my mother.She said it might have been a deer or bear.But the don't walk away on 2 legs and swing there arms.the next day i went to show them where i saw it and there was small trees twisted down and foot prints.I was 12 when i seen it,i am 22 now and i will never forget what i saw.","location_details":"off 119 between everson and connellsville","county":"Fayette County","state":"Pennsylvania","season":"Fall","title":"Report 9607: Thirteen year old boy has afternoon sighting while playing.","latitude":40.05148,"longitude":-79.56702,"date":"1994-10-15","number":9607,"classification":"Class A","geohash":"dpp7v7jhf1","temperature_high":68.2,"temperature_mid":56.2,"temperature_low":44.2,"dew_point":39.8,"humidity":59,"cloud_cover":24.3,"moon_phase":0.37,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1024.9,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":20.3,"wind_bearing":71.5,"wind_speed":9.9,"id":887},{"observed":"My cousin and I were riding four wheelers through the woods along Breakneck Rd. and all of the sudden a brown furry creature dashed across the path in front of us by about twenty yards or so the whole incident lasted about 3-5 seconds. At first after we gained our wits, my cousin asked me if that was a bear, but I said it could not have been because it was around eight foot tall and running very fast on two legs.","location_details":null,"county":"Fayette County","state":"Pennsylvania","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":3563,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":888},{"observed":"IT HAPPENED NEAR MASONTOWN,PA IN 1999.I WAS COMING HOME ON THIS LONG ROAD THAT WAS DIRECTLY IN THE WOODS,TREES ALL AROUND.I STOPPED THE CAR BECAUSE I HAD TO URINATE.I GOT OUT OF MY CAR AND I SEEN SOMETHING IT WAS ON ALL FOURS AND IT WAS REALLY DARK ON THAT ROAD AND I THOUGHT IT WAS A DEER IT WAS ABOUT 40 YARDS FROM ME.SO I STOOD THERE FOR A SECOND AND WHAT I THOUGHT WAS A DEER STOOD UP ON TWO LEGS AND MADE A LOUD NOISE LIKE I NEVER HEARD BEFORE.SO I JUMPED BACK INTO THE CAR AND I PUT THE CAR IN DRIVE AND SINCE IT WAS IN STANDING IN THE DIRECTION IN WHICH I WAS GOING I GOT A GOOD GLIMPSE OF IT.IT HAD TO BE ABOUT 7 TO 8 FT TALL AND WITH THE CARLIGHTS ON IT, IT HAD RED EYES.SO I BEEPED THE HORN AND IT MADE A SCREAMING SOUND AGAIN AND RAN ACROSS THE WOODS INTO THE TREES AND IT WAS GONE.AND WHAT I SAW WAS LIKE NOTHING I EVER SAW IN MY LIFE.THE RED EYES,BROWN HAIR COVERED ITS BODY AND STANDING LIKE 8 FT TALL.","location_details":"LOCATION IS VERY HARD TO EXPLAIN.  (Northeast of Masontown, between Masontown and McClellandtown  - J.O..)","county":"Fayette County","state":"Pennsylvania","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":2898,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":889},{"observed":"I have debated whether or not to report my encounter to the BFRO or any organization. I don't know why, but I guess I wanted to keep this experience to myself for a few years and then it just didn't seem to matter as far as reporting it. But now, I realize that all encounters need to be in a data base somewhere. These DO exist and when that day of discovery happens, this database will house many of the answers.  My encounter happened in early June of 2010. I took a friend to the Marienville/Timberline ATV trails northeast of Marienville, Pennsylvania in the Allegheny National Forest, to ride ATV’s for the day. Allegheny National Forest covers approximately 515,000 acres or 800 square miles of protected wilderness in North West Pa. The forest is pretty dense in most spots and has many types of terrain. From my understanding the Allegheny National Forest is one of the least densely populated areas east of the Mississippi River. Surrounding the Forest are more woodlands and farm country. The 2 trail systems we were riding that weekend join together and make an approximate 60-80 mile loop from the northern end down to the bottom, and then back up the other side of the loop. My encounter happened on our return back up, heading North. I remember it rained very hard the night before and through the early morning because my friend, who was new to ATV'ing, didn't bring rain gear. We had to go into town to buy him some cheap rain gear and then headed up to the trail. It rained the first half hour or so of our ride and I remember the sun coming out and it was turning into a really nice day for a ride. For those that ride ATV’s, they know that the rain makes mud, which is much more fun to ride in than dust. A few hours into the ride, having stopped and observed some beaver dams, some very old oil wells, a couple logged out areas where you could see for what seemed like miles and other cool sites that the forest has to offer, I was getting in more of a hurry to get back - it was approaching the end of the day. My buddy was way behind me so I decided to stop on the trail and wait for him. I usually don't separate from atv buddies when riding, but this part of the trail was an abandoned logging trail and pretty easy so I rode ahead awhile and then decided to stop and wait for him. He didn’t ride fast or dangerous; he \"putted\" so I knew he was safe, just slow. If he didn't shown up I would turn around and meet up with him. I wasn’t sitting long. I just took my helmet off. That’s when I noticed rocks kept hitting the front right side of my ATV. They weren’t large rocks, maybe about or just smaller than hand sized. It took a minute or so before it occurred to me that I was stopped and that rocks should not be flying through the air and hitting my atv. I was turning my head towards the right to follow the path of these \"air rocks\" as I called them, when my turn stopped. I noticed this “Stump” which turned out to be a dark figure, approximately 70-90 feet away, that appeared to be in a sitting or crouching, or just a low position, then stand up into an upright position. I’ll never forget how it seemed to pop right up like it was on a spring, with very little effort. Initially I looked at its hands because I was interested to see what was in its hand, if anything. It was much taller than a normal human – best guess at this point would be 7.5 feet or so, and absolutely NOT a bear. It was VERY broad at the shoulders. Almost freakishly broad – I remember that very well. It was on 2 legs and I could see its right arm hanging down, which was on the left side because it was facing me. I remember wanting to watch its right hand to see if “it” was armed or what it might be doing. That is funny to me now, because for some reason I assumed it was right handed. It moved its right arm to a slightly bent position, stopping with its hand in front of it, at about its waist. Its left arm stayed hanging to its side – very long arms.  It was all very dark black – a shiny black – from head to toe, or as far as I could see to its feet as it was standing in 1-2 foot tall grass or taller. As my eyes made their way up on the creature I could see its head was all black as well. There was no white or lighter color that stood out, like most animals would have on their face. I could not see clear details of the face as it was all black as well but it did not appear to have hair on all of its face. It appeared to be black skin - the same color black as its hair but I could tell it wasn't hair in some spots. I noticed that the eyes were black, or very dark and deep, with a pronounced brow ridge. I could obviously tell it had a face. I just couldn’t see defined detail of the lips or anything as it was all the same color. The lips were closed though and in a straight line across its face, not open mouthed or smile or frown – just straight lips. The hair was short to medium length and not shaggy. I’d say the hair was an average of 3 to 5 inches long, shorter at the head.  It was almost groomed in appearance but I think it’s from the hair being short and thick. At least that was my impression. Oddly, I did not notice any mud or dirt all over it, which seemed odd because it had rained hard the night before and didn't stop until several hours before this. The trails were muddy. Almost as soon as my eyes were at its head and face and I was trying to “zoom in” and get a better look at the face, it began to leave. It didn’t turn and walk away, but rather it stepped straight backwards into the brush and the trees and not take its eyes away from me. It stayed square to me as it was moving backwards. This all happened in the span of no more than 30 seconds, from the time I noticed the rocks hitting my ATV, up until it moved backwards. When I play it over and over in my mind, it seems more like 30 minutes. At this point an overwhelming fear just filled my mind, and I remember feeling like I shouldn’t be in this spot right now. I don’t remember shaking in fear or anything like that, but I felt warm and almost like I was going to puke. So I hit the gas and took off.  I wish now that I wouldn’t have just fled, but the feeling that came over me was not like I’d experienced before. I had my smart phone/camera in my fender bag and it NEVER occurred to me to get it out and start video. I honestly couldn’t move for a short period of time.  I have been surprised by people walking up on me in the woods and have hunted all my life, so animal encounters, even bear from a distance - do not scare or alarm me. I was in the military for 6 years, and actually had the honor to serve as SEAL TEAM 4 and SDV TEAM 2 (the old UDT TEAM 2) support, as part of a special warfare boat crew. During that time, I had many highly anxious experiences as one could imagine. To summarize, I am pretty observant, I don’t have a tendency to over-react and I don’t scare easy. I am very level headed and definitely not crazy. I didn't instantly think \"Bigfoot\" as I wasn’t a REAL believer then. At least I doubted their existence in the Eastern US and if they existed it was only in the Northwest US, Canada or Alaska.  This encounter took my emotions to places they had not been or at least had not been for a long time. It has been going through my head for over 4 years. I didn't tell anybody except my fiancée within the first year after the encounter. Now - quite a few people know. The person I was riding with that day just found out in 2014. I never told him about the story before, but because I couldn’t remember if it was springtime/early summer or late summer/Fall when this happened. I asked him what week if he remembered. When he told me it was springtime / early summer, he naturally asked why – what’s up? I told him what happened. It turns out that he believes in these creatures too. He then realized why I was acting so weird when we finally caught back up with each other, and then on the 2 and a half hour truck ride home. Now I wish I would have told him then. Maybe we could have joined together and gone back to look for signs or whatever we could find. Instead, the overwhelming feeling of “What the heck was that”, and “I can’t tell anybody-they won’t believe me anyways” took over, and I kept it to myself.  Nobody has to tell me what I saw or didn't see. I knew what I saw. I saw a large dark figure with hair that could throw rocks (and very accurately), stand up within 100 feet from me, in a large dense forest where there aren't any cabins or people just hanging out.  I still do leave the option open for an extremely large man (larger than anyone I have ever met) in a heavily padded Gillie suit with hair on it standing about 100 foot from the trail just waiting for someone to stop in that exact spot so he could throw rocks at him and take a chance of getting shot (most folks on ATVs will pack a handgun when riding in deep woods. At least that's my experience). Now that’s being sarcastic, but trying to make a truth out of what happened. Of course that option is slim, but it will always be there as I didn't walk up to this thing and shake its hand or hug it, so being 100% sure it was a Sasquatch just isn't possible. I am at 99.999% sure though. I do know that a fear like I’ve not felt in a long time, if ever, took over me for awhile. Something told me to go, to move on, that I shouldn't be here right now. Again - I am a very rational person and this just didn't make sense to me at all. I eventually plan on returning to that general area, on ATV and parking the bike and doing some walking. I just need to look around and feel comfortable with that. Ever since my encounter, I cannot put this down. I’ve been researching since and came across various online groups that discuss encounters. I want to learn as much as I can before returning and looking around and I want to go armed with more knowledge than I have now. UPDATE: I have returned to this trail (5 1/2 years later) and found the area this happened. It was strange being there.  Some of my biggest questions since learning more about these creatures are “What was it doing there, close to used ATV trails” and “Why did it draw my attention to itself?” If it hadn’t thrown rocks I would not have looked and if it hadn’t stood up, I probably wouldn’t have even noticed it. Someone told me that maybe it was travelling and recently crossed that trail. The reason for rock throwing and drawing attention to IT was possibly to draw attention to it on purpose so my attention wouldn’t go to something else nearby less able to protect itself. I interpret that as young ones. That NEVER crossed my mind. Just to realize that one was in the area blew my mind away and made me start thinking differently about what could be out there. Now, there may have been more? I’ll never know that for sure, but it does make sense to that question that’s been bugging me. I now wonder if there were young close to me, maybe they were throwing the rocks being mischievous. It is still hard for me to grasp that anything could throw rocks from approximately 90 feet away and hit the same general area – very, very accurate. If it wanted to harm me, it would have beaned me in the head and I wouldn’t be writing this encounter.  I've since been researching an area about 25 miles west of this location. I went from not caring or thinking about Sasquatch to a full blown enthusiast. I attend conferences and have actually received an invitation to Beachfoot in Oregon in 2016.  For this years Ohio Bigfoot conference, Sybilla Irwin (a BFRO member and artist) is doing a drawing of what I've described to her, and will be unveiling it at the conference. All of this is exciting, and I cannot wait to see her bring this back to life, and return my emotions back to that 1 minute of my life that changed how I think now. I cannot attach that picture yet as the Ohio Bigfoot conference director has asked not to put it out there until after the conference. But if you would like, I could come back to this and attach the drawing, which will be as close to what I saw as possible. also - for more info on this, The guys from Monster X internet radio contacted me and asked if I would come on their show. They saw my encounter on a group. I agreed and did a 2 hour show with them, discussing this event. Google MONSTER X Dave Groves. I am not looking for any type of notoriety out of this. It's why I haven't put up a report. But they found me and asked, so I agreed. I feel that folks need to know about this and that these creatures DO exist Anybody who knows me will tell you I am a very honest person. It is one of my strong qualities.  I know there are many made up hoax bigfoot stories out there, but I can assure you that this is NOT one of them. I wasn't out looking for a bigfoot that day. I did not ask for this encounter to happen. But it did, and it changed many things about me. I stopped hunting deer and have not hunted since that day. I now cannot put Bigfoot stuff down and even started a bigfoot book collection with some very old and hard to find, autographed bigfoot books. This doesn't happen to a person overnight, unless something occurred to change them. That day certainly did change me.","location_details":"Directions withheld at the request of the witness.","county":"Forest County","state":"Pennsylvania","season":"Summer","title":"Report 51283: ATV rider has broad daylight encounter, rocks thrown near Marienville","latitude":41.51954,"longitude":-78.87955,"date":"2010-06-05","number":51283,"classification":"Class A","geohash":"dprujn3sv7","temperature_high":75.7,"temperature_mid":67.9,"temperature_low":63.4,"dew_point":63.6,"humidity":86.7,"cloud_cover":79.9,"moon_phase":0.78,"precip_intensity":0.134,"precip_probability":100,"precip_type":"['rain']","pressure":1007.4,"summary":"Partly cloudy throughout the day with a chance of rain throughout the day.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":7.3,"wind_bearing":242.4,"wind_speed":11.7,"id":890}]","status":200,"url":"http://localhost:3000/api/posts?page=88"},"revalidate":31536000,"tags":[]}