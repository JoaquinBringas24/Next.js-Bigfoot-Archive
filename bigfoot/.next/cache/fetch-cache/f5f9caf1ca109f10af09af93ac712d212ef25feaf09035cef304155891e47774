{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:04:43 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"I am not sure how relevant this report will be, however I thought it important to add so that any other possible events in the area could be correlated. I was driving; my wife was in the passenger seat and had the \"sighting\". We had already been through Yellowstone, on a cross country trip and had been on the lookout for wildlife all through our driving, so my wife was very sure of what she saw. She had been good about picking out Antelope, Deer, and a Grizzly bear on earlier days during our trip. We were proceeding up the mountain pass, and were in the middle of the switchbacks when my wife saw what she described as \"A man in dark clothes\" on the side of the road on an upcoming part of the pass. She was visibly surprised that the \"Man\" was not there as we turned the corner where he would have been. There were steep cliffs on each side of the road, with no turnouts and very little shoulder. She told me that she was paying attention as we rounded the switchback were he would have been so she could warn me about the man on the side of the road.","location_details":"We were on our way to Rapid City, so we were heading East. It was in the Bighorn National forest. On the switchbacks. 11 miles east from Tensleep Wy.","county":"Washakie County","state":"Wyoming","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":798,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":1},{"observed":"I don't know if what I saw was two bigfoots or something else, but one thing I know is they were things I've never seen before. I also know they weren't bears. I worked in the coal mines near a small town called Amigo. What I used to do (my job description) was coal sampler. I would drive around all day collecting coal for chemical analysis, from the high walls to the deep mine. The deep mine is more remote since they just put the belt head in. It is so far from the plant to the deep mines it would take me about 30 to 35 minutes driving in the mountains. Last week I was driving back from picking up a sample and noticed something running back up in the woods. It was two does. Then I noticed something was laying on the ground. I beeped my horn thinking it was a bob cat and up jumped this light tan (just a little bit darker than the deers skin) thing. I froze. It was definitely wasn't a man or bear. All I know is it was walking upright. It did something that looked like it clapped its hands.  Then I watched it kneel down and crawl into an airshaft for an abandonned mine. To my surprise, another one appeared out of nowhere and ran past it. I could tell this one was only a couple inches taller than me (6-7). I do know it was something I’ve never seen before.  The second one kneeled down and crawled into the same airshaft.","location_details":"Heading to the deep mine Poca #2, the airshaft would be on your right hand side. Look a little past the bridge where the stream flows south. All this is private property.","county":"Wyoming County","state":"West Virginia","season":"Winter","title":"Report 13237: Daylight sighting near an abandonned mining chamber near Amigo","latitude":37.58135,"longitude":-81.29745,"date":"2005-12-03","number":13237,"classification":"Class A","geohash":"dnwjy13p0p","temperature_high":37.8,"temperature_mid":29.5,"temperature_low":21.6,"dew_point":17.5,"humidity":61.7,"cloud_cover":66.7,"moon_phase":0.07,"precip_intensity":0.204,"precip_probability":100,"precip_type":"['rain', 'snow']","pressure":1018.7,"summary":"Partly cloudy throughout the day with late afternoon rain or snow.","conditions":"Snow, Rain, Partially cloudy","uv_index":null,"visibility":9.3,"wind_bearing":168.1,"wind_speed":17.1,"id":2},{"observed":"My family and I went to Ludlow, Vermont for Columbus Day weekend since we enjoy the northeastern woods. We all enjoy observing the local flora and fauna in their natural settings and we often drive and/or walk the back roads looking for deer, moose, bear and whatever else we can spot. One evening we went \"Moose Spotting\" on Tyson Road since during a summer trip to the same area, earlier, we had observed eight moose in one evening. As we drove along Tyson Road I saw a large bipedal form cross the road in two strides. I asked one of my daughters, \"Did you see that? Tell me what did you see.\" I purposely didn't say what I'd seen since I wanted to know if she'd seen what I'd seen. I wanted to be sure I had not imagined it. Very quickly she said, \"I don't know what it was but it was real big, maybe eight feet tall, hairy and crossed the road in two steps.\" She saw the same thing I did.  It crossed the road about 50 feet ahead of us and judging from the trees where it crossed the road I'd say her height estimate is accurate +/- 20%. My other daughter didn't see it since she was in the back seat and was looking out the side windows of the car. I still don't quite believe it but I know what bear, deer and moose look like in natural settings since I've been hunting for 40 years. It wasn't anything I had ever seen in the woods. It walked across the road in two strides, was heavily built, covered in short dark hair and, as stated previously, approximately eight  feet tall. One more thing.  The day before, we had driven the same area, didn't see anything at all, no fauna at all, but we did hear some very odd vocalizations that sound very much like the recordings available on your website.","location_details":"It's off Rt 100 outside of Ludlow Vermont. It crosses some very heavily wooded, desolate areas.","county":"Windsor County","state":"Vermont","season":"Fall","title":"Report 13285: Evening sighting by motorists on Tyson Road, off Route 100, outside Ludlow","latitude":43.4654,"longitude":-72.7051,"date":"2005-10-08","number":13285,"classification":"Class A","geohash":"drsr389u23","temperature_high":64.3,"temperature_mid":51.9,"temperature_low":45.9,"dew_point":49.3,"humidity":90.6,"cloud_cover":100,"moon_phase":0.19,"precip_intensity":3.208,"precip_probability":100,"precip_type":"['rain']","pressure":1011.8,"summary":"Cloudy skies throughout the day with a chance of rain throughout the day.","conditions":"Rain, Overcast","uv_index":null,"visibility":5,"wind_bearing":356.2,"wind_speed":7.6,"id":3},{"observed":"It was spring break 1984 and I was 16 at the time. My dad myself and my brother were on this trip to visit my mother in Florida. When we got about half way through Virginia I was just looking out the window, bored of course,  then bam! Just like that I see this large hairy black creature walking in the woods in between the trees about 20 or 30 yards away from the road I believe. At first I thought I was losing my mind and it didnt make any sense to see something that should not exist. I was blown away.  It just walked along un-disturbed by the moving cars. My younger brother looked and saw the creature moving along as well. When I saw this creature I finally blurted out Bigfoot! My dad had his eyes on the road and thought we were joking or something. I will never forget that day and as far as I am concerned bigfoot is very much a reality. It looked very much like the bigfoot in the Patterson film almost identical I would say. The creature was a classic giant ape that looked heavy. About 8 feet tall and weighing upwards of 500 pounds I suppose. It had a very long stride with arms swaying back and forth and its head a little bit lowered, it really did look very similar to the bigfoot in the 67' Patterson film. The hair was jet black head to toe, I couldnt make out any facial features. I asked my brother about this the other day (he lives in Georgia), he said he saw the same thing but not in the detail I did because we were cruising along at 60mph, but my brother said it was very large, black, stood upright and was moving along.","location_details":"Wythe county Virginia near Wytheville, looking at the map I guess this sighting was in  the Jefferson National Forest area. I remember after crossing over the W. Virginia border about 2 or 3 hours going by before the sighting occured off of I-77. So it would of occured around the border of Virginia and West Virginia.","county":"Wythe County","state":"Virginia","season":"Spring","title":"Report 2285: Boy sees \"Bigfoot\" in the woods while looking out the car window","latitude":37.22647,"longitude":-81.09017,"date":"1984-04-08","number":2285,"classification":"Class A","geohash":"dnw7f8zgyh","temperature_high":59,"temperature_mid":47.8,"temperature_low":37,"dew_point":28.1,"humidity":49.2,"cloud_cover":76.2,"moon_phase":0.25,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1020.9,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":13,"wind_bearing":107.3,"wind_speed":11.5,"id":4},{"observed":"It was the winter of 1996 and we were on our way home from church one Sunday evening. It wasn't dark yet. As we came around a corner we watched what we believe to be a bigfoot cross the road. As it came to a barb wired fence it stepped over it without missing a beat. It was like the fence wasn't even there. The fences in this area range from 3 1/2 feet to 4 foot tall. It was tall, dark in color and walked up right. There have been other sightings because our river bottoms were turned into a major lake project. Years ago I had heard the scream of the bigfoot which is something you don't forget.","location_details":"Hwy 182, Wood County Between Quitman, Texas and Alba, Texas","county":"Wood County","state":"Texas","season":"Winter","title":"Report 2048: Night time road crossing observation","latitude":32.7943,"longitude":-95.5425,"date":"1996-12-22","number":2048,"classification":"Class A","geohash":"9vu49fh0dk","temperature_high":75.3,"temperature_mid":71.4,"temperature_low":68.1,"dew_point":58.6,"humidity":64.7,"cloud_cover":52.9,"moon_phase":0.43,"precip_intensity":null,"precip_probability":0,"precip_type":null,"pressure":null,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":10.5,"wind_bearing":180.4,"wind_speed":20.8,"id":5},{"observed":"My brother and I were out riding our mini bike one afternoon after school approximately 4:00 to 5:00 P.M.. It was the beginning of Spring and we were searching for bait to go fishing.  We parked our bike on the road, which at the time was gravel and traveled very little. We walked down a path that was used by a farmer to get to his pasture were he had cattle grazing. As we walked down the path I felt as though we were being watched. It was an eerie feeling that still haunts me to this day as I recall the incident. Off to my left and approximately 30 to 40 yards away, and 50 or so yards from the main road, was a hairy creature standing in a bent over slump raking it's arms through a patch of May apple. My brother saw it at about the same time. At that moment the two of us ran as fast as we could not looking at each other, but looking at the creature over our shoulders. I was afraid that it would come after us, but it stood in the patch of May apple looking at us as though it didn't know what to make of us. I have told this story many times since that day. Many people laugh in disbelief, but I know what I saw and it could only be one of two things. Either someone dressed in a Bigfoot costume, or it was Bigfoot himself.","location_details":"Sighting occurred in the state of Tennessee, Williamson County, South Lick Creek Road. Nearest Town: Leiper's Fork","county":"Williamson County","state":"Tennessee","season":"Spring","title":null,"latitude":null,"longitude":null,"date":null,"number":6463,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":6},{"observed":"This happened to me when I was 13 in upstate South Carolina.  It was in the fall and it was late afternoon.  We, my family, live in a very secluded part of the Piedmont area.  The area is located in York County SC. Located on the Road that I live is a hollow that branches of into a wooded area.  During the fall, both sides of that hollow bear wild grapes/scuffonons.  My mother, Joyce, had asked me to ride up the road to get my fathers paper.  You see I had forgotten after the school bus dropped me off to pick up the Evening Herald.  Any way I got on my Red Murray Bike and rode up the road.  My plot hound, Butler, plodded along beside of me.  As I biked up the road, the forest is on my left, field on my right, I began to notice a smell berry similar to a yard that has been freshly cut with wild onions growing in it.  My dog noticed it first and began to slow down At was then that I looked into the hollow and saw what has changed my life from that moment on. The creature stood about as tall as a small shed and was very large.  It was covered with a light brown hair that showed up amber like an aurora around its body when the sun hit it.  The face was very much like a Mongoloid man, and the eyes, hard to tell, brown.  It was eating grapes and its teeth were yellowish.  My dog left at this point and went back toward the house.  It looked at me moved in my direction in a curious notion.  I became scared and left towards home.  I did look back to see it lumber over the fence.  It came out of the forest only briefly and went back.  My uncle was the only one who saw it again after that.","location_details":"York South Carolina at Walnut Farm, Piedmont Area.","county":"York County","state":"South Carolina","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":977,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":7},{"observed":"While attending U.R.I in the Fall of 1974,I would stay at my girlfriends mother's house on weekends because I only had a five day mealbook plan. It was Sunday evening about 10:00pm when I decided to head back to school on my ten speed bike. Very dark in the area because it being mostly wooded, country like setting but yet city. I was going down her street and noticed my front center pull brake needed to be adjusted. I stopped under a street light at the end of her street which is an intersection to adjust the brake. Directly in front of me was a small field that sloped down and away from me,pitch black background, tall grass and a few bushes being light by the street light. Typical New England, Oak, Maple and, Pine trees. As I was fixing my brake I began hearing very loud foot steps of a biped, comig from the field on the slope side,more like a crushing thud. I could hear the actual compression being placed, like someone dropping a heavy metal ball/rock on the ground.I looked up to see if I could see anything and just said to myself \"its nothing\", and went back to fixing my brake. I noticed it was getting closer and felt very apprehensive, the sound was coming in my direction. All of sudden this dog starts barking like crazy, I can hear the chain snap as it either tries to attack or getaway from something. I said to myself \"its time to go!\", as I started I turned left to head north, into a few pedals. From out of the darkness steps into the street light this white looking gorilla. The legs present themselves then the body as it comes to rest on its knuckles. Twenty maybe twenty five feet away, directly across the street from me perhads six feet tall maybe 400 pounds or more. Massive arms that went straight down on its knuckles, knees slight bent.The head is higher in the back connected to the neck all-in-one mass. The face dark, deep strong  but primate.The eyes are close together and set deep in the face. The nose and mouth are human like, it's nose is wide, around the mouth black hair that went down on each side.It looks up with its head and chest see me, eyeball to eyeball as I look back trying to see if this thing is real. Humanlike in appearance, the face is not like a primate but has a distinct animal presence (the eye are close together). I was never so scared in my life and knew had I stayed I don't think I would of survived the attack.The way it was positioned gave it an explosive start as it decides to chase me down the street. My heart was pounding out of my chest, my eyes had tears in them and with all my might I pedaled as it ran on two legs, then down on its knuckles then back up again. Perhaps for ten yards, I remember how its long hair on its arms moved with each reach,I thank god I was in first gear. A good five second chase and it was all over.It had stopped in the middle of the street just swaying back and forth, turned and just cleared this rock wall all in one motion from a grass sidewalk. At the top of hill I began riding in circles, I didn't know what to do, I could not comprehend the situation I was in. I knew one thing I was not riding back. I cut through her grandmother's yards and made it back to her house. Not trying to look crazy or anything they ask me what's wrong ? I told them what happened and agreed  that it was best to go back in the morning.","location_details":"Great swamp area, Narragansett Indians","county":"Washington County","state":"Rhode Island","season":"Fall","title":"Report 6496: Bicycling student has night encounter","latitude":41.45,"longitude":-71.5,"date":"1974-09-20","number":6496,"classification":"Class A","geohash":"drm5ucxrc0","temperature_high":78.2,"temperature_mid":70.8,"temperature_low":65.9,"dew_point":65.7,"humidity":85.2,"cloud_cover":96.7,"moon_phase":0.15,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1020.6,"summary":"Cloudy skies throughout the day.","conditions":"Overcast","uv_index":null,"visibility":2.6,"wind_bearing":196.6,"wind_speed":15,"id":8},{"observed":"Hello, My name is Doug and though I am very reluctant to post this story; I am going to do so anyways. The area that this happened  could not be a more unlikely area for a bigfoot occurance then or  especially now with all the development of the farmland in the last 25 years which has been extensive and at a phenominal rate. After reading many (if not every last report on this website) and coming across more that a few that have happened in improbable areas (bigfoot running down neighborhood streets and sightings/ vocalizations near condo areas), I decided there just might be some merit in submitting this for review. A skilled researcher might be able to shed some more light maybe. My friends parents owned a small somewhat defunct farm with (I'm guessing maybe 15-20 acres of land -not the best judge on that) They had 3 horses; 2 mares that were allowed out in the field areas; a stabled stallion, and a pony I believe. The barn was in dis-repair and part of the roof had collapsed years earlier. There was a large pond that was almost completely enclosed with an impenatrable thicket of briars ringing almost the whole cirmcuference of the pond, except for a small area that was kept open for access for the horses to water. Much of the property was overgrown with these same briars that tended to make big circular mounds here and there in the field. The house sat close to the road; the barn to the left and further behind. The extreme left side of their property was bordered by a small stream that edged along a small (100 ft x 30 ft) stand of very dense pine trees. These pines (species unknown) tend to have a very dense understory of almost horizontal dead, dry, branches due to years of growth an minimal sunlight. The lower end of this pine grove had a mowed lawn area (next door neighbors property who were also related to my friend family) You had to access the camping area through the neighbors propery as the overgrowth of briars and other weeds, brambles, trees made it impossible to get there directly for the E------- property. The pond in relation to the campsite was to the left if you were looking back up towards the road; with the stream running between. The dense pine grove then lay between you and the road; unless you skirted around it through the neigbors backyard. This is what happened. No sighting but a vocalization. We had gone down to the campsite had built a fire and been down there for about an hour. During this time we all felt uneasy even though we had been there before many times. This is a long time ago but to the best of my memory we had been joking; probably made something to eat over the fire but something felt really wrong this time. \"Wrong\" is the best word I can use to describe. I remember I felt like I couldn't just sit down by the fire and stay with the conversation though. From back in the pine grove was the occasional, deliberate braking of branches that were just a little too large (to the sophisticated human ear) and just had the sound of being \"up off the ground some ways\" This would start and stop. We would listen and comment on it. First we thought maybe the mares had gotten back into the woods, unusual but this later was confirmed not to be so because we found out the next day that they were stabled for the night. We then thought it might be some older boys who were trying to scare us into running. It would be quiet for awhile then there would be a sense of movement closer to where we were and then receeding. We shined a flashlight and ventured back alittle ways but saw or smelled nothing. The sounds began again this time definately agitated, insistent with a very permiable feeling. We started to get un-nerved  moved out into the neighbors backyard. The sound grew louder, with traceable movement and then this ear splitting scream cut right out into the night. One loud shriek louder than anything should have to be. It just cut right to the core of your soul. Like so many reports I've read on this website, it's virtually impossible to do it justice with a human description precisly because it sounded so inhuman. We just ran like hell back to the house, left everything behind. No sense of being followed at all. No visual sighting (I almost wish). No bad smells or odors. In terms of other reports this pales, I know. But this is what happened and I never forgot it. We knew what Sasquatch were at the time, but no one ever heard of sightings east of the Mississippi to the best of my memory then. We kind of joked that maybe that's what our unseen friend was. Years later when I read and saw the reports from the southern part of York County (report on file with your website.) did I ever give any serious thought.","location_details":"I would rather not have exact location (listing the nearest road) to repect the privacy of the family that still owns the property. I have long since had a falling out with my friend at the time and don't feel he or they would like being approache about this. I like my own privacy respected; so I must accord others the same. The general area at that time was more open farmland with some large housing developements (in which I lived) within a mile. There were a good deal of homes scattered here and there and others in smaller developments. A very large animal like a Sasquatch could conceivably navigate (migrate) through an area like this at night using farmland as cover; but absolutely not stay very long in an area like that even then without revealing it's presense. I can give you more specific details on topography. Farmland opens up eventually much more to the north with a State Park (Gifford Pinchot) at the north end of the county. Southern end of York county where the  sightings occurred is a more likely area given in terms of what I've read of similar topography of other sighting then. Also much more rural and forested in the early \"70's.","county":"York County","state":"Pennsylvania","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":8000,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":9},{"observed":"It was May 1984. Two friends and I were up in the hills nw of Yamhill, OR, late in the evening, around 10:30 pm. We heard the scream, a VERY low, very long howl. Not a coyote, bear or cougar. Have heard all of them before. This was nothing like anything I have ever heard. I still remember thinking to myself \"How in the hell can something make such a low howl.\" It scared us at first, but is sounded like it was far away, like maybe a mile or so. We were drinking a little beer, so after awhile we relaxed and forgot about it. It must have been about a half hour later when we heard it again. I swear that it had to be within 30 yards of us. Same loud, low howl, but MUCH closer. And it sounded pissed. I could feel the sound vibrations bouncing off the back of my neck. The hair stood up on the back of all of our necks. All of us turned white as hell, and our jaws dropped past our knees. The howl seemed to say \"GET OUT!\" Which is EXACTLY what we did. I just looked at the two other guys and said \"lets get the @#$ outta here \". We did not see anything, but felt the presence. I grew up within 10 miles of that spot. I had never heard that sound before, or since, EXCEPT on a television show that had a report of a bigfoot sighting. A guy in Idaho caught one on video (at least it looked like one), but when I saw the video, I heard that scream again. The guy taking the video threw the camera in the ditch, and hid. It was the SAME scream. ONLY other time that I have EVER heard it. It was EXACTLY the same scream. I saw this video on a news show, something like \"Real TV\" while in Fairfax, VA, in 1992 or 1993. I do not know EXACTLY what it is that we heard, but I know what I think it was. Bigfoot. That is my story, and I have two wittnesses to back me up.","location_details":"Logging roads north west of Yamhill, OR, about 15 miles.","county":"Yamhill County","state":"Oregon","season":"Spring","title":null,"latitude":null,"longitude":null,"date":null,"number":703,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":10}]","status":200,"url":"http://localhost:3000/api/posts?page=0"},"revalidate":31536000,"tags":[]}