{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:59:12 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"In 1979 I was upstate hiking in the adirondacks upstate New York.I got ahead of the group and off the main trail watching beavers working.As I walked back to the main trail I flushed something out of thick brush. It ran diagonally towards me on the main trail.I could hear a loud thump-thump of feet pounding the main trail and it was wailing like a womans scream or something similar.It ran partially into view and was about four and a half feet tall with dark brown fur with lighter tips and was moving fast upright.I assumed it was a bear cub and got away from the area.I am not from bear country and only found out years later it is unlikely a cub would run upright for the 150 or so feet I witnessed.I probably wouldn't have given it more thought but the sounds I heard are a minature version of some vocalizations on these bigfoot sights.There were some other strange things on this trip and years later a friend I work with told me a similar story that happened around the same year and less than 30 miles away.","location_details":"Don't know but could find out.","county":"Hamilton County","state":"New York","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":6695,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":161},{"observed":"I grew up camping in the Central portion of the Adirondack Mountains.  Indian/Lewey Lake area to be exact.  With that said I have been going there for 25+ years and am very familiar with all of the sights and sounds.  My incident happened a few years ago in the spring of 1999.  I was camping the last weekend of May with one of my dogs on the south side of Lewey lake.  I think there were maybe a total of 5 camps being used.  One of the nights around 10pm I heard a loud and very unfamiliar cry/scream come from the north side of the lake.  I sat there in silence with my dog, almost in shock because I had never heard anything like this before.  It went on with a series of screams for about 10 seconds.  It was not a bear, not a moose, etc.  It made me a bit uneasy as I could not place the sound.  It was not from any campers either as there were only a handful and were all on the same side of the lake as myself.  I just went to this website today and listened to some of the sound clips available of 'BigFoot'.  The sound I heard almost exactly matches these clips.","location_details":null,"county":"Hamilton County","state":"New York","season":"Spring","title":"Report 7872: Camper hears strange screams at Indian Lake","latitude":43.61833,"longitude":-74.75611,"date":"1999-05-28","number":7872,"classification":"Class B","geohash":"drfb4ukr0q","temperature_high":60.9,"temperature_mid":53.7,"temperature_low":46.5,"dew_point":45.6,"humidity":76.2,"cloud_cover":95,"moon_phase":0.45,"precip_intensity":null,"precip_probability":0,"precip_type":null,"pressure":1015.1,"summary":"Cloudy skies throughout the day.","conditions":"Overcast","uv_index":null,"visibility":29.8,"wind_bearing":255.4,"wind_speed":5.8,"id":162},{"observed":"This occurred while I was just standing enjoying the view of the woods not far from my house,  I had my dog with me and I was not actually in the woods myself but across the creek from the woods.  Whatever it was, was just a sighting.  Nothing was found, nothing was heard. I saw a bipedal creature from the waist down.  The rest of it was hidden by leaves on trees.  The legs that I saw were quite stocky and were not bent in any way,  The hair was quite long, I would say maybe 4 or 5 inches long.  The color was a golden reddish brown. As I watched,  whatever this was appeared to know that I had seen it because it turned slowly and took a few steps and disappeared in the underbrush. I had been standing there with a grip on my shepherds collar (thank goodness) but the dog never noticed anything.  The creature made no noise and was perhaps 100 feet from me across a 4 foot deep creek bed (almost dry). After this I did not go on this section of the property for about 6  years  I have never told anyone about this,  I have never seen anything since this one sighting and I will probably never know what it was.  I don't think it was a bear standing on two legs  because the legs appeared to be too long and too straight up and down..","location_details":"just north of Glen Aubrey","county":"Broome County","state":"New York","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":1406,"classification":"Class A","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":163},{"observed":"My friend and I finished preparing for a big outdoors event and we were sitting outside his home.  It was around 11 p.m and his wife and dog had gone inside for the evening.  Across the road from his house there is a large swamp that goes up to a small mountain.  Our talk was cut short by an odd scream about 75 yards into the swamp on the right at ground level.  I asked my friend, an avid hunter, what animal screams like that?  He didn't know but we talked that maybe it could be an owl or a fisher.  A few minutes later, in the woods on our side of the road, a large animal broke a lot of dead branches all at once.  It wasn't running but seemed to have just turned around in one location.  A minute or two later three owls hooted between themselves at treetop level in the woods behind his house.  The owls seemed to have been about 50 feet apart.  We commented about this sudden weird activity when something came from the woods and landed in his yard behind us.  We were still facing the road and didn't see the object but I assume it was something around the size of a baseball.  He doesn't have a manicured lawn and it would be impossible to know exactly what it was.  I've thought about this incident for a couple of months and could write off the first three occurrences that evening but the object landing in the yard made this event too much to ignore.  My friend was as puzzled as I am.  He lives where people are few and far between.","location_details":"(Specific directions omitted)","county":"Hamilton County","state":"New York","season":"Fall","title":"Report 28570: Possible nighttime encounter outside a home north of Northville","latitude":43.30679,"longitude":-74.15429,"date":"2010-09-24","number":28570,"classification":"Class B","geohash":"dreq2ef2rf","temperature_high":84.6,"temperature_mid":70.5,"temperature_low":56.6,"dew_point":62.1,"humidity":76.3,"cloud_cover":44.5,"moon_phase":0.54,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1013.7,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":9.5,"wind_bearing":186.5,"wind_speed":13.7,"id":164},{"observed":"I was driving home through the mountains, from a concert last night, on Route 8 in Hamilton County, NY and at 12:37 a.m. I hit a \"creature\" that was carrying a deer, with my car. My car is damaged from the hood to the rear by this creature and I know it is at the least injured and its DNA may be on my car. The speed limit was 55 and I was not able to stop in time. When I saw the creature, who was carrying a deer, about to step into the roadway I hit the brakes but was only able to slow down minimally before impact. I did not really believe in Bigfoot before last night and I am still shaken up and have not been able to share this story with anyone. I wanted to stop and see if the creature was okay, but I was scared out of my wits to stop and get out of the car. The creature was huge, at least 7.5 feet tall. I've seen drawings and such of Bigfoot, and this creature looked similar, but had white around his hairline, and his fur was dark brown, almost black. I'm shaking writing this and I am in such disbelief that this happened to me. I can't even report the accident to the police, and I don't know what I will tell my insurance company. My car is totaled, the creature crushed my windshield wipers together, broke many pieces of the passenger side and left smears of dirt and blood all over the rear window.","location_details":"On Route 8 just outside of Wells, NY near the Sacandaga river. There was a tree knocked down close to it, and a yellow road sign shortly after.","county":"Hamilton County","state":"New York","season":"Summer","title":"Report 45831: Bigfoot running with a deer in its arms is struck by a car late at night north of Wells","latitude":43.46181,"longitude":-74.23166,"date":"2014-07-11","number":45831,"classification":"Class A","geohash":"drepnzfpku","temperature_high":78.4,"temperature_mid":67.1,"temperature_low":53.2,"dew_point":54.5,"humidity":67.4,"cloud_cover":6.7,"moon_phase":0.47,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1022.8,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":"10.0","visibility":9.6,"wind_bearing":42.4,"wind_speed":8.1,"id":165},{"observed":"well here is my sighting. on june 20th 2004, [near] rochester [and] greece, me and 2 friends where out on a bike ride like we do three times a week. we start at 104 and fetzner rd in rochester new york and travel down the bike trail too the [parkway] and iland cottage rd. we always stop at the pond and [our] bike rides are well into the night around 12 - 1 am. we hang out for a while then head back home. what would make it a 15 - 20 mile bike ride. while standing talking we all noticed something standing behind tree. it was about 7 - 8 feet tall tan in color or gray fur. it stood out in the black background. one of my friends start[ed] heading towards it and so did the other and then me with my headlight. when the first friend moved the thing started off too the woods on 2 feet. my one friend said he seen it turn around and look at him. i just seen it go into woods. when we got too the woods which woul be heading west next too parkway, one went in a little. me and other stayed on edge. we stood still and heard alot branches and then silence. don’t know if it was related too [our] sighting but seemd like the only sorce at the time because [of] what was seen. it was pretty chilling and strange. felt very weird like it wasn’t happening.","location_details":"location ny interstate 390 north too the ny state pkwy going west at or over iland cottage rd there is a little pond in the middle of entrance and exit from 390 to pkwy and iland cottage rd is on the norteast side","county":"Monroe County","state":"New York","season":"Summer","title":"Report 8905: Three men have a late night encounter with a bi-pedal figure","latitude":43.2696,"longitude":-77.664,"date":"2005-07-27","number":8905,"classification":"Class B","geohash":"dr8y0syz9w","temperature_high":71.7,"temperature_mid":66.7,"temperature_low":60,"dew_point":65.2,"humidity":95.2,"cloud_cover":90.8,"moon_phase":0.75,"precip_intensity":0.834,"precip_probability":100,"precip_type":"['rain']","pressure":1010.6,"summary":"Cloudy skies throughout the day with a chance of rain throughout the day.","conditions":"Rain, Overcast","uv_index":null,"visibility":7.7,"wind_bearing":322.4,"wind_speed":14.8,"id":166},{"observed":"on july 15 at about 10  pm we were sitting on the porch enjoying the quiet night. It was VERY quiet. usually we can hear coyotes or owls..this night nothing.  we saw what we thought was a person jogging up the road but realized it had to be at least 7-8 feet tall and was taking huge strides. it was covered with long reddish to blonde  hair and had long arms that swung as it walked.  it looked in neither direction, just straight ahead. it was out of site in about 7-10 seconds and the footfalls could be heard slightly .","location_details":"[Witness requested that directions not be posted. She mentioned that there are many hunters in the area.]","county":"Chenango County","state":"New York","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":4683,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":167},{"observed":"This incident occurred in late February of 1989 at approx. 10pm. The conditions that night were very clear and cold, with a fairly decent amount of moonlight. As I recall there was about 4 inches of old snow on the ground, and as it was very cold that evening the snow was ice incrusted, and made a good deal of noise when stepped on. I was jogging on a trail that is approx. one quarter of a mile long. The trail itself was fairly clear (about two feet wide) and ran across the base of one of the hills that surrounds the Chemung Valley. The surronding area was heavily forested with a mix of trees common to upstate New York. The incident itself occured when I was about half way through the trail. At that point the canopy of trees was very thick, and as I was running I heard the distinct sounds of footsteps about twenty or so feet into the tree line off to my right. Being slightly startled, I picked up my pace a bit, but at that point believed that it was a deer in the woods (the trail itself is a common deer path). Although startled I figured I had spooked a deer, and expected to hear the deer recede into the woods in the opposite direction. Instead, I heard the footsteps move parallel to the direction in which I was running. This immediately sent a streak of fear through me as I have lived in upstate NY all of my life, and knew very well that a deer would bolt in the opposite direction if startled. I ran faster, and as I did so the foot steps in the woods quickened. Thinking that I may be hearing nothing then the echo of my own footfalls I stopped dead in my tracks to test my theroy. When I did so the steps continued for another two or three seconds, stopping slightly ahead of me and to my right. I stayed where I was for another ten seconds or so trying discern what the sound might mean, and while I waited there I could clearly hear what sounded like slight side to side movement off in the woods, as if someone was steping from one foot to another as if anxious. I attempted to see into the tree line, but could not see that far into the woods clearly. After about ten seconds or so I began to jog again, and tried to convince myself I was just hearing things and was spooking myself. When I had gone about five feet the foot steps began again. It was very clear to me that the sounds were coming from a bi-ped, as the footfalls sounded like that of a person vs a deer or dog. What spooked me was that for every two to three steps I was taking, the individual (for lack of a better term) in the woods was taking one. I am six feet four inches tall, and at the time was taking the longest strides I could. the thought that kept racing through my mind at the time was that it was either someone having fun with me (this thought was dispelled by the appearent giant strides I heard) or that I was alone in the woods with a psychopath with very long legs (not a joke). The most disettling element at the time was the fact that I am over six feet tall, and at the time weighed in exess of 250lbs (mostly muscle), so I figured that who ever it was was not intimidated by my physical presence. I made record speed through the trail, and exited onto a service road next to the local golf course. At this point I ran another ten feet or so into a clearing at the edge of the trail and stopped to look back into the woods. I conntinued to hear the footfalls until they stopped at the edge of the tree line. At that point I was standing under a fluorecent light, and as such lost any night vision I had acquired. Consequently, I could not identify any shape or form in the woods. I did clearly hear what sounded to be heavy breathing, and a light, throaty rumble. My initial thought was that it sounded like someone with a respitory condition sitting in the tree line. I then heard a tree branch snap, and at this point I turn and ran at break neck speed across the gold course, looking back over my shoulder every ten feet or so (at one point I tripped, and remember thinking that tripping like that only occurred in the movies. A few mintues later I exited the golf course onto one of the mail streets in the town of Elmira, and have not used that trail at night ever since. At the time of the incident I did feel extremly scared, but in retrospect I feel like there was no real threat in the incident. Whoever or whatever was in the woods that night could have clearly done me harm if they so wished, but the entire time whatever it was stayed twenty or so feet off to my right. I have not given this incident a great deal of thought since the occurence until I was reviewing this sight and noted a sighting of a big foot in a area not to distant from my experience. I asked a friend of mine who lives in the area of the documented sighting what he knew of big foot, and he indicated that for years people have stated they have seen big foot in the woods on Conneticu Hill (about fifteen miles from where I was). I do not know if this was a big foot, but something was in the woods with me that night, and fromthe sounds of it made, it was to large to be a person, and was definitely bi-pedal.","location_details":"The trail I was jogging on was at the base of one of the hills that surrounds the Chemung valley. The trail itself was approx. one quarter of a mile long, fairly clear (about two feet wide), and surronded by woods on both sides. The trail itself (as well as the hill) is located in the outskirts of the city proper (actually the Town of Elmira vs. City of Elmira). As it was very cold that evening, the snow was ice crusted and it was very easy to discern footsteps in the woods. There are a number of trails that diverge from this one that lead up and over the hill (the hill is probalbly 150-200 feet tall, with a gentle slope).","county":"Chemung County","state":"New York","season":"Winter","title":null,"latitude":null,"longitude":null,"date":null,"number":145,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":168},{"observed":"I live in the Western part of New York State.  My story concerns a hunting camp I belong to that is approximately 65 miles Southwest of Buffalo, New York and approximately 20 miles Northeast of Erie, Pennsylvania.  The area is considered rural with second growth forests.  My story concerns four separate incidents over a twenty-five year span.  Taken separately you can probably explain them away.  But, taken collectively leads me to believe that there may be more to it. Back in 1975 (year is approximate) my uncle, cousin, and I where at the hunting camp.  I do not recall the exact time of year but it was either late summer or early fall.  Late one evening perhaps 10:00 or 11:00 pm we heard a very strange, powerful call.  My uncle, who was a excellent outdoorsman, could not identify the call.  To me it sounded like a cross between a bird of some sort and a bobcat.  As we listened, the animal was moving through the backwoods.  After awhile my uncle decided that he wanted to locate the animal making it. The area in question is sandwiched between a large swamp (that is very, very difficult to walk through) and a 50 acre lake.  This area becomes increasing narrower and animal would most likely pass through a narrow tract of land, approximately 200 yards wide, before crossing a road.  So he, my cousin, and I headed out in to the night.  My uncle took us to a field that sits next to the narrow track.  Here we waited.  The animal was getting closer.  When it was maybe 100 yards away it stopped calling.  We could not see it, nor do I believe it could see us.  We waited for sometime but it never called again and did not cross the road.  I almost forgot about this incident until very recently. Fast forward to approximately 1993.  My uncle while out hunting in the same area as mentioned above claims he had seen a Bigfoot.  As he relayed the story I could tell he was visibly agitated and quite forceful in his conviction in what he had seen.  Now, I must tell you a couple of things about my uncle.  First of all he died in 1997, so unfortunately, I cannot question him further.  But, he was a excellent outdoorsman.  He had hunted small and big game all along the eastern part of North America.  When he has younger he would go to Ontario, every spring and fall, near James Bay to hunt bear and moose.  I would say he was very familiar with bear and their habits.  So, I am sure it was not a bear he had seen.  But, he also liked to drink whiskey and beer.  So when he told us he had seen a Bigfoot, I am sure all of us (including me) thought he must have been hallucinating.  However, as I think back about my uncle, even when he was quite drunk, I had never know him to makeup stories.  He certainly liked to retell his stories over and over again.  But, they were always factual and did not varied in detail. In the fall of 1999 my brother-in-law told me, while cutting firewood in the same area, he had seen something very large.  He did not get a good look at it because it frighten him so much he hopped on his four-wheeler at left the area immediately.  At the time, my brother-in-law did not know of the my uncle's Bigfoot story.  So, I was quite intrigued.  I asked him questions as to size and color.  But, he could only say that it was very large and black in color.  I did not follow up to investigate the area because sometime had past since the incident and he had gone back into the same area without seeing anything unusual. Two months ago, while reading a media story that \"Bigfoot is Dead\", I came across the Bigfoot Field Researchers Organization Website (www.bfro.org).  On the website are recordings of supposed sasquatch vocalizations.  As I played one of the recordings I almost fell out of my chair!  It was the same vocalization I had heard approximately twenty-five years ago.   The sight and sounds of that night so long ago came back to me in a flash.  It was this last incident that captured my interest and convinced me to purchase your book and to study this subject further. I must admit though that I do have some issues with the possibility of a sasquatch living in the area.  1) there has never been to my knowledge any other sightings in the area.  However, according to the BFRO there have been an number of incidents south of area in Pennsylvania and one incident in the next county to the east.  2) the area in question, although rural, seems a bit too populated for one or more animals to avoid detection.  Even when an occasional bear wanders through it always seems to get spotted from time to time.  3) I too have hunted and hiked over the same area many times in the past thirty years and have never seen anything to suggest a large creature is living in the area.  4) the area supports a large deer population, but, I have never come across a deer kill in the manner described on this web site.  To be fair, although I raise these issues, I also have never actively looked for signs of Sasquatch. Paul J. Mateja","location_details":null,"county":"Chautauqua County","state":"New York","season":"Fall","title":null,"latitude":null,"longitude":null,"date":null,"number":6384,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":169},{"observed":"First let me state I am a college educated person with two degrees.  One in psychology and one in fine art.  Like many persons who have had this type of unexplained experience, it has made a mark on my psyche that has been permanently etched despite the ridicule poured on me (by persons who in fact were not there). Scientifically one may NOT deny or affirm the existence of a thing about which we have little information.  For instance, in the 1600's if one were to speak of electricity and television they would be deemed mad and a witch.  Now you read this by just such means as were previously thought non-sense.  We know it is fact now.  Some day, I believe, this rare ape will present us with irrefutable evidence of it's existence like being a little too slow in front of a mack truck or something.  Enough of that. Here's why you're reading this... In the winter of 2001 while surfing the net for images of \"western art paintings\" the BFRO web site popped up with Western New York Bigfoot Sightings.  I had to laugh.  You gotta be kidding me.  Then to make it even better there are these \"listen to the bigfoot\" wave/sound files to download.  So curiousity made me do it.  I'm laughing my butt off here.  So I hit play. Suddenly I shut up  -   I am in SHOCK.  My hands began to shake and the adrenaline glands almost blew my head off.  The sound of the \"howl\" is exactly what I encountered one evening the previous September of 2000.  So now I play the other \"scream\" file.  Alright, now I'm disturbed.  That too I heard within 100 yards of my home that same summer, about 5-6 times on different occasions. I never had any thoughts about sasquatch before.  This gave me pause.  It suddenly gave me a flashback of living near the Tonawanda creek in upstate New York and seeing a large (12-15\") barefoot footprint in the snow along the creek/riverbank just upstream of the north pembroke hotel(magadore hilton,ha).  Barefoot in the snow ? What kind of a jerk does that ?  There were, I believe, four of us kids there.  I was about 11 or 12 at the time.  We often played in those woods however that day we had an uneasy feeling and cut our trip very short and went immediately home.  I thought maybe it was a bear track like a hind foot although I knew it was too human.  No one even mentioned Bigfoot, it was not something we ever talked about.  Now that memory is freaky. And there's more.. I now live in the woods and am very comfortable here near Allegeny State Park.  There are literally thousands of acres of forrest surrounding my home.  I am comfortable chasing 350 pound black bears out of my yard, sitting in the woods and having coyotes walk by, hearing screach owls etc.  THIS sound was unlike anything I had ever heard.  Sometimes at the approach of archery season I need to convince disrespectful persons that no tresspassing actually means them.  This night I thought to encounter a coon hunter whose howling dog was moving towards my position down through the valley.  The sound wasn't just right for a baying dog but what else could it be ???  Now at the time this howling started it was probably a mile off (more later) and at dusk/dark. I have the pleasure of having a wolf-dog that is not too much pooch you might say.  Great animal, very mellow even when on walks at night and the coyotes start up yapping less that 100yrs away.  He just looks and say's \"punks\" and moves on - nothing phases him.  This night he was like stone focused on the direction of the loooooong howl.( I get the creeps remembering it).  Never before or since have I seen him in that state even in the presence of black bears.  His ears were fixed and I had to drag him under protest back into my cabin.  I was afraid that he might attack an expensive coon dog when I confronted the 'hunter'.  So now the wolf is in the house and I leash up my german sheperd, grab a spot light and a very serious russian weapon.  I take off in the direction of this howl which I can tell is coming toward me and know there is a field which leads up into the woods near where we should meet.  I get about 80 yrds in that direction and notice that the howling is now going to pass above me in the woods so I redirect my course for a more appropriate intersection point.  Normally my sheperd is pretty bloodthirsty which I do not encourage, just her nature.  Tonight she is cowering between my legs trying to pull me back home to safety.  I'm thinkin' \"wimp dog !!!\" and she's really making me angry.  I am looking for the coon hunter's tell tale spot light in the tree tops or through the woods -nothing.  Meanwhile I have entered into the thick of the woods cresting an embankment of about 35 feet above the road.  Oh Boy !  That aint no dog.  What the ----- weapon's up laser sight on - this is bad.  When you have an attack dog, a nasty weapon with o so many bullets and a spot light (which started to go out, thankyou very much) and you're still scared.  You just make sure the safety is off and focus on that little red dot. The thing was traveling at such a speed through the woods it didn't seem real.  I thought the dog had to be running but when I heard it from around 120 yards away on the same level, NOBODY could convince you it was a dog, wolf, coyote etc. I don't scare easy, that was terror. Still I never thought \"bigfoot\".  In fact I researched all the wolf sounds I could find and none of them matched what I heard the night before.  I thought that is why my critter was so interested. I just chalked it up to a \"maybe wolf\".  A neighbor who is about 85% deaf and a true hermit woodsman (83 years old) asked ME if I heard \"that howling the other night\".  This guy could almost sleep through an atomic bomb. Another fellow who is a Korean war vet who saw too much action also told me about this strange howling he heard two seperate nights.  He stated that he intentionally stayed up one night to see if he could figure out what it was.  He said that he could never figure out the noise or creature that made it.  Understand that this guy has camped out in a tent or camper in these woods for over 15 years.  Frankly he's seen or heard almost everything around here.  Yet another neighbor ask me about the noise.  Her first comment was,\"It seemed a lot louder than it should have.\"  Now know that she owns a kennel and is an accomplished singer musician.  Let's just say she understands acoustics.  Incidentally there is a great deer trail just about where I believe this noisy beast to have traversed the valley.","location_details":"do not post. near my home","county":"Cattaraugus County","state":"New York","season":"Summer","title":null,"latitude":null,"longitude":null,"date":null,"number":4589,"classification":"Class B","geohash":null,"temperature_high":null,"temperature_mid":null,"temperature_low":null,"dew_point":null,"humidity":null,"cloud_cover":null,"moon_phase":null,"precip_intensity":null,"precip_probability":null,"precip_type":null,"pressure":null,"summary":null,"conditions":null,"uv_index":null,"visibility":null,"wind_bearing":null,"wind_speed":null,"id":170}]","status":200,"url":"http://localhost:3000/api/posts?page=16"},"revalidate":31536000,"tags":[]}