{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:14:00 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"W3sib2JzZXJ2ZWQiOiJJIHdhcyByaWRpbmcgaW4gbXkgbW9tJ3MgdmFuLCBhdCA3OjEzIHBtLCBhcyBzaGUgZHJvdmUgcGFzdCB0aGUgcmVjZW50bHkgYnVpbHQgc3RvcmFnZSBmYWNpbGl0eSBvbiBFYWdsZSBSb2FkLCBJIGxvb2tlZCBvdXQgdGhlIHJpZ2h0IHdpbmRvdyBhbmQgc2F3IGEgYmxhY2sgb3IgYnJvd24gKGl0IHdhcyByZWFsbHkgZGFyayBvdXRzaWRlIGFuZCBJIGNvdWxkIHNlZSBpdCBjbGVhcmx5IHNvIGl0IGhhZCB0byBiZSBicm93bikgaHVtYW4tbGlrZSBzaGFwZSBtb3ZlIGFyb3VuZCB0aGUgZmFyIGNvcm5lciBvZiB0aGUgZmFjaWxpdHksIGFuZCBJIGRpZG4ndCBzZWUgaXQgY29tZSBhcm91bmQgdGhlIG90aGVyIGVuZC4gSXQgd2FzbnQgYSBwZXJzb24gYmVjYXVzZSBvZiBpdHMgaGVpZ2h0LiBJIGRvbnQga25vdyB3aGF0IEkgc2F3LCBidXQgSSdtIGNlcnRhaW4gaXQgd2FzIG5vdCBhIHBlcnNvbiBvciBhIGJlYXIuIiwibG9jYXRpb25fZGV0YWlscyI6IlRoZSBzdG9yYWdlIGJ1aWxkaW5nIHdhcyBvbiBFYWdsZSBSb2FkIG5lYXIgdGhlIE5ld3BhZ2UgTWlsbCBpbiB0aGUgVmlsbGFnZSBvZiBCaXJvbiIsImNvdW50eSI6Ildvb2QgQ291bnR5Iiwic3RhdGUiOiJXaXNjb25zaW4iLCJzZWFzb24iOiJXaW50ZXIiLCJ0aXRsZSI6IlJlcG9ydCAzNDI0MDogUGFzc2VuZ2VyIHNlZXMgYSBsYXJnZSBmaWd1cmUgbW92aW5nIGJldHdlZW4gYnVpbGRpbmdzIGluIEJpcm9uIiwibGF0aXR1ZGUiOjQ0LjQyMzE1LCJsb25naXR1ZGUiOi04OS43NzkzLCJkYXRlIjoiMjAxMi0wMi0xOCIsIm51bWJlciI6MzQyNDAsImNsYXNzaWZpY2F0aW9uIjoiQ2xhc3MgQiIsImdlb2hhc2giOiJkcGJodG5ieHdlIiwidGVtcGVyYXR1cmVfaGlnaCI6MzMuMiwidGVtcGVyYXR1cmVfbWlkIjoyNi40LCJ0ZW1wZXJhdHVyZV9sb3ciOjE3LjYsImRld19wb2ludCI6MTQuOCwiaHVtaWRpdHkiOjYyLjksImNsb3VkX2NvdmVyIjoyNS4yLCJtb29uX3BoYXNlIjowLjg5LCJwcmVjaXBfaW50ZW5zaXR5IjowLjAxNywicHJlY2lwX3Byb2JhYmlsaXR5IjoxMDAsInByZWNpcF90eXBlIjoiWydyYWluJywgJ3Nub3cnXSIsInByZXNzdXJlIjoxMDIyLjksInN1bW1hcnkiOiJQYXJ0bHkgY2xvdWR5IHRocm91Z2hvdXQgdGhlIGRheSB3aXRoIGVhcmx5IG1vcm5pbmcgc25vdyBvciByYWluLiIsImNvbmRpdGlvbnMiOiJTbm93LCBSYWluLCBQYXJ0aWFsbHkgY2xvdWR5IiwidXZfaW5kZXgiOm51bGwsInZpc2liaWxpdHkiOjkuNywid2luZF9iZWFyaW5nIjozMzAuOSwid2luZF9zcGVlZCI6MTIuMiwiaWQiOjYxfSx7Im9ic2VydmVkIjoiSSBsaXZlIGluIEJpcm9uLCBXaXNjb25zaW4uICBJdCB3YXMgYXJvdW5kIDYtNyBwLm0uIGFuZCBteSBmcmllbmRzIGFuZCBJIHdlbnQgb3V0IHRvIHRoZSBmb3Jlc3QgY2xvc2UgdG8gbXkgaG91c2UgYW5kIEkgZGlkIGEgY291cGxlIFwid2hvb3BcIiBjYWxscy4gQWJvdXQgMTAgc2Vjb25kcyBhZnRlciBJIGRpZCB0aGVzZSBjYWxscywgd2UgaGVhcmQgYSBsb25nIGhvd2wgdGhhdCBsYXN0ZWQgYWJvdXQgNSBzZWNvbmRzIGluIGxlbmd0aC4gV2UgYXJlIGNvbnZpbmNlZCB0aGF0IHRoaXMgY291bGQgcG9zc2libHkgYmUgYSBCaWdmb290IGhvd2wuIEFzIHdlIHdlcmUgbGVhdmluZywgd2UgaGVhcmQgdGhyZWUgXCJ3aG9vcHNcIiBpbiB0aGUgc2FtZSBkaXJlY3Rpb24gYXMgd2UgaGVhcmQgdGhlIGhvd2wuIEFmdGVyIHdlIGhlYXJkIHRoYXQsIHdlIGFsbCByYW4gYmFjayB0byB0aGUgaG91c2UiLCJsb2NhdGlvbl9kZXRhaWxzIjpudWxsLCJjb3VudHkiOiJXb29kIENvdW50eSIsInN0YXRlIjoiV2lzY29uc2luIiwic2Vhc29uIjoiV2ludGVyIiwidGl0bGUiOiJSZXBvcnQgMzg2NjI6IEhpa2VycyBtYWtlIGEgdm9jYWxpemF0aW9uIGFuZCBoZWFyIHBvc3NpYmxlIHJldHVybiB2b2NhbGl6YXRpb25zIG91dHNpZGUgQmlyb24iLCJsYXRpdHVkZSI6NDQuNDMwOCwibG9uZ2l0dWRlIjotODkuNzcxNSwiZGF0ZSI6IjIwMTItMTItMTkiLCJudW1iZXIiOjM4NjYyLCJjbGFzc2lmaWNhdGlvbiI6IkNsYXNzIEIiLCJnZW9oYXNoIjoiZHBiaHYwcWtobSIsInRlbXBlcmF0dXJlX2hpZ2giOjMyLjksInRlbXBlcmF0dXJlX21pZCI6MjguOCwidGVtcGVyYXR1cmVfbG93IjoyMC43LCJkZXdfcG9pbnQiOjI0LjIsImh1bWlkaXR5Ijo4MywiY2xvdWRfY292ZXIiOjk5LjgsIm1vb25fcGhhc2UiOjAuMjUsInByZWNpcF9pbnRlbnNpdHkiOjAsInByZWNpcF9wcm9iYWJpbGl0eSI6MCwicHJlY2lwX3R5cGUiOm51bGwsInByZXNzdXJlIjoxMDE2LjIsInN1bW1hcnkiOiJDbG91ZHkgc2tpZXMgdGhyb3VnaG91dCB0aGUgZGF5LiIsImNvbmRpdGlvbnMiOiJPdmVyY2FzdCIsInV2X2luZGV4IjpudWxsLCJ2aXNpYmlsaXR5Ijo3LjksIndpbmRfYmVhcmluZyI6MjAzLjgsIndpbmRfc3BlZWQiOjUuOCwiaWQiOjYyfSx7Im9ic2VydmVkIjoiSSBoYXZlIHNwZW50IG15IHdob2xlIGxpZmUgaW4gdGhlIHdvb2RzIGluIHRoaXMgYXJlYS4gTWUgYW5kIG15IHN0ZXBzb24gd2VyZSBnaW5zZW5nIGh1bnRpbmcgaW4gYW4gYXJlYSB0aGF0IEkgaGFkIGJlZW4gdGhyb3VnaCBtdWx0aXBsZSB0aW1lcy4gV2UgZGVjaWRlZCB0byB0cnkgdGhlIG9wcG9zaXRlIHNpZGUgb2YgdGhlIHJpZGdlIHRoYXQgd2UgaGFkIHdlbnQgdG8gdGhlIHdlZWtlbmQgYmVmb3JlIGFuZCBoYXJ2ZXN0ZWQgYSBwcmV0dHkgc2l6YWJsZSBhbW91bnQgb2YgZ2luc2VuZy4gQXMgd2UgZHJvcCBkb3duIGZyb20gdGhlIHJpZGdlIGFuZCBiZWdhbiBnb2luZyBhcm91bmQgdGhlIGhpbGwgd2Ugbm90aWNlZCB0aGF0IHRoZSBhcmVhIHdlIHdlcmUgaW4gd2FzIGEgbGl0dGxlIGRhcmtlciwgZHVlIHRvIGV4Y2VsbGVudCBzaGFkZSBjb3ZlciBmcm9tIHRoZSBsYXJnZSB0aW1iZXIgaW4gdGhhdCBhcmVhLiBBcyBhIHJlc3VsdCB0aGVyZSB3YXMgYSBsb3Qgb2YgbW9zcywgY2hpY2tlbiBvZiB0aGUgd29vZHMsIGFuZCBvdGhlciBtdXNocm9vbXMuIEFzIHdlIHN0YXJ0ZWQgdG8gZ28gdGhyb3VnaCB0aGUgc3dhZywgb2ZmIG9mIHRoZSBzbWFsbCBwb2ludCB3ZSB3ZXJlIG9uLCB3ZSBiZWdhbiB0byBoZWFyIHNvbWUgdW51c3VhbCBzb3VuZHMuIE9uZSBvZiB0aGUgc291bmRzIHJlc2VtYmxlZCBhbG1vc3QgbGlrZSBsYXVnaHRlci4gIFdoYXQgd2FzIHNvIHN0cmFuZ2UgaXMgdGhhdCBpdCB3YXMgbG93IGJ1dCBlY2hvZWQuIFlvdSBjb3VsZCBzZWUgcmVhbGx5IGdvb2QgdW5kZXIgdGhlIHRpbWJlci4gVGhlcmUgc29tZSBzbWFsbCB0cmVlcywgYnV0IG5vIHRoaWNrIGJydXNoIHNvIHdlIGtpbmQgb2YgaWdub3JlZCBpdCBhbmQgd3JvdGUgaXQgb2ZmIGlzIGp1c3QgYW4gdW51c3VhbCBzb3VuZCBvZiBhIGJpcmQuIFdlIGhlYXJkIHRoaXMgc291bmQgNSBvciA2IHRpbWVzLiBKdXN0IGEgZmV3IHNlY29uZHMgYWZ0ZXIgd2UgaGVhcmQgYSBsb3cgZ3Jvd2xpbmcgc291bmQgdGhhdCBkaWRu4oCZdCByZXNlbWJsZSBhbnkga2luZCBvZiBiZWFyIG9yIGNveW90ZSB0aGF0IEkgaGFkbuKAmXQgaGVhcmQuIEkgeWVsbGVkIOKAnGhleSBiZWFyIHlvdSBnZXQgb3V0IG9mIGhlcmXigJ0gaW4gYW4gYXR0ZW1wdCB0byBwb3NzaWJseSBzY2FyZSBvZmYgYW55IGtpbmQgb2YgcHJlZGF0b3IgaW4gdGhlIGFyZWEuIEkgaGFkIHNlZW4gc2V2ZXJhbCBiZWFycyBpbiB0aGUgYXJlYSBvdmVyIHRoZSB5ZWFycyBhbmQgYWN0dWFsbHkgaGFydmVzdGVkIHR3byB3aXRoIG15IHN0ZXBzb24uIFRoZSBuZXh0IG1vbWVudCBhIGxvdWQgc291bmQgdGhhdCBhbG1vc3QgcmVzZW1ibGVkIGFuIGFtYnVsYW5jZSBzaXJlbiBvciBhIHNpcmVuIG9uIGEgdmVoaWNsZSwgYnV0IHdpdGggbW9yZSBkZXB0aCBpbiB0aGUgdG9uZSByYW5nIHRocm91Z2hvdXQgdGhlIHdvb2RzLiBUaGVuIGEgZmV3IHNlY29uZHMgb2YgYSBzb3VuZCB0aGF0IHdhcyBhIGxvbmcgaHVmZiBodWZmIGh1ZmYgdGhhdCB3YXMgdmVyeSBndXR0dXJhbCBhbmQgZ3J1bmd5IGNhbWUgdGhyb3VnaCB0aGUgd29vZHMuIFdlIHN0b29kIHNpbGVudCB1bnRpbCBoZSBzYWlkIGhlIHdhbnRzIHRvIGxlYXZlLiAgSeKAmW0gc2NhcmVkIGFzIGhlIHdhcy4gSGUgd2FzIG9ubHkgYWJvdXQgMTMgYXQgdGhlIHRpbWUuIEkgdG9sZCBoaW0gdG8ganVzdCBob2xkIG9uIGFuZCBJ4oCZbSBzdXJlIGl0IHdhcyBub3RoaW5nLiBJIGhhZCBhIEdsb2NrIDIxIFNGIHdpdGggbWUgd2hpY2ggaXMgYSA0NSBjYWxpYmVyIGhhbmRndW4gYW5kIHdhcyBwcmV0dHkgY29uZmlkZW50IHRoYXQgd2UgY291bGQgaGFuZGxlIGFueXRoaW5nIGluIHRoZSB3b29kcy4gU3VkZGVubHksIGFib3V0IDYwIHlhcmRzIGF3YXksIHRoZSB0b3BzIG9mIHRyZWVzIHN0YXJ0ZWQgc3dheWluZyBiYWNrLWFuZC1mb3J0aCBhbmQgeW91IGNvdWxkIGhlYXIgdGhlIHNvdW5kIG9mIGZlZXQgbW92aW5nIHF1aWNrbHkgaW4gdGhlIGxlYXZlcywgYnV0IGl0IGRpZG7igJl0IHNvdW5kIGxpa2UgYW55IGJlYXIsIGRlZXIsIG9yIHNxdWlycmVsIG1vdmluZy4gVGhlIHN0ZXBzIHdlcmUgaGVhdnksIHlldCBzbyBmYXN0IHBhY2VkLiBUaGVyZSB3YXMgYSBncm91cGluZyBvZiB0cmVlcywgYmVlY2gsIG1hcGxlLCBhbmQgaGlja29yeSwgYmV0d2VlbiA4IGluY2hlcyB0byAyNCBpbmNoZXMgaW4gZGlhbWV0ZXIuIE5vbmUgb2YgdGhlIGxhcmdlciB0cmVlcyB3ZXJlIHNob29rLiBUaGUgc21hbGxlciB0cmVlcyA4IGluY2hlcyBpbiBkaWFtZXRlciB0byAxNiBpbmNoZXMgaW4gZGlhbWV0ZXIgd2VyZSBzd2F5aW5nIGJhY2stYW5kLWZvcnRoIHZpb2xlbnRseSBhbmQgdGhlIHRvcHMgd2VyZSBiYW5naW5nIGFnYWluc3QgZWFjaCBvdGhlci4gSSBsb29rZWQgYXJvdW5kIGFuZCBvYnNlcnZlZCB0aGF0IHRoZXJlIHdhcyBubyB3aW5kIGJsb3dpbmcgYXQgdGhpcyB0aW1lLiBUaGUgbGFyZ2UgdGltYmVyIGluIHRoZSBhcmVhIHNvbWV3aGF0IGJsb2NrZWQgb3VyIHZpZXcgb2YgdGhlIGNyZWF0dXJlIGRvaW5nIHRoaXMgZnJvbSB3aGVyZSB3ZSB3ZXJlIHN0YW5kaW5nLCBidXQgb2NjYXNpb25hbGx5IHdlIHdvdWxkIGNhdGNoIGEgZ2xpbXBzZSBvZiB3aGF0IGFwcGVhcmVkIHRvIGJlIGEgbGFyZ2UgY3JlYXR1cmUgb24gdHdvIGxlZ3MgYXBwcm94aW1hdGVseSA2IHRvIDcgZmVldCB0YWxsIG1vdmluZyBmcm9tIG9uZSBzbWFsbGVyIHRyZWUgdG8gYW5vdGhlciBiZWZvcmUgc2hha2luZyB0aGUgdHJlZSBoYXJkIGVub3VnaCB0aGF0IGl0IHdvdWxkIGJhbmcgdGhlIHRvcHMgb2Ygb3RoZXIgdHJlZXMuIFRoaXMgb2NjdXJyZWQgZm9yIGFwcHJveGltYXRlbHkgMyB0byA1IG1pbnV0ZXMuIEl0IGlzIG5vdGFibGUgdGhhdCB0aGUgY3JlYXR1cmUgYWx3YXlzIHBvc2l0aW9uZWQgaXRzZWxmIHRvIHRoZSBiYWNrc2lkZSBvZiB0aGUgdHJlZSwga2VlcGluZyB0aGUgdHJlZSBiZXR3ZWVuIHVzLiBJdCBzdG9wcGVkIGZvciBhYm91dCAzMCBzZWNvbmRzLiBUaGVyZSB3YXMgbm8gc291bmQgaW4gdGhlIHdvb2RzIHdoYXRzb2V2ZXIuIFRoZW4gd2UgaGVhcmQgcXVpY2sgZm9vdHN0ZXBzIGdvaW5nIHRocm91Z2ggdGhlIGxlYXZlcy4gQXMgd2UgbW92ZWQgdHJ5aW5nIHRvIGNhdGNoIGEgZ2xpbXBzZSBvZiB3aGF0ZXZlciBpdCB3YXMsIHdlIGNvdWxkIHNlZSBhIGxhcmdlIGNyZWF0dXJlIGJyb3duaXNoIGJsYWNrIG9uIHR3byBsZWdzIG1vdmluZyBxdWlja2x5LCBidXQgYXMgaXQgbW92ZWQgYmV0d2VlbiB0aGUgdHJlZXMuIEl0IHdhcyBzbyBmYXN0IHRoYXQgd2UgY291bGQgb25seSBjYXRjaCBnbGltcHNlcyBvZiB0aGUgY3JlYXR1cmUuIEl0IHdhcyBwdXR0aW5nIGRpc3RhbmNlIGJldHdlZW4gdXMuIEFsbCBvZiBhIHN1ZGRlbiB0aGUgdHJlZXMgc3RhcnRlZCBzaGFraW5nIGFnYWluLiBUcmVlcyA2IHRvIDggaW5jaGVzIGluIGRpYW1ldGVyIHdlcmUgYmVpbmcgc2hha2VuIHZpb2xlbnRseS4gQnJhbmNoZXMgd2VyZSBmbGFpbGluZyBmcm9tIHRoZSB0b3BzIGFzIHRoZXkgYmFuZ2VkIHRvZ2V0aGVyLiBUaGVuIGEgdHJlZSBiZWdhbiB0byBjcmFjayBhbmQgd2l0aGluIGEgZmV3IHNlY29uZHMgaXQgcXVpY2tseSBmZWxsLiBUaGUgdHJlZSB3YXMgcHJvYmFibHkgMjAgdG8gMjUgZmVldCBoaWdoLCBnaXZlIG9yIHRha2UsIGFuZCA2IHRvIDggaW5jaGVzIGluIGRpYW1ldGVyLiBBZnRlciB0aGlzIHRyZWUgaGFkIGZhbGxlbiwgYW5vdGhlciB0cmVlIHNpbWlsYXIgaW4gc2l6ZSwgYnV0IG11Y2ggdGFsbGVyIGJlZ2FuIHRvIHNoYWtlIHZpb2xlbnRseSB1bnRpbCBpdCBjcmFja2VkIGFuZCBmZWxsIHRvIHRoZSBncm91bmQuIDUtNiB0cmVlcyB3ZXJlIGJyb2tlbiBpbiB0aGlzIG1hbm5lci4gVGhlbiBhcyBxdWlja2x5IGFzIGl0IHN0YXJ0ZWQsIGl0IGFsbCBzdG9wcGVkLiBZb3UgY291bGQgaGVhciB0aGUgc291bmQgb2Ygc29tZXRoaW5nIGNyb3NzaW5nIHRoZSBwb2ludCBpbiB0aGUgZGlzdGFuY2Ugd2l0aCBoZWF2eSwgcXVpY2sgc3RlcHMuIFdlIGRlY2lkZWQgdG8gZ28gZG93biBpbnRvIHRoZSBhcmVhLiBXZWxsIEkgZGlkLCBoZSB3YXMgaW4gc2hvY2sgYW5kIG5lYXIgdGVhcnMsIGJ1dCBJIGhhZCB0aGUgZmlyZWFybSBzbyBoZSB3ZW50IHdpdGggbWUuIFRoZXJlIHdlcmUgYWxsIHNvcnRzIG9mIHNtYWxsIHRyZWVzIGZyZXNobHkgYnJva2VuIGluIHRoZSBhcmVhLiBUaGUgbGFyZ2VyIHRyZWVzIHdlIGhhZCBzZWVuIGJyb2tlbiB3ZXJlIGFsbCBicm9rZW4gaW4gdGhlIHNhbWUgZGlyZWN0aW9uLCBwb2ludGluZyBkb3duaGlsbC4gQXMgd2UgaW52ZXN0aWdhdGVkIHRoZSBhcmVhIHdoZXJlIHRoZSBjcmVhdHVyZSBoYWQgYmVlbiwgd2UgaGVhcmQgd2hhdCBzb3VuZGVkIGxpa2Ugcm9ja3MgYmVpbmcgcm9sbGVkIGRvd24gdGhlIGhpbGwuIEkgbG9va2VkIHVwIG9uIHRoZSBwb2ludCBpbiBmcm9udCBvZiB1cyBhbmQgY291bGQgc2VlIGxhcmdlIHJvY2tzLCB0aGUgc2l6ZSBvZiBhIGJhc2tldGJhbGwsIG1heWJlIGEgbGl0dGxlIGxhcmdlciwgYmVpbmcgcm9sbGVkIGRvd24gdGhlIHBvaW50LCBub3QgdG93YXJkIHVzIGJ1dCBjbG9zZSBlbm91Z2ggdGhhdCBpdCB3b3VsZCBvYnZpb3VzbHkgc2NhcmUgdXMuIEkgbG9va2VkIHVwIHRvd2FyZCB0aGUgcmlkZ2Ugb2YgdGhlIHBvaW50LiBJdCBjb3VsZCBzZWUgYSBjcmVhdHVyZSBuZWFyIGEgbGFyZ2UsIG9sZCBzcXVhdHRlZC4gSSB0aG91Z2h0IGl0IHdhcyBhIHN0dW1wIGF0IGZpcnN0LCBidXQgdGhlbiBpdCBxdWlja2x5IG1vdmVkIHRvIHRoZSBzaWRlIG9mIHRoZSB0cmVlLCBibGVuZGluZyBpbiB3aXRoIHRoZSBzaGFkZSBhbmQgcmVtYWluaW5nIGh1bmNoZWQgb3Igc3F1YXR0ZWQuIEkgc3RhcmVkIGF0IHdoYXQgSSB0aG91Z2h0IHRvIGJlIGNyZWF0dXJlIG1vbWVudGFyaWx5LiBUaGUgd29vZHMgd2VyZSBjb21wbGV0ZWx5IHN0aWxsLiBJIHR1cm5lZCB0byBteSBzdGVwc29uIGFuZCB0b2xkIGhpbSB0aGF0IHdlIHdvdWxkIGdvIGV4YWN0bHkgdGhlIHdheSB3ZSBjYW1lLiBBcyBJIHdhcyBsZWF2aW5nIEkgcmVtZW1iZXJlZCBJIGhhZCBhIHBiJmogc2FuZHdpY2ggaW4gbXkgYmFnLiBJIGxhaWQgaXQgb24gYSBzdHVtcCBhcyB0byBzYXkgSSByZXNwZWN0IHRoaXMgYXMgeW91ciBob21lIGFuZCB0byBzYXkgZWF0IHRoaXMgaW5zdGVhZCBvZiBtZS4gSSBoYXZlIGJlZW4gYmFjayB0aHJvdWdoIHRoZSBhcmVhIGFuZCBoZWFyZCBzdHJhbmdlIHNvdW5kcywgYnV0IG5ldmVyIGhhZCBhbnkgbW9yZSBpbmNpZGVudHMuIEVhY2ggdGltZSBJIGxlYXZlIGEgc21hbGwgZ2lmdCBsaWtlIGEgcG9wIHRhcnQgb3IgY2FuZHkgYmFyLiBDbG9zZSB0byB0aGF0IGFyZWEgYXJlIGxhcmdlIHN0YWNrcyBvZiByb2NrcyB0aGF0IGFyZSB1bmlmb3JtIGFuZCBhbG1vc3QgcmVjdGFuZ3VsYXIuIFRoZSBzdGFja3MgYXJlIHVzdWFsbHkgbGV2ZWwgb24gdG9wIGFuZCBtZWFzdXJlIDLigJkgaCBieSA2LTfigJkgbCBhbmQgNOKAmSB3LiBTZXZlcmFsIGFyZWFzIGhhdmUgbGFyZ2UgZHVnIG91dCBob2xlcyBhZ2FpbnN0IG9sZCBsb2dzIHRoYXQgYXBwZWFyZWQgdG8gYmUgZWl0aGVyIHdhbGxvd2VkIG9yIHNvbWUga2luZCBvZiBiZWRkaW5nIGFyZWEuIEkgZG8gbm90IGZlYXIgdGhpcyBjcmVhdHVyZSBpbiB0aGUgbGVhc3QsIGJ1dCByZXNwZWN0IGl0IGltbWVuc2VseS4gVGhlIHByb3BlcnR5IGlzIG5vdyBsZWFzZWQgYnkgYSBodW50aW5nIGNsdWIgYW5kIEkgYW0gd29ycmllZCB0aGF0IHRoZXkgd2lsbCBkaXNydXB0IGhpcyBob21lIGFzIHRoZXkgZG8gbm90IHJlc3BlY3QgTW90aGVyIE5hdHVyZSwgYnV0IHJhdGhlciBmZWVsIGFib3ZlIGl0LiIsImxvY2F0aW9uX2RldGFpbHMiOiJCb2x0IG1vdW50YWluIFtJbnZlc3RpZ2F0b3IgKE1NKSBub3RlczogR1BTIGNvb3JkaW5hdGVzIGZvciBsb2NhdGlvbjogMzcuNzg3MDAwNiwgLTgxLjUzNzcwMjYiLCJjb3VudHkiOiJXeW9taW5nIENvdW50eSIsInN0YXRlIjoiV2VzdCBWaXJnaW5pYSIsInNlYXNvbiI6IkZhbGwiLCJ0aXRsZSI6bnVsbCwibGF0aXR1ZGUiOm51bGwsImxvbmdpdHVkZSI6bnVsbCwiZGF0ZSI6bnVsbCwibnVtYmVyIjo3NDk4MSwiY2xhc3NpZmljYXRpb24iOiJDbGFzcyBBIiwiZ2VvaGFzaCI6bnVsbCwidGVtcGVyYXR1cmVfaGlnaCI6bnVsbCwidGVtcGVyYXR1cmVfbWlkIjpudWxsLCJ0ZW1wZXJhdHVyZV9sb3ciOm51bGwsImRld19wb2ludCI6bnVsbCwiaHVtaWRpdHkiOm51bGwsImNsb3VkX2NvdmVyIjpudWxsLCJtb29uX3BoYXNlIjpudWxsLCJwcmVjaXBfaW50ZW5zaXR5IjpudWxsLCJwcmVjaXBfcHJvYmFiaWxpdHkiOm51bGwsInByZWNpcF90eXBlIjpudWxsLCJwcmVzc3VyZSI6bnVsbCwic3VtbWFyeSI6bnVsbCwiY29uZGl0aW9ucyI6bnVsbCwidXZfaW5kZXgiOm51bGwsInZpc2liaWxpdHkiOm51bGwsIndpbmRfYmVhcmluZyI6bnVsbCwid2luZF9zcGVlZCI6bnVsbCwiaWQiOjYzfSx7Im9ic2VydmVkIjoiTXkgZmFtaWx5IGhhZCBtb3ZlZCBmcm9tIHRoZSBjaXR5IG9mIFJvY2hlc3RlciB0byBXb2xjb3R0LCBhIHNtYWxsIHRvd24gYWJvdXQgNTAgbWlsZXMgZWFzdCBvZiBSb2NoZXN0ZXIgaW4gSnVseSAyMDAzLiBXZSB3ZXJlIGxpdmluZyBpbiBhbiBvbGQgZmFybWhvdXNlIG9uIGFwcHJveC4gNzcgYWNyZXMgb2Ygd29vZHMgJiBjcmVla3MgbmVhciBMYWtlIE9udGFyaW8uIFRoaXMgaW5jaWRlbnQgaGFwcGVuZWQgc29tZXRpbWUgYmV0d2VlbiB0aGUgMTh0aC0yMHRoIG9mIFNlcHRlbWJlci4gTXkgc2lzdGVyJ3MgYmlydGhkYXkgaXMgdGhlIDIwdGggYW5kIEkgcmVjYWxsIGEgc21hbGwgZ3JvdXAgb2YgZmFtaWx5IGFuZCBmcmllbmRzIHdlcmUgdmlzaXRpbmcgdGhlIGhvdXNlIGZvciB0aGF0IG9jY2FzaW9uLiBNeSBmdXR1cmUtc3RlcGZhdGhlciB0b29rIGEgc21hbGwgZ3JvdXAsIGluY2x1ZGluZyBoaXMgYnJvdGhlciwgbXkgZm91ciBzaXN0ZXJzLCBhbmQgYSBmZXcgb3RoZXIgZnJpZW5kcyBvdXQgZm9yIGEgXCJ0b3VyXCIgb2YgdGhlIHByb3BlcnR5LiBJIHdhcyBub3QgcHJlc2VudCwgSSBoYWQgc3RheWVkIGJlaGluZCBhdCB0aGUgaG91c2UuIEFzIHRoZSBncm91cCByZXR1cm5lZCB0byB0aGUgaG91c2UsIG15IHN0ZXBmYXRoZXIgbGluZ2VyZWQgYmVoaW5kIGluIGFuIGFyZWEgb2YgdGhlIHByb3BlcnR5IHdoZXJlIGEgc3RyaXAgb2Ygd29vZHMgcnVucyBiZXR3ZWVuIHR3byBmaWVsZHMuIE15IHN0ZXBmYXRoZXIgd2FzIGluIHRoZSBmaWVsZCBjbG9zZXIgdG8gdGhlIGhvdXNlLCB3ZSdsbCByZWZlciB0byBpdCBhcyBmaWVsZCAjMS4gSGUgbm90aWNlZCB0byBoaXMgbGVmdCBzb21ldGhpbmcgaW4gdGhlIHdvb2RzIGFuZCB0dXJuZWQgdG8gc2VlIGEgdGFsbCwgd2hpdGUsIGhhaXIgY292ZXJlZCBjcmVhdHVyZSBzdGFuZGluZyBqdXN0IG9mZiB0aGUgcGF0aCBpbiB0aGUgd29vZHMuIEhlIHJhbiBhaGVhZCBhbmQgdG9sZCBoaXMgYnJvdGhlciwgYnV0IGRpZCBub3QgdGVsbCB0aGUgcmVzdCBvZiB0aGUgZ3JvdXAuIEhpcyBicm90aGVyIHJ1c2hlZCBpbnRvIHRoZSBob3VzZSB0byBnZXQgbWUsIHRlbGxpbmcgbWUgdGhhdCBzb21ldGhpbmcgd2FzIGluIHRoZSB3b29kcyBhbmQgSSBzaG91bGQgY29tZSBzZWUuIEkgZm9sbG93ZWQgaGltIG91dHNpZGUgd2hlcmUgbXkgc3RlcGZhdGhlciByZWxheWVkIHRoZSBzdG9yeSB0byBtZSBhbmQgdGhlIHRocmVlIG9mIHVzIHdhbGtlZCBiYWNrIHRvIHRoZSBhcmVhIG9mIGhpcyBzaWdodGluZy4gQXMgbXkgc3RlcGZhdGhlciBzaG93ZWQgbWUgdGhlIHNwb3Qgd2hlcmUgdGhlIGNyZWF0dXJlIGhhZCBiZWVuIHN0YW5kaW5nLCB3ZSBhbGwgbm90aWNlZCB0aGF0IHRoZSBjcmVhdHVyZSB3YXMgc3RpbGwgcHJlc2VudCwgYnV0IGhhZCBtb3ZlZCBmdXJ0aGVyIGJhY2ssIHRvIGZpZWxkICMyLiBBdCB0aGlzIHBvaW50LCB0aGUgdGhyZWUgb2YgdXMgd2VyZSBzdGFuZGluZyBpbiBmaWVsZCAxIGFuZCBsb29raW5nIHRocm91Z2ggYSBzbWFsbCBzdHJpcCBvZiB0cmVlcyBhdCB0aGUgY3JlYXR1cmUgaW4gZmllbGQgMiwgbWF5YmUgMjAwIHlhcmRzIGF3YXkgb3Igc28uIE15IG9ic2VydmF0aW9ucyBvZiB0aGUgY3JlYXR1cmUgYXJlIGFzIGZvbGxvd3M6IEl0IHdhcyBhcHByb3hpbWF0ZWx5IDcnIHRhbGwsIGNvdmVyZWQgaW4gaGFpciwgd2hpdGUgYnV0IHdpdGggYSBkYXJrIGFyZWEgb24gdGhlIGZhY2UsIHRoaW5rIGFuZCBsYW5reSwgd2l0aCBhIGhlYWQgdGhhdCBjYW1lIHRvIGEgc2xpZ2h0IGNvbmljIHNoYXBlLiBJdCB3YXMgdG9vIGZhciB0byBkaXN0aW5jdGx5IHNlZSBpdHMgZmFjZSBidXQgdGhlcmUgd2FzIGEgZGVmaW5pdGUgZGFya2VyIGNvbG9yZWQgYXJlYSB3aGVyZSB0aGUgZmFjZSB3b3VsZCBoYXZlIGJlZW4uIFRoZSBjcmVhdHVyZSB3YXMgY2xlYXJseSBvYnNlcnZpbmcgdXMsIGFzIGl0IHBhY2VkIGJhY2sgYW5kIGZvcnRoLCBsb29raW5nIGFyb3VuZCB0cmVlcywgc3RhbmRpbmcgdXAgdGFsbGVyLCBkdWNraW5nIGRvd24sIGV0Yy4gdG8gZ2V0IGEgYmV0dGVyIGxvb2sgYXQgdXMuIEFmdGVyIGFwcHJveGltYXRlbHkgNDUgc2Vjb25kcywgdGhlIGNyZWF0dXJlIHJldHJlYXRlZCB0byBhbiBhcmVhIHdoZXJlIHdlIGNvdWxkbid0IHNlZSBpdCBjbGVhcmx5LiBJIHdhbGtlZCB0aHJvdWdoIHRoZSB0cmVlcyBpbnRvIGZpZWxkIDIgdG8gZ2V0IGEgYmV0dGVyIGxvb2sgYXQgaXQsIGJ1dCBpdCBoYWQgZGlzYXBwZWFyZWQuIFRoZSBhcmVhIHdoZXJlIGl0IGhhZCBiZWVuIHdhbGtpbmcgd2FzIG1hdHRlZCBkb3duLCBidXQgdGhlcmUgd2VyZSBubyBkaXN0aW5jdCBwcmludHMuIEp1ZGdpbmcgYnkgbmVhcmJ5IHRyZWVzLCBJIGVzdGltYXRlZCBpdHMgaGVpZ2h0IHRvIGJlIDYuNSAtIDcgZmVldC4iLCJsb2NhdGlvbl9kZXRhaWxzIjoiRWFzdCBvbiBSb3V0ZSAxMDQsIG5lYXIgdG93biBvZiBIdXJvbi4iLCJjb3VudHkiOiJXYXluZSBDb3VudHkiLCJzdGF0ZSI6Ik5ldyBZb3JrIiwic2Vhc29uIjoiRmFsbCIsInRpdGxlIjoiUmVwb3J0IDI2NTY2OiBNYW4gb2JzZXJ2ZXMgdGFsbCwgd2hpdGUgaGFpci1jb3ZlcmVkIGNyZWF0dXJlIGR1cmluZyBhIGZhbWlseSBnYXRoZXJpbmcgbmVhciBMYWtlIE9udGFyaW8iLCJsYXRpdHVkZSI6NDMuMjczMTQsImxvbmdpdHVkZSI6LTc2Ljg5MzMxLCJkYXRlIjoiMjAwMy0wOS0yMCIsIm51bWJlciI6MjY1NjYsImNsYXNzaWZpY2F0aW9uIjoiQ2xhc3MgQSIsImdlb2hhc2giOiJkcjlxNG04aDIxIiwidGVtcGVyYXR1cmVfaGlnaCI6NjguMSwidGVtcGVyYXR1cmVfbWlkIjo2Mi45LCJ0ZW1wZXJhdHVyZV9sb3ciOjUwLjEsImRld19wb2ludCI6NTMuMSwiaHVtaWRpdHkiOjcxLjgsImNsb3VkX2NvdmVyIjo0Ny4zLCJtb29uX3BoYXNlIjowLjgyLCJwcmVjaXBfaW50ZW5zaXR5IjowLjA0MSwicHJlY2lwX3Byb2JhYmlsaXR5IjoxMDAsInByZWNpcF90eXBlIjoiWydyYWluJ10iLCJwcmVzc3VyZSI6MTAyMSwic3VtbWFyeSI6IlBhcnRseSBjbG91ZHkgdGhyb3VnaG91dCB0aGUgZGF5IHdpdGggYSBjaGFuY2Ugb2YgcmFpbiB0aHJvdWdob3V0IHRoZSBkYXkuIiwiY29uZGl0aW9ucyI6IlJhaW4sIFBhcnRpYWxseSBjbG91ZHkiLCJ1dl9pbmRleCI6bnVsbCwidmlzaWJpbGl0eSI6OS45LCJ3aW5kX2JlYXJpbmciOjI1OS40LCJ3aW5kX3NwZWVkIjoxNS43LCJpZCI6NjR9LHsib2JzZXJ2ZWQiOiJNeSB3aWZlIGFuZCBJIHdlcmUgZHJpdmluZyBvbiBhIGJsYWNrdG9wIHNlY29uZGFyeSByb2FkIGF0IGFwcHJveC4gMTE6MzAgcG0sIHdoaWxlIHJldHVybmluZyBob21lIGZyb20gbXkgc3RlcHNvbidzIGhvbWUgaW4gQmVybGluLCBOLlkuIFRoaXMgaXMgYSByZWxhdGl2ZWx5IHJ1cmFsIGFyZWEsIHdpdGggbGFyZ2UgZXhwYW5zZXMgb2YgZm9yZXN0ZWQgbGFuZCwganVzdCB3ZXN0IG9mIHRoZSBNYXNzYWNodXNldHRzIGFuZCBWZXJtb250IHN0YXRlIGxpbmVzLiBBYm91dCAxIG1pbGUgZnJvbSBvdXIgaG9tZSB3ZSBjYW1lIGFyb3VuZCBhIGJlbmQgaW4gdGhlIHJvYWQgd2hlcmUgYW5vdGhlciByb2FkLCBEYXZpdHRzIExha2UgUmQsIGludGVyc2VjdHMgdGhlIHJvYWQgd2Ugd2VyZSB0cmF2ZWxpbmcsIEJsdWUgRmFjdG9yeSBIaWxsIFJkLiwgYW5kIGZvcm1zIGEgXCJUXCIuICBBdCB0aGlzIFwiVFwiIHRoZXJlIGlzIGEgc3RyZWV0IGxpZ2h0LCBhbmQgb3Bwb3NpdGUgRGF2aXR0cyBMYWtlIFJkLCBvbiB0aGUgb3RoZXIgc2lkZSBvZiBCbHVlIEZhY3RvcnkgSGlsbCBSZC4gKHRoZSByb2FkIHdlIHdlcmUgb24pLCBpcyBhIDQtNSBmb290IGVtYmFua21lbnQgc2xvcGluZyBhd2F5IGZyb20gdGhlIHNob3VsZGVyIG9mIHRoZSByb2FkIHRvIGEgbGFyZ2UgZmllbGQsIGFsc28gc2xvcGluZyBkb3dud2FyZCBmcm9tIHRoZSByb2FkIGFuZCBlbmRpbmcgYXQgYSBsaW5lIG9mIHRyZWVzIGFwcHJveC4gMTAwIHlhcmRzIGZyb20gdGhlIHJvYWQuIFRoZXJlIHdhcyAoYW5kIHN0aWxsIGlzKSBhIGJhcmIgd2lyZSBmZW5jZSB3aGljaCBydW5zIHBhcmFsbGVsIHRvIEJsdWUgRmFjdG9yeSBIaWxsIFJkLiBhbG9uZyB0aGlzIDQtNSBmb290IGVtYmFua21lbnQsIHdpdGggdGhlIGZlbmNlIHBvc3Qgc2V0IGhhbGZ3YXkgZG93biB0aGUgZW1iYW5rbWVudCBzbyB0aGF0IHRoZSB0b3Agd2lyZSBvZiB0aGUgZmVuY2UgaXMgYWJvdXQgdGhlIHNhbWUgaGVpZ3RoIG9yIHBlcmhhcHMgc2xpZ2h0bHkgaGlnaGVyIHRoYW4gdGhlIHNob3VsZGVyIG9mIHRoZSByb2FkLiBJdCBpcyBhdCB0aGlzIGxvY2F0aW9uIGF0IHRoZSBhYm92ZW1lbnRpb25lZCB0aW1lLCB1bmRlciB0aGUgaWxsdW1pbmF0aW9uIG9mIHRoZSBzdHJlZXQgbGlnaHQgdGhhdCBJIGNsZWFybHkgc2F3IGEgZmlndXJlIGluIG1pZCBzdHJpZGUgaHVyZGxpbmcgb3ZlciB0aGUgYmFyYndpcmUgZmVuY2UsIHdob3NlIGJvZHkgd2FzIGNvbXBsZXRlbHkgY292ZXJlZCB3aXRoIHJlZCBjb2xvcmVkIGhhaXIsIG5vdCB1bmxpa2UgdGhlIGNvbG9yIG9mIGEgcmVkIGZveC4gVGhlIGhhaXIgb24gbXkgbmVjayB0aW5nbGVkLCBhcyB3aGlsZSBJIHdhcyBjZXJ0YWluIG9mIHdoYXQgSSB3YXMgc2VlaW5nLCBteSBtaW5kIHdhcyBjb21pbmcgdXAgYmxhbmsgYXMgdG8gYW55IHJlZmVyZW5jZSBvZiB3aGF0IGl0IGFjdHVhbGx5IHdhcywgYW5kIEkgZmVsdCBhIHN1ZGRlbiBydXNoIG9mIGZlYXIuIEkgc2FpZCB0byBteSB3aWZlIFwiIHdoYXQgdGhlIGhlbGwgd2FzIHRoYXRcIiwgYW5kIGFzIG91ciB2ZWhpY2xlIGRyZXcgbmVhciB0aGUgc3BvdCB3aGVyZSBJIGZpcnN0IHNwb3R0ZWQgdGhlIGZpZ3VyZSwgSSBjb3VsZCBub3QgZHJhdyBteXNlbGYgdG8gc3RvcCB0aGUgdmVoaWNsZSwgb3IgZXZlbiBsb29rIGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGZpZWxkIG9uIG15IGxlZnQgd2hlcmUgdGhlIGZpZ3VyZSB3YXMgcnVubmluZy4gVXNpbmcgdGhlIHRlbGVwaG9uZSBwb2xlIGZyb20gd2hpY2ggdGhlIHN0cmVldCBsaWdodCBpcyBtb3VudGVkIGFzIGEgcG9pbnQgb2YgcmVmZXJlbmNlLCBJIHdvdWxkIGVzdGltYXRlIHRoaXMgZmlndXJlIHRvIHN0YW5kIGFwcHJveC4gNy04IGZlZXQgdGFsbCwgYW5kIHdhcyB0b3RhbGx5IGh1bWFuLWxpa2UgaW4gcmVzcGVjdCB0byBtb3ZpbmcgdXByaWdodC4gQXQgdGhpcyBwb2ludCBJIHdpbGwgdHVybiB0aGUgcmVwb3J0IG92ZXIgdG8gbXkgd2lmZSB3aG8gd2F0Y2hlZCB0aGlzIGZpZ3VyZSBydW4gZG93biB0aGUgZmllbGQuIEkgZGlkIG5vdCBzZWUgdGhlIGZpZ3VyZSBsZWFwaW5nIG92ZXIgdGhlIGJhcmJlZCB3aXJlIGZlbmNlIC0gYnV0IEkgZGlkIHNlZSBpdCBydW5uaW5nIHRocm91Z2ggdGhlIGZpZWxkLiAgSXQgd2FzIHZlcnkgbGFyZ2UsIGNvdmVyZWQgaW4gcmVkIGhhaXIgYXMgbXkgaHVzYmFuZCBkZXNjcmliZWQgYW5kIHJ1bm5pbmcgaW4gYW4gdXByaWdodCBwb3NpdGlvbiBzd2luZ2luZyBpdCdzIFwiYXJtc1wiIGJhY2sgYW5kIGZvcnRoIGFzIGl0IHJhbi4gIEkga25ldyBpdCB3YXNuJ3QgYSBiZWFyIG9yIGRlZXIgLSBhbmQgYXMgSSB3YXRjaGVkIGl0IGRpc2FwcGVhciBpbnRvIHRoZSB3b29kZWQgYXJlYSwgSSBoYWQgZ29vc2VidW1wcyBvbiBteSBuZWNrIGFuZCBrbmV3IEkgaGFkIGp1c3Qgc2VlbiBzb21ldGhpbmcgd2hpY2ggd2FzIHZlcnkgdW51c3VhbC4gVGhpcyBldmVudCBvY2N1cmVkIHNldmVyYWwgeWVhcnMgYWdvLCBhY3R1YWxseSBiYWNrIGluIDE5ODguIE5hdHVyYWxseSB3ZSBoYXZlIGJlZW4gcmVsdWN0YW50IHRvIHNoYXJlIG91ciBlbmNvdW50ZXIsIGFzIHdoZW4gZG9pbmcgc28gd2l0aCBldmVuIG91ciBjbG9zZXN0IGZyaWVuZHMsIHdlIGFyZSBtZXQgd2l0aCBjb21tZW50cyBzdWNoIGFzIGJhc2ljYWxseSB3ZSdyZSBudXRzLCBzZWVpbmcgdGhpbmdzLCBvciBpdCB3YXMgc3VyZWx5IGEgYmVhciBvciBkZWVyLiBCdXQgd2UgZG8gbm90IGtub3cgZWl0aGVyIHRvIGJlIGFibGUgdG8gcnVuIHVwcmlnaHQgbGlrZSBhIGh1bWFuISBTby0tLSBoYXZpbmcgZm91bmQgdGhpcyB3ZWJzaXRlIHdlIGd1ZXNzIGl0J3MgdGltZSB0byByZXBvcnQgdGhpcywgYXMgYWZ0ZXIgdmlld2luZyBzb21lIFRWIHByb2dyYW1zIGFib3V0IFwiYmlnZm9vdFwiLCB0aGUgb25seSBpbGxvZ2ljYWwgbG9naWNhbCBjb25jbHVzaW9uIHdlIGNhbiBjb21lIHRvIGlzIHRoYXQgb3VyIHJlZCBoYWlyZWQgZmlndXJlIHdhcyBpbiBmYWN0IGEgYmlnZm9vdCwgYW5kIHNpbmNlIHdlIHNhdyB0aGlzLCB0aGV5IG11c3QgZXhpc3QsIGZvciB3ZSBhcmUgYm90aCBhYnNvbHV0ZWx5IGNlcnRhaW4gb2YgdGhlIGRlc2NyaXB0aW9uIG9mIHdoYXQgd2Ugc2F3LiIsImxvY2F0aW9uX2RldGFpbHMiOiJQb2VzdGVua2lsbCBpcyB3aGF0IGlzIGtub3duIGFzIGEgXCJoaWxsIHRvd25cIiBvZiBSZW5zc2VsYWVyIENvdW50eSwgYW5kIGxpZXMgYXBwcm94IGhhbGZ3YXkgYmV0d2VlbiBBbGJhbnkgTi5ZLiBhbmQgV2lsbGlhbXN0b3duIE1hc3MuIGF0IGFuIGVsZXZhdGlvbiBvZiBhYm91dCAxMDAwIGZlZXQgYWJvdmUgc2VhIGxldmVsLiIsImNvdW50eSI6IlJlbnNzZWxhZXIgQ291bnR5Iiwic3RhdGUiOiJOZXcgWW9yayIsInNlYXNvbiI6IlN1bW1lciIsInRpdGxlIjpudWxsLCJsYXRpdHVkZSI6bnVsbCwibG9uZ2l0dWRlIjpudWxsLCJkYXRlIjpudWxsLCJudW1iZXIiOjU2ODUsImNsYXNzaWZpY2F0aW9uIjoiQ2xhc3MgQSIsImdlb2hhc2giOm51bGwsInRlbXBlcmF0dXJlX2hpZ2giOm51bGwsInRlbXBlcmF0dXJlX21pZCI6bnVsbCwidGVtcGVyYXR1cmVfbG93IjpudWxsLCJkZXdfcG9pbnQiOm51bGwsImh1bWlkaXR5IjpudWxsLCJjbG91ZF9jb3ZlciI6bnVsbCwibW9vbl9waGFzZSI6bnVsbCwicHJlY2lwX2ludGVuc2l0eSI6bnVsbCwicHJlY2lwX3Byb2JhYmlsaXR5IjpudWxsLCJwcmVjaXBfdHlwZSI6bnVsbCwicHJlc3N1cmUiOm51bGwsInN1bW1hcnkiOm51bGwsImNvbmRpdGlvbnMiOm51bGwsInV2X2luZGV4IjpudWxsLCJ2aXNpYmlsaXR5IjpudWxsLCJ3aW5kX2JlYXJpbmciOm51bGwsIndpbmRfc3BlZWQiOm51bGwsImlkIjo2NX0seyJvYnNlcnZlZCI6IklOIFRIRSBTVU1NRVIgT0YgMTk4MCBBTkQgQVQgVEhFIEFHRSBPRiAxNSBBIENMT1NFIEZSSUVORCBBTkQgTVlTRUxGIFdFUkUgSEFOR0lORyBPVVQgT04gQSBUUkFJTCBPRkYgQSBST0FEIElOIE1ZIENPTU1VTklUWS5PVVIgUExBTiBXQVMgVE8gSEFOR09VVCAsRFJJTksgU09NRSBCRUVSUyBBTkQgTElTVEVOIFRPIE1VU0lDLklUIFdBUyBBIEJFQVVUSUZVTCBGVUxMIE1PT04gTElHSFQgTklHSFQgU08gQlJJR0hUIFlPVSBDT1VMRCBBTE1PU1QgUkVBRC5XRSBBQ0NFTkRFRCBBIFRSQUlMIFdFTEwgS05PVyBTSU5DRSBCT1lIT09EKFBMSU5LSU5HIENBTlMgRVRDLikgQU5EIEZPVU5EIEEgTklDRSBQTEFDRSBUTyBDSElMTCBPVVQgQVQgVEhFIEJBU0UgT0YgQU5PVEhFUiBISUxMIE5FQVIgQSBTTUFMTCBSQVZJTkUuIFdFIFdFUkUgTElTVEVOSU5HIFRPIFRIRSBSQURJTyBGT1IgQVBQUk9YLiAyMCBNSU5TIEFORCBDQVJSWUlORyBPTiAoTk8gQkVFUlMgWUVUKVdIRU4gTVkgRlJJRU5EIEdSQUJCRUQgTVkgQVJNIEFORCBQT0lOVEVEIFRPIEEgRklHVVJFIEhVTkNISU5HIEFORCBIT0xESU5HIE9OIFRPIEEgU01BTEwgVFJFRSBXSVRIIElUUyBMRUZUIEFSTSAoQVBQUk9YIDMwIEZUIEFXQVkgQU5EIFVQIFRIRSBUUkFJTCBGUk9NIFVTLFRIRSBUUkFJTCBXQVMgQUJPVVQgMTAgVDAgMTUgRlQgV0lERSBBTkQgTEVUIEFMT1QgT0YgTU9PTkxJR0hUIEZJTFRFUiBUSFJPVUdILilJIFdBUyBJTU1FRElBVEVMWSBBTEFSTUVEIEJFQ0FVU0UgU09NRVRISU5HIEFCT1VUIFRIRSBGSUdVUkUgU0VFTUVEIE9GRiBUTyBNRSxFVkVOIEFTIEEgQk9ZIE9GIDE1IFRPIE1FIElUUyBTVEFOQ0UgV0FTIFZFUlkgTVVDSCBMSUtFIEEgUFJJTUFURSBIVU5DSElORy5XRSBCT1RIIFNBSUQgV0hBVCBUSEUgSEVMTCBJUyBUSEFUIEFORCBUSElOS0lORyBJVCBIQVMgVE8gQkUgSFVNQU4gQkVHQU4gWUVMTElORyBFVkVSWSBDT01NVU5JVFkgV0VJUkRPUyBOQU1FIFdFIENPVUxEIFRISU5LIE9GRiBBVCBJVC5USEUgVEhJTkcgV0FTIFJJVklURUQgTk8gTU9WRU1FTlQgQVQgQUxMIElUIFJFQUxZIEFQUEVBUkVEIFRPIEJFIFNUVURZSU5HIFVTLkFGVEVSIEEgVkVSWSBTSE9SVCBUSU1FIFdFIEJPVEggQURWQU5DRUQgVE9XQVJEIElUIEFORCBUUklFRCBUTyBHRVQgQSBCRVRURVIgTE9PSyBBVCBJVC5JIFdJTEwgTkVWRVIgRk9SR0VUIFdIQVQgSSBTQVcgQSBNRURJVU0gU0laRSBNT05LRVkvQVBFTElLRSBDUkVBVFVSRSBJVFMgUFJPUE9SU0lPTlMgV0VSRSBBUEUgTElLRSBUTyBNRSBBIExPTkcgVE9SU08sTE9ORyBBUk1TLFNIT1JURVIgTEVHUyBBTkQgQSBMQVJHRSBMT05HIEhFQUQgVEhBVCBTRUVNRUQgT1VUIE9GIFBMQUNFIEZPUiBUSEUgQk9EWSBTSVpFLChTT1JSWSBJIERJRE5UIFNFRSBUSEUgRkVFVClPRiBXSEFUIEkgU0FXIFdBUyBDT01QTEVURUxZIENPVkVSRUQgV0lUSCBGQUlSTFkgTE9ORyBIQUlSIEkgQ09VTEQgTk9UIFNFRSBGQUNJQUwgRkVBVFVSRVMgQlVUIERVRSBUTyBUSEUgTU9PTiBMSUdIVCBJVFMgSEVBRChIQUlSKSBXQVMgQSBMSUdIVEVSIENPTE9SLERPTlQgTEFVR0ggQlVUIEFMTU9TVCBBIExJR0hUIEdSRUVOSVNIIENPTE9SLklUUyBTVEFOQ0UgV0FTIExJS0UgQUxNT1NUIFNRVUFUSU5HIFdJVEggSVRTIFJJR0hUIEFSTSBIQU5HSU5HIFNMSUdIVExZIEFXQVkgRlJPTSBJVFMgQk9EWSBXSVRIIEVMQk9XIE9VVCBBTkQgVE9QIFNJREUgT0YgRk9SRUFSTSBGQUNJTkcgVVMgLElUUyBMRUZUIEhBTkQgV0FTIEdSQVNQSU5HIEEgQlJBTkNIIEFUIElUUyBIRUFEIExFVkVMIFdJVEggTEVHUyBCRU5UIEFORCBLTkVTUyBGQUNJTkcgVVMuSSBDQU5UIEVNUEhJU0UgRU5PVUdIIEhPVyBUSEUgTEVHUyBBUFBFQVJFRCBUT08gU0hPUlQgRk9SIFRIRSBUT1JTTyBBTkQgVEhFIEFSTVMgU0VFTUVEIFRPTyBMT05HIEZPUiBUSEUgVE9SU08gQU5EIFRIRSBIRUFEIFNFRU1FRCBUT08gVEFMTC9MQVJHRSBGT1IgVEhFIEJPRFksSVQgV0FTIFZFUlkgVkVSWSBWRVJZIERJU1RVUkJJTkcuUkVNSU5EIFlPVSBUSEFUIERVUklORyBBTEwgVEhJUyBXRSBBUkUgU0NSRUFNSU5HIFRPIEVBQ0hPVEhFUiBXSEFUIFRIRSBIRUxMIElTIElULk1ZIEZSSUVORCBBRFZBTkNFRCBFVkVOIEZVUlRIRVIgVE9XQVJEIElULEkgV0FTIEZST1pFTiBXSVRIIEZFQVIgQVQgVEhJUyBQT0lOVCBNWSBGUklFTkQgWUVMTEVEIFJVTiBSVU4gUlVOLldFIEJPVEggQk9MVEVEIEJBQ0sgRE9XTiBUSEUgSU5DTElORSBBTkQgQUxMIFRIRSBXQVkgSE9NRSBXRSBXRVJFIE5FWFQgRE9PUiBORUlHSEJPUlMgQU5EIFRIRSBPTkxZIFRISU5HIFdFIFNBSUQgV0hJTEUgU1BSSU5USU5HIEhPTUUgT1ZFUiBBTkQgT1ZFUiBXQVNcIiBXSEFUIFRIRSBIRUxMIFdBUyBUSEFUICxJIERPTlQgS05PV1wiLiBXRSBESUQgTk9UIERJU0NVU1MgSVQgRlVSVEhFUiBUSEFUIE5JR0hULlRIRSBGT0xMT1dJTkcgREFZIFdFIEFTS0VEIEVBQ0hPVEhFUiBXSEFUIFRIRSBPVEhFUiBQRVJTT04gU0FXIEFORCBXRSBCT1RIIEFHUkVFRCBWRVJZIENMT1NFTFkgT04gVEhFIERFU0NSSVBUSU9OIE9OTFkgTVkgRlJJRU5EIFNBVyBBIExJVFRMRSBNT1JFIERFVEFJTC5BRlRFUiBTT01FIFRJTUUgV0UgTUFERSBVUCBUSEUgTkFNRSBUSEVcIiBHUkVFTiBNT05LRVlcIkRVRSBUTyBUSEUgR1JFRU5JU0ggSElOVCBUSEUgTU9PTiBNQURFIE9OIElUUyBIRUFELkkgSEFWRSBPTkxZIFRPTEQgVEhJUyBUQUxFIFRPIEZBTUlMWSBBTkQgQ0xPU0UgRlJJRU5EUyBEVUUgVE8gRkVBUiBPRiBCRUlORyBSSURJQ1VMRUQuTVkgRlJJRU5EIEhBUyBSRUFMTFkgTkVWRVIgV0FOVEVEIFRPIERJU0NVU1MgV0hBVCBXRSBTQVcgRVNQRUNJQUxMWSBMQVRFUiBJTiBMSUZFLklOIDE5OTAgTVkgRkFUSEVSIFBBU1NFRCBBV0FZIEFORCBJTiAxOTk0IEkgTU9WRUQgSU5UTyBUSEUgU0FNRSBIT1VTRS9DT01NVU5JVFkgQU5EIFRPIFRISVMgREFZIE1ZIEZSSUVORCBSRUZVU0VTIFRPIERJQ1VTUyBUSEUgSU5DSURFTlQgQU5EIEFUIE5JR0hUIE9OIE1ZIFBST1BFUlRZIEkgU1RJTEwgQ0FUQ0ggTVlTRUxGIEJFSU5HIFNDQVJFRCBXSEVOIElNIE9VVFNJREUgQVQgTklHSFQgRVNQRUNJQUxMWSBJRiBJVFMgREFSSy5USElTIElTIEEgKFRSVUUpU1RPUlkgQU5EIFRIRSBJTUFHRSBJIFNBVyBJUyBFVENIRUQgSU4gTVkgTUVNT1JZLEkgV0lTSCBJIFdBUyBBIEFSVElTVCBTTyBJIENPVUxEIFBVVCBJVCBPTiBQQVBFUi4iLCJsb2NhdGlvbl9kZXRhaWxzIjoiQklHIEJVQ0sgTVROIFNUQVRFIFBBUksiLCJjb3VudHkiOiJQdXRuYW0gQ291bnR5Iiwic3RhdGUiOiJOZXcgWW9yayIsInNlYXNvbiI6IlN1bW1lciIsInRpdGxlIjoiUmVwb3J0IDExODQxOiBUd28geW91bmcgYm95cyBzZWUgY3JvdWNoaW5nIGFuaW1hbCIsImxhdGl0dWRlIjo0MS41MDM2LCJsb25naXR1ZGUiOi03My43MTcxLCJkYXRlIjoiMTk4MC0wOC0yMSIsIm51bWJlciI6MTE4NDEsImNsYXNzaWZpY2F0aW9uIjoiQ2xhc3MgQSIsImdlb2hhc2giOiJkcjdzNGUyemdwIiwidGVtcGVyYXR1cmVfaGlnaCI6NzAuNywidGVtcGVyYXR1cmVfbWlkIjo2Ni42LCJ0ZW1wZXJhdHVyZV9sb3ciOjYyLjksImRld19wb2ludCI6NTgsImh1bWlkaXR5Ijo3NC4yLCJjbG91ZF9jb3ZlciI6OTEuMywibW9vbl9waGFzZSI6MC4zNSwicHJlY2lwX2ludGVuc2l0eSI6MC4wMDEsInByZWNpcF9wcm9iYWJpbGl0eSI6MTAwLCJwcmVjaXBfdHlwZSI6IlsncmFpbiddIiwicHJlc3N1cmUiOjEwMTcsInN1bW1hcnkiOiJDbG91ZHkgc2tpZXMgdGhyb3VnaG91dCB0aGUgZGF5IHdpdGggbGF0ZSBhZnRlcm5vb24gcmFpbi4iLCJjb25kaXRpb25zIjoiUmFpbiwgT3ZlcmNhc3QiLCJ1dl9pbmRleCI6bnVsbCwidmlzaWJpbGl0eSI6MTAuOCwid2luZF9iZWFyaW5nIjoyMC40LCJ3aW5kX3NwZWVkIjoxNi4yLCJpZCI6NjZ9LHsib2JzZXJ2ZWQiOiJNeSBodXNiYW5kIGFuZCBJIGFyZSB2aXNpdGluZyBmYW1pbHkgaW4gU2FuZHkgSG9vay4gT24gdGhlIGV2ZW5pbmcgb2YgdGhlIDE4dGgsIGF0IGFib3V0IDc6MzAsIHdlIGdvdCBpbiB0aGUgY2FyIHRvIG1ha2UgYSBxdWljayBydW4gdG8gU2FuZHkgSG9vay4gSXQgd2FzIHZlcnkgY29sZCwgKGl0IHdhcyBhbHJlYWR5IGRhcmsgYXMgd2VsbCksIHNvIGhlIHN0YXJ0ZWQgdXAgdGhlIGNhciB0byBsZXQgaXQgd2FybSBiZWZvcmUgd2UgdG9vayBvZmYuIEFzIHdlIHdlcmUgd2FpdGluZywgaGUgY2FsbGVkIGhpcyBncmFuZG1vdGhlciAtLSBiZWNhdXNlIG9mIHRoZSBjYWxsIHRpbWUgb24gaGlzIHBob25lLCB3ZSBrbm93IHdoYXQgdGltZSB0aGlzIGFsbCBvY2N1cnJlZC4gV2hpbGUgaGUgd2FzIHRhbGtpbmcgdG8gaGVyLCBoaXMgbG93IGZ1ZWwgbGlnaHQgY2FtZSBvbiwgYW5kIHRoZXkgd3JhcHBlZCB1cCB0aGUgY2FsbCBhdCA3OjQ1LiBXZSBwdWxsZWQgb3V0IG9mIHRoZSBkcml2ZXdheSBhbmQgaGVhZGVkIGRvd24gdGhlIHJvYWQuIEhlIHdhcyBnb2luZyBhIGxpdHRsZSBmYXN0ZXIgdGhhbiBub3JtYWwgYmVjYXVzZSB3ZSB3ZXJlIGEgbGl0dGxlIG5lcnZvdXMgd2UnZCBydW4gb3V0IG9mIGdhcyBpZiB3ZSBkaWxseS1kYWxsaWVkIHRvbyBtdWNoLiBBcyB3ZSBnb3QgaW50byB0aGUgY3VydmUgYWJvdXQgYSBxdWFydGVyIG9mIGEgbWlsZSBmcm9tIG15IG1vbSdzIGhvdXNlLCBJIHNwb3R0ZWQgc29tZXRoaW5nIGluIHRoZSBob2xsb3cgYWhlYWQgb2YgdXMuIEl0IHdhcyBhbG1vc3Qgb3V0IG9mIHRoZSByYW5nZSBvZiBoaXMgaGVhZGxpZ2h0cywgYW5kIGJ5IG15IGNhbGN1bGF0aW9ucywgYWJvdXQgNzUtMTAwIGZlZXQgYXdheSBmcm9tIHVzLiBOb3cgdGhpcyBhbGwgaGFwcGVuZWQgdmVyeSB2ZXJ5IHF1aWNrbHksIGJ1dCBiZWNhdXNlIEkgYW0gb2JzZXJ2YW50LCBlc3BlY2lhbGx5IHdoZW4gaXQgY29tZXMgdG8gc3BvdHRpbmcgZGVlciBjcm9zc2luZyB0aGUgcm9hZCwgSSB3YXMgYWJsZSB0byBtYWtlIHRoaXMgb2JzZXJ2YXRpb24gd2l0aGluIGEgY291cGxlIG9mIHNlY29uZHMuIFdoYXQgSSBzYXcgZmlyc3Qgd2FzIHByZXN1bWFibHkgYW4gYW5pbWFsIHN0YW5kaW5nIG9uIHRoZSBlZGdlIG9mIHRoZSBvcHBvc2l0ZSBsYW5lLiBJIGxlYW5lZCBmb3J3YXJkIGFuZCBzY3J1dGluaXplZCBjbG9zZXIuIEp1c3QgYmVmb3JlIEkgY291bGQgc2NyZWFtIG91dCwgXCJERUVSIElOIFRIRSBST0FEIVwiIHRoZSBjcmVhdHVyZSBiZWdhbiB0byB3YWxrIHZlcnkgcXVpY2tseSwgYW5kIGF0IHRoYXQgbW9tZW50IEkgcmVhbGl6ZWQgaXQgaGFkIHR3byBsZWdzLCBub3QgZm91ci4gQXQgc29tZSBwb2ludCBJIHN0YXJ0ZWQgc2NyZWFtaW5nLCBcIlR1cm4gb24geW91ciBicmlnaHRzISBUaGVyZSdzIHNvbWV0aGluZyBpbiB0aGUgcm9hZCFcIiBBbGwgdGhlIHdoaWxlLCBJJ20gbG9va2luZyBhdCB0aGlzIHRoaW5nIHdoaWNoIGlzIHZlcnkgYmlnIGluIHN0YXR1cmUsIHRoaWNrIGxlZ3MsIHRoaWNrIGFiZG9tZW4sIGFuZCAoYWdhaW4gYnkgbXkgY2FsY3VsYXRpb25zKSBhdCBsZWFzdCA3IGZ0IHRhbGwuIEl0IHdhcyB0aGUgY29sb3Igb2YgYSB0cmVlLCBzcGVjaWZpY2FsbHkgdGhlIHRyZWVzIGluIHRoYXQgYXJlYSwgc28gbGlrZSBhIGdyYXlpc2gtYnJvd24sIHZlcnkgZWFydGh5LXRvbmUuIFRoZSBhcmVhIHdoZXJlIEkgYXNzdW1lIGEgZmFjZSB3b3VsZCBiZSB3YXMgbGlnaHRlciBpbiBjb2xvciwgYnV0IEkgY291bGRuJ3QgdGVsbCB3aGF0IGNvbG9yLiBJIGtub3cgdGhpcyBiZWNhdXNlIGl0IHR1cm5lZCBpdHMgaGVhZCBhbmQgbG9va2VkIHN0cmFpZ2h0IGF0IG91ciBjYXIuIE15IGh1c2JhbmQgc2F3IG1vdmVtZW50IGFuZCBoZSBzYXcgd2hhdCBoZSBkZXNjcmliZWQgYXMgYSBzdHJhbmdlIHNoYWRvdywgYnV0IGhlIGRpZCBub3Qgc2VlIHRoZSBjcmVhdHVyZS4gT25seSBJIHNhdyB0aGUgY3JlYXR1cmUsIGFuZCBpbiBmYWlybHkgZ29vZCBkZXRhaWwuIEFnYWluLCBpdCBoYXBwZW5lZCBzbyBxdWlja2x5IHRob3VnaCwgSSBkaWRuJ3QgZ2V0IHRvIHNlZSBmZWV0LCBoYW5kcyBvciBmYWNpYWwgZGV0YWlscyBsaWtlIGV5ZXMgYW5kIG1vdXRoLiBPbmUgdGhpbmcgSSB0aG91Z2h0IHdhcyBpbnRlcmVzdGluZyB3YXMgdGhlIGRpcmVjdGlvbiBpdCB3YXMgY29taW5nIGZyb20uIEl0IHdhcyBjb21pbmcgZnJvbSBhIHZlcnkgdGFsbCBhbmQgc3RlZXAgbW91bnRhaW4sIGFuZCB3aGVuIGl0IGh1cnJpZWQgYWNyb3NzIHRoZSByb2FkLCBpdCBtdXN0IGhhdmUgZ29uZSBvZmYgYSB2ZXJ5IHN0ZWVwIGNsaWZmLCBhcyB0aGF0IGlzIHRoZSBvbmx5IHBsYWNlIGl0IGNvdWxkIGhhdmUgZ29uZS4gVGhpcyBjbGlmZiBkcm9wcyBvZmYgb250byBQcnVldHRzIEZvcmsgUm9hZCwgd2hpY2ggaXMgYWxzbyB2ZXJ5IHdvb2RlZCBhbmQgc2VjbHVkZWQuIEFmdGVyIHdlIGNhbWUgYmFjayBmcm9tIG91ciBlcnJhbmQsIHdlIGRyb3ZlIHNsb3dseSBhbmQgdHJpZWQgdG8gaW5zcGVjdCB0aGUgYXJlYSwgYnV0IGNhbWUgdXAgZW1wdHkgaGFuZGVkLiBUaGF0IG5pZ2h0LCB0aGUgbmVpZ2hib3Job29kIGRvZ3Mgd2VyZSBiZWhhdmluZyB2ZXJ5IHN0cmFuZ2VseSwgYmFya2luZyBhbmQgaG93bGluZyBhbGwgbmlnaHQgbG9uZy4gT25lIG9mIHRoZW0gZXZlbiBhY3RlZCBhcyBpZiBoZSBjb3VsZCBzZWUgc29tZXRoaW5nIGluIHRoZSBkaXN0YW5jZSwgYW5kIGJlZ2FuIHRvIGdyb3dsIGFuZCBzdGFsayBiZWZvcmUgaGUgdG9vayBvZmYgdG8gY2hhc2UgaXQuIEl0IHdhcyBhIHZlcnkgd2VpcmQgbmlnaHQuIiwibG9jYXRpb25fZGV0YWlscyI6bnVsbCwiY291bnR5IjoiRWxsaW90dCBDb3VudHkiLCJzdGF0ZSI6IktlbnR1Y2t5Iiwic2Vhc29uIjoiRmFsbCIsInRpdGxlIjoiUmVwb3J0IDYxMDk3OiBQYXNzZW5nZXIgaGFzIGEgcG9zc2libGUgZXZlbmluZyBzaWdodGluZyBpbiBTYW5keSBIb29rIiwibGF0aXR1ZGUiOjM4LjAzMTEsImxvbmdpdHVkZSI6LTgzLjE4MTUsImRhdGUiOiIyMDE4LTEwLTE4IiwibnVtYmVyIjo2MTA5NywiY2xhc3NpZmljYXRpb24iOiJDbGFzcyBCIiwiZ2VvaGFzaCI6ImRudWI3NW01NHciLCJ0ZW1wZXJhdHVyZV9oaWdoIjo1NS40LCJ0ZW1wZXJhdHVyZV9taWQiOjQ1LjgsInRlbXBlcmF0dXJlX2xvdyI6MzYuNiwiZGV3X3BvaW50IjozMS43LCJodW1pZGl0eSI6NTkuNywiY2xvdWRfY292ZXIiOjAsIm1vb25fcGhhc2UiOjAuMzEsInByZWNpcF9pbnRlbnNpdHkiOjAsInByZWNpcF9wcm9iYWJpbGl0eSI6MCwicHJlY2lwX3R5cGUiOm51bGwsInByZXNzdXJlIjoxMDMxLjUsInN1bW1hcnkiOiJDbGVhciBjb25kaXRpb25zIHRocm91Z2hvdXQgdGhlIGRheS4iLCJjb25kaXRpb25zIjoiQ2xlYXIiLCJ1dl9pbmRleCI6IjcuMCIsInZpc2liaWxpdHkiOjkuOSwid2luZF9iZWFyaW5nIjo1LjMsIndpbmRfc3BlZWQiOjUuOSwiaWQiOjY3fSx7Im9ic2VydmVkIjoiTXkgYnJvdGhlciBhbmQgSSB3ZXJlIGNhbm9laW5nIG9uIExha2UgR2VvcmdlLCBpbiBOLlkgc3RhdGUgYXQgYWJvdXQgc3Vuc2V0LiBXZSBoZWFkZWQgc291dGggZm9yIDEwIG1pbnV0ZXMgdG8gYW4gYXJlYSBrbm93biBhcyBEZWVyIExlYXAuIEF0IGxha2Ugc2lkZSBpdCBpcyBhIGJvdWxkZXIgc3RyZXduIGFyZWEgd2l0aCBjbGlmZnMgcmlzaW5nIDYwMCBmZWV0IGFib3ZlIHRoZSBzaG9yZWxpbmUuIEFzIHdlIHdlcmUgYmVnaW5pbmcgdG8gY29tZSBvbiB0byB0aGlzIGFyZWEgd2Ugc2F3IHNvbWV0aGluZyBzdGFuZGluZyBvbiBzaG9yZS4gSXQgd2FzIGJyb3duaXNoIGluIGNvbG9yIGFuZCBzdGFuZGluZyBzdHJhaWdodCB1cCB3aXRoIGl0J3MgYXJtcyBhdCBpdCdzIHNpZGUuIEl0IHdhcyBhYm91dCB0aGUgc2l6ZSBvZiBhIHNtYWxsIG1hbiBhbmQgdmVyeSB0aGluLiBJdHMgYm9keSB3YXMgZmFjaW5nIHNvdXRoLCBsb29raW5nIGRvd24gdGhlIHNob3JsaW5lIHdoZW4gaXQgc3VkZGVubHkgdHVybmVkIGl0cyBoZWFkIGRpcmVjdGx5IHRvd2FyZHMgdXMgYW5kIGxvb2tlZCB2ZXJ5IGludGVudGx5LiBXZSAgd2hpc3BlcmVkIHRvIGVhY2ggb3RoZXIgYW5kIHdhdGNoZWQgaXQgd2hpbGUgaXQgd2F0Y2hlZCB1cy4gV2Ugd2VyZSAyIGdyb3duIG1lbiBwYWRkbGluZyBwYXJhbGxlbCB0byB0aGUgc2hvcmUgYW5kIGFib3V0IDIwMCBmZWV0IG91dCBidXQgd2UgY291bGQgbm90IHN1bW1vbiB1cCB0aGUgY291cmFnZSB0byBnbyBpbiBjbG9zZXIuIFRoaXMgdGhpbmcgaGFkIGEgc3RyYW5nZSBsb29rLCBhbG1vc3QgYSBjcmF6ZWQgZ3Jpbi4gTGlrZSBhIGdpYW50IExlbXVyLiAgVGhlIHN1biB3YXMgc2V0IG5vdyBhcyB3ZSBjb250aW51ZWQgdG8gd2F0Y2ggaXQgaW4gdGhlIHNoYWRvd3Mgb2YgdGhlIG1vdW50YWluLiBBcyBpdCB3YXMgc3RhbmRpbmcgbmV4dCB0byBhbiBvbGQsIGRlYWQgcGluZSB0cmVlLCBpdCB0dXJuZWQgYW5kIGNsaW1iZWQsIHNsb3RoLWxpa2UgdXAgdGhlIHRyZWUgYWJvdXQgMjAgZmVldCB0byB0aGUgZmlyc3QgYW5kIG9ubHkgbGFyZ2UgbGltYiBhbmQgb250byB0aGUgY3Jvb2sgb2YgYSBicmFuY2guIFdlIHBhZGRsZWQgYmFjayBhcm91bmQgYW5kIGFzIHdlIGFwcHJvYWNoZWQgaXQgYWdhaW4gY29ja2VkIGl0cyBoZWFkIGRpcmVjdGx5IGF0IHVzLCBhZnRlciBhIG1pbnV0ZSBvciBzbyBpdCB0dXJuZWQgaXRzIGZhY2UgZG93bndhcmQgaW50byBpdHMgYm9keSBhbmQgYmVjYW1lIGFzIGlmIGl0IHdlcmUgYSBwYXJ0IG9mIHRoZSB0cmVlLiBKdXN0IGEgbHVtcCBvbiB0aGUgY3Jvb2sgb2YgdGhlIGJyYW5jaC4gWW91IHdvdWxkIG5vdCBrbm93IGl0IHdhcyB0aGVyZSB1bmxlc3MgeW91IHNhdyBpdCBtb3ZlLiBJIGhhdmUgYmVlbiBpbiB0aGlzIGFyZWEgYWxsIG15IGxpZmUgYW5kIGhhdmUgbmV2ZXIgc2VlbiBhbnl0aGluZyBsaWtlIHRoaXMgYW5kIGhhdmUgbm90IHNlZW4gaXQgc2luY2UuIEluIG15IHNlYXJjaGluZ3MgSSBoYXZlIGZvdW5kIHJlZmVyZW5jZSB0byBhIGNyZWF0dXJlIGZvdW5kIGluIHRoZSB3b29kcyBvZiBOZXcgSGFtcHNoaXJlLiBCYWNrIGluIHRoZSAzMCdzIHRoZXkgY2FsbGVkIGl0IHRoZSBcIldvb2QgZGV2aWwgb3IgU3RpY2sgTWVuXCIuIFRoZSBvbmUgdGhpbmcgaW5jb21tb24gaXMgdGhleSBhcmUgYWJsZSB0byBibGVuZCBpbnRvIHRyZWVzIHRvIGF2b2lkIGJlaW5nIHNlZW4uIiwibG9jYXRpb25fZGV0YWlscyI6Ikp1c3Qgc291dGggb2YgdGhlIFRvbmd1ZSBNdC5Mb29rb3V0IG9uIFJvdXRlIDlOLiIsImNvdW50eSI6IldhcnJlbiBDb3VudHkiLCJzdGF0ZSI6Ik5ldyBZb3JrIiwic2Vhc29uIjoiU3ByaW5nIiwidGl0bGUiOm51bGwsImxhdGl0dWRlIjpudWxsLCJsb25naXR1ZGUiOm51bGwsImRhdGUiOm51bGwsIm51bWJlciI6MjQwNSwiY2xhc3NpZmljYXRpb24iOiJDbGFzcyBBIiwiZ2VvaGFzaCI6bnVsbCwidGVtcGVyYXR1cmVfaGlnaCI6bnVsbCwidGVtcGVyYXR1cmVfbWlkIjpudWxsLCJ0ZW1wZXJhdHVyZV9sb3ciOm51bGwsImRld19wb2ludCI6bnVsbCwiaHVtaWRpdHkiOm51bGwsImNsb3VkX2NvdmVyIjpudWxsLCJtb29uX3BoYXNlIjpudWxsLCJwcmVjaXBfaW50ZW5zaXR5IjpudWxsLCJwcmVjaXBfcHJvYmFiaWxpdHkiOm51bGwsInByZWNpcF90eXBlIjpudWxsLCJwcmVzc3VyZSI6bnVsbCwic3VtbWFyeSI6bnVsbCwiY29uZGl0aW9ucyI6bnVsbCwidXZfaW5kZXgiOm51bGwsInZpc2liaWxpdHkiOm51bGwsIndpbmRfYmVhcmluZyI6bnVsbCwid2luZF9zcGVlZCI6bnVsbCwiaWQiOjY4fSx7Im9ic2VydmVkIjoiSXQgd2FzIGluIHRoZSBhZnRlcm5vb24gb24gYSBzbm93eSB3aW50ZXIgZGF5LjE5ODUuIE15IGZyaWVuZCBhbmQgSSBkZWNpZGVkIHRvIGdvIGZvciBhIHdpbnRlciBkcml2ZSh3aGljaCB3YXMgdmVyeSBjb21tb24gZm9yIG1lIHdoZW4gaXQgc25vd3MpLldlIGVuZGVkIHVwIGF0IHRoZSBlbnRyYW5jZSB0byBcIkljZSBDYXZlIE1vdW50YWluXCIuIE9mIGNvdXJzZSB0aGUgYXR0cmFjdGlvbiB3YXMgY2xvc2VkLiBCdXQgd2Ugd2FudGVkIHRvIGdvIGZvciBhIHdpbnRlciB3YWxrIGFuZCB0aG91Z2h0IGl0IHdvdWxkIGJlIHByZXR0eSBzZWNlbmVyeSBpbiB0aGUgdW50b3VjaGVkIHNub3cgY292ZXJlZCBncm91bmRzLiBXZSBzdGVwcGVkIG92ZXIgdGhlIGdhdGUgYW5kIGJlZ2FuIHRvIHdhbGsgdGhlIGRyaXZld2F5IHRvd2FyZHMgdGhlIHdvb2RzLiBXZSB3ZXJlIHRhbGtpbmcgd2l0aCBlYWNob3RoZXIgaW4gbm9ybWFsIHZvaWNlIHRvbmVzLiBUaGUgc25vdyB3YXMgYWJvdXQgc2hpbiBkZWVwIHNvIGFzIHdlIHdhbGtlZCwgd2Ugd2VyZSBsb29raW5nIHRvd2FyZHMgdGhlIGdyb3VuZCB0byBzdGVwIHRocm91Z2ggdGhlIHNub3cgYXMgd2UgZ28uIEFzIHdlIGFwcHJvYWNoZWQgdGhlIHdvb2RzLCB3ZSBib3RoIGxvb2tlZCB0b3dhcmQgdGhlIHdvb2RzIHRvIHNlZSB0aGUgc25vdyBjb3ZlcmVkIHRyZWVzIGFuZCBzY2VuZXJ5LCB3aGVuIGFsbCBvZiBhIHN1ZGRlbiwgaXQgdG9vayB1cyBieSBzdXJwcmlzZSBhcyBtdWNoIGFzIHdlIHRvb2sgaGltIGJ5IHN1cnByaXNlLiBJdCBzdG9wcGVkIGluIGl0cyB0cmFja3MgdG8gbG9vayBhdCB1cy4gSXQgd2FzIGlmIGl0IGZyb3plIGluIHBsYWNlLiAoWW91IHNlZSwgdGhlc2UgZ3JvdW5kcyBhcmUgbm90IG9jY3VwaWVkIGF0IGFsbCBkdXJpbmcgdGhlIHdpbnRlciwgc28gaXQgd2FzIHRvdGFsbHkgdW51c3VhbCBmb3IgdXMgdG8gYmUgdGhlcmUpSXQgbG9va2VkIGF0IHVzIGFzIHdlIHdlcmUgZnJvemVuIGluIG91ciB0cmFja3Mgc3RhcmluZyBiYWNrIGF0IGl0LiBJdCB3YXMgYWJvdXQgMTUwIGZlZXQgZnJvbSB1cy4gSXQgd2FzIHZlcnkgbGFyZ2Ugd2l0aCBicm93biBmdXIvaGFpciBhbGwgb3ZlciBpdCdzIGJvZHkuIEl0IHdhcyBhYnNvbHV0ZWx5IGh1bWFuIGxvb2tpbmcuIEl0IHdhcyB3YWxraW5nIHVwcmlnaHQganVzdCBsaWtlIGh1bWFucyB3YWxrLiBXaGVuIGl0IGxvb2tlZCBhdCB1cywgaXQgZGlkbid0IHJlYWN0IGluIGFueSBkZWZmZW5zaXZlIHdheS4gSXQganVzdCB3YWl0ZWQgYSBtb21lbnQgb3IgdHdvIGFzIGlmIGl0IHdhcyB3YWl0aW5nIHRvIHNlZSB3aGF0IHdlIHdlcmUgZ29ubmEgZG8uIFdoZW4gSSB3YXMgZmluYWxseSBhYmxlIHRvIHNwZWVrLCBJIGFza2VkIG15IGZyaWVuZCBpZiBzaGUgc2VlcyB3aGF0IEkgc2VlLiBBbmQgd2l0aCB0aGF0IG1vdmVubWVudCwgaXQgc2VlbWVkIHRvIGhhdmUgYmVlbiBmcmlnaHRlbmVkIGJ5IHVzIGFuZCBzdGFydGVkIHRvIHdhbGsgYXdheSB2ZXJ5IGZhc3QsYnV0IGl0IGRpZG4ndCBydW4uIEl0IGp1c3QgaGFkIGEgdmVyeSBsb25nIHN0cmlkZS4gSXQgbG9va2VkIGJhY2sgYXQgdXMgYWdhaW4gd2hpbGUgaXQgd2FzIGxlYXZpbmcuIE5vdyBtaW5kIHlvdSwgd2Ugd2VyZSB0aGUgb25seSBwZW9wbGUgaW4gdGhlIGFyZWEuIEJ1dCB3ZSB3ZXJlIGN1cmlvdXMgYW5kIHN0dXBpZC5XZSBkZWNpZGVkIHRvIGZvbGxvdyBpdC4gQnV0IHRoZW4gYWdhaW4gd2Ugd2VyZSB2ZXJ5IHNjYXJlZC4gV2UgYXR0ZW1wdGVkIHRvIHRyeSBhbmQgZmluZCBmb290cHJpbnRzIGJ1dCB3ZXJlIHVuYWJsZSB0by4gTWF5YmUgYmVjYXVzZSB3ZSB3ZXJlIHRvbyBzY2FyZWQgdG8gbG9vayBwcm9wZXJseS4gSSBrbm93IHdoYXQgSSBzYXcuIEknbSBhIDQyIHlyIG9sZCBtb3RoZXIgb2YgdHdvIGFuZCBhbSBub3QgbG9va2luZyBmb3IgYW55dGhpbmcgZnJvbSB0aGlzLkkganVzdCB3YW50IHRvIGZpbmFsbHkgdGVsbCB3aGF0IEkgc2F3LiBBbmQgSSBrbm93IHdoYXQgSSBzYXcuSSBzYXcgQmlnZm9vdCEiLCJsb2NhdGlvbl9kZXRhaWxzIjoiUmlnaHQgYmV5b25kIHRoZSBlbnRyYW5jZSBvZiBcIkljYSBDYXZlIE1vdW50YWluXCIgaW4gdGhlIGxpdHRsZSBoYW1sZXQgb2YgQ3JhZ3Ntb29yLiBUaGUgbmVhcmVzdCB0b3duIGlzIEVsbGVudmlsbGUgaW4gdGhlIGNvdW50eSBvZiBVbHN0ZXIuIFwiU2hhd2FuZ3VuayBNb3VudGFpbnNcIi4iLCJjb3VudHkiOiJVbHN0ZXIgQ291bnR5Iiwic3RhdGUiOiJOZXcgWW9yayIsInNlYXNvbiI6IldpbnRlciIsInRpdGxlIjpudWxsLCJsYXRpdHVkZSI6bnVsbCwibG9uZ2l0dWRlIjpudWxsLCJkYXRlIjpudWxsLCJudW1iZXIiOjgwNjQsImNsYXNzaWZpY2F0aW9uIjoiQ2xhc3MgQSIsImdlb2hhc2giOm51bGwsInRlbXBlcmF0dXJlX2hpZ2giOm51bGwsInRlbXBlcmF0dXJlX21pZCI6bnVsbCwidGVtcGVyYXR1cmVfbG93IjpudWxsLCJkZXdfcG9pbnQiOm51bGwsImh1bWlkaXR5IjpudWxsLCJjbG91ZF9jb3ZlciI6bnVsbCwibW9vbl9waGFzZSI6bnVsbCwicHJlY2lwX2ludGVuc2l0eSI6bnVsbCwicHJlY2lwX3Byb2JhYmlsaXR5IjpudWxsLCJwcmVjaXBfdHlwZSI6bnVsbCwicHJlc3N1cmUiOm51bGwsInN1bW1hcnkiOm51bGwsImNvbmRpdGlvbnMiOm51bGwsInV2X2luZGV4IjpudWxsLCJ2aXNpYmlsaXR5IjpudWxsLCJ3aW5kX2JlYXJpbmciOm51bGwsIndpbmRfc3BlZWQiOm51bGwsImlkIjo2OX0seyJvYnNlcnZlZCI6IlRoaXMgICBpcyBhIHNvbWVoYXQgbG9uZyBzdG9yeSBidXQgaSB3aWxsIHRyeSB0byBzaG9ydGVuIGl0IHRoZSBiZXN0IGkgY2FuIHdpdGhvdXQgbGVhdmluZyBvdXQgYW55dGhpbmcuIEkgYWxzbyByZXBvcnRlZCB0aGlzIHRvIHRoZSBXZXN0ZXJuIE5ldyBZb3JrIGJpZ2Zvb3QgYXNzb2NpYXRpb24gYW5kIGNvbnRhY3RlZCBiYWNrIGFuZCBmb3J0aCB3aXRoIHRoaWVyIGRpcmVjdG9yIE1pa2UgR2VvcmdlLiBIZSB3YXMgc3VwcG9zZSB0byBjb21lIGRvd24gYW5kIG1lZXQgbWUgc28gdGhhdCBpIGNvdWxkIHRha2UgaGltIG91dCB0byB0aGUgbG9jYXRpb24gdGhpcyB2b2NhbGl6YXRpb24gb2NjdXJyZWQgLCB1bmZvcnR1bmF0bGV5IGhlIG5ldmVyIG1hZGUgaXQgZG93bi4gVGhpcyBoYXBwZW5lZCB0byBteXNlbGYgYW5kIG15IGxvbmcgdGltZSBmcmllbmQgYW5kIGh1bnRpbmcgcGFydG5lciBiYWNrIGluIHdpbnRlciBvZiAyMDAxLiBXZSB3ZXJlIG91dCBncm91c2UgaHVudGluZyBvbmUgZGF5IGluIGFuIGFyZWEga25vdyBhcyBcIk1pY2hpZ2FuIGhpbGxcIiAsIGEgc3RhdGUgb3duZWQgcGllY2Ugb2YgbGFuZCAxMywwMDAgYWNyZXMgYmlnIG5lYXIgUmljaGZvcmQgLCBOWSAuIFdlIGhhZCBoaWtlZCBhIG1pbGUgYW5kIGEgaGFsZiBvciBzbyBvZmYgdGhlIHJvYWQgd2l0aCBubyBsdWNrIGZpbmRpbmcgYW55IGJpcmRzIHdoZW4gd2UgY2FtZSB1cG9uIGEgbGFyZ2UgdGhpY2tseSB3b29kZWQgZ29yZ2Ugd2l0aCBhIGNyZWVrIHJ1bm5pbmcgdGhyb3VnaCB0aGUgYm90dG9tLiBXZSBkZWNpZGVkIHRvIGhlYWQgZG93biB0aGUgdmVyeSBzdGVlcCBoaWxsIGludG8gdGhlIGdvcmdlIGhvcGluZyB0aGF0IGluIHRoZSB0aGljayBwaW5lIGFuZCBvbGQgYXBwbGUgdHJlZXMgd291bGQgYmUgYSBmZXcgZ3JvdXNlLiBPbmNlIHJlYWNoaW5nIHRoZSBib3R0b20gYW5kIGNyb3NzaW5nIG92ZXIgdGhlIGNyZWVrIHdlIHdlcmUgYm90aCBzdG9wcGVkIGRlYWQgaW4gb3VyIHRyYWNrcyBieSBhIHNvdW5kIHdoaWNoIG1hZGUgYm90aCBvZiBvdXIgaGFpcnMgc3RhbmQgb24gZW5kLiBBIHNlcmllcyBvZiAgc2NyZWFtaW5nIGdyb3dscyB3aGljaCBpIGNhbiBvbmx5IGRlc2NyaWJlIGFzIGkgaGF2ZSBiZWZvcmUgYXMgYSA3MDAgcG91bmQgaHllbmEgd2l0aCBhIHNlcmlvdXMgYmFkIGF0dGl0dWRlIGhhZCBzdG9wcGVkIHR3b3AgZ3Jvd24gbWVuIHdpdGggZ3VucyBpbnN0YW50bHkuIGkgd2lsbCB0ZWxsIHlvdSBhcyBpIHRvbGQgdGhlIFdOWUJJQyAsIEkgaGF2ZSBiZWVuIGh1bnRpbmcgZm9yIG92ZXIgdHdlbnR5IHNvbWUgeWVhcnMgYW5kIGhhdmUgbmV2ZXIgLCBhbmQgSSBtZWFuIG5ldmVyIGhlYXJkIGFueXRoaW5nIHN1Y2ggYXMgdGhpcyBpbiBteSBsaWZlLldlbGwgYW55d2F5ICwgYWZ0ZXIgdHdvIG9yIHRocmVlIG9mIHRoZXNlIHZvY2FsaXphdGlvbnMgLHdoaWNoIHdlcmUgY29taW5nIGZyb20gb25seSBhYm91dCAzMCB5YXJkcyBhd2F5IG9yIHNvIHRocm91Z2ggdGhlIHZlcnkgdGhpY2sgdHJlZXMgLCB3ZSBkZWNpZGVkIHRvIG1vdmUgYSBsaXR0bGUgY2xvc2VyLiBXaGF0IGhhcHBlbmVkIHRoZW4gd2FzIHdoYXQgcmVhbGx5IHB1dCB0aGUgc2NhcmUgaW50byB1cyAsIEFzIHdlIHNwbGl0IGFib3V0IDEwIHlhcmRzIGFwYXJ0IGFuZCBzdGFydGVkIHRvIG1vdmUgdG93YXJkcyB0aGUgc291bmQgaXQgc2VlbWVkIHRvIG1vdmUgYXJvdW5kIG15IHBhcnRuZXIgYWxtb3N0IGFzIGlmIGl0IHdlcmUgZmxhbmtpbmcgaGltICwgd2hlbiBpdCBtb3ZlZCB5b3UgY291bGQgaGVyZSBpdCB3YWxraW5nIHRocm91Z2ggdGhlIHNub3cgYW5kIGJyZWFraW5nIGJyYW5jaGVzIGFuZCBzbWFsbGVyIHRyZWUgbGltYnMgLCBpdCBkZWZpbml0bGV5IHdlaWdoZWQgYWxvdCBtb3JlIHRoYW4gaW4gbXkgb3BpbmlvbiBoaW0gYW5kIGkgcHV0IHRvZ2V0aGVyLiBXZSBtb3ZlZCBhIGxpdHRsZSBtb3JlIGJlZm9yZSBpdCB2b2NhbGl6ZWQgYSBmZXcgbW9yZSB0aW1lcyAgYW5kIG1vdmVkIHRvIG91ciBsZWZ0IGV2biBmYXJodGVyIGFzIGlmIGl0IHdlcmUgdHJ5aW5nIHRvIGdldCBiZWhpbmQgdXMuIE5lZWRsZXNzIHRvIHNheSB3aXRoIGFsbCB0aGlzIGhhcHBlbmluZyBhbmQgdGhlIGNvbnN0YW50IGJhcmtpbmcgb2YgdGhlIGRvZ3MgZnJvbSB0aGUgZmFybSB1cCBieSB0aGUgcm9hZCB3ZSB3ZXJlIGFjdHVhbGx5IGdldHRpbmcgc2NhcmVkIGFuZCBuZXJ2b3VzLCB3aGF0ZXZlciB3YXMgaW4gdGhvc2UgdHJlZXMgZGlkbnQgd2FudCB1cyB0aGVyZSAuIGFmdGVyIGFib3V0IHRocmVlIG9yIGZvdXIgbWludXRlcyBpIGdsYW5jZWQgb3ZlciBhdCBteSBmcmllbmQgd2hvbSBhdCB0aGF0IHRpbWUgd2FzIGRvd24gb24gb25lIGtuZWUgd2l0aCBoaXMgZ3VuIHNob3VsZGVyZWQgYXMgaWYgd2hhdGV2ZXIgd2FzIHRoZXJlIHdhcyBoZWFkaW5nIGZvciBoaW0gLiBIZSBsb29rZWQgYXQgbWUgYW5kIGkgbW90aW9uZWQgdG8gaGltIHRoYXQgaSB0aG91Z2h0IGl0IHdhcyB0aW1lIHRvIGxlYXZlIHRoYXQgYXJlYSBhbmQgd2hhdGV2ZXIgd2FzIGRvd24gdGhlcmUgYW5kIGhlYWRiYWNrIHRvIHRoZSByb2FkIGFuZCB0cnVjayBhcyBxdWlja2x5IGFzIHBvc3NpYmxlLiBXZSBkaWQganVzdCB0aGF0IG1vdmluZyB2ZXJ5IHF1aWNrbHkgYnV0IGNhdXRpb3VzbHksIHRoZSB3aG9sZSB0aW1lIGxvb2tpbmcgYmFjayBvdmVyIG91ciBzaG91bGRlcnMgdGlsbCB3ZSBtYWRlIHRoZSB0cnVjay4gV2UgbmV2ZXIgc3Bva2UgdG8gbXVjaCBhYm91dCB3aGF0IGhhcHBlbmVkIGJ1dCBuZXZlciB3ZW50IGJhY2sgdG8gdGhhdCBwbGFjZS4gQSB5ZWFyIG9yIHNvIGxhdGVyIGkgdG9sZCBzb21ldGhpbmcgb2YgdGhlIHN0b3J5IHRvIGFub3RoZXIgZnJpZW5kIGFuZCBodW5pbmcgcGFydG5lciBvZiBtaW5lICwgaGUgd2FzIHBsYXlpbmcgd2l0aCBtZSBhbmQgc2FpZCBcImhleSBtYXliZSBpdCB3YXMgYmlnZm9vdFwiICwgdXAgdW50aWwgdGhlbiBpIG5ldmVyIHRob3VnaHQgYWJvdXQgdGhhdCBhdCBhbGwsIHRoZW4gb25lIGRheSB0aGUgc2FtZSBmcmllbmQgcGxheWVkIG1lIHNvbWUgc3VwcG9zZWQgcmVjb3JkaW5nIG9mIGJpZ2Zvb3QgdGhhdCBoZSBmb3VuZCBvbiB0aGUgaW50ZXJuZXQgYW5kIG15IGphdyBkcm9wcGVkICwgYSBzb3VuZCBpIGhhZGVudCBoZWFyZCBzaW5jZSB0aGF0IGRheSBhIGxpdHRsZSBvdmVyIGEgeWVhciBlYXJsaWVyIHdhcyBwbGF5aW5nIGluIGZyb250IG9mIG1lICwgYmVsaXZlIG1lIHdoZW4gaSB0ZWxsIHlvdSB0aGUgY2hpbGxzIHdlcmUgZW5vdWdoIHRvIGtpbCB5YS4gSSBoYWQgaGltIHJlY29yZCB0aGUgc291bmRzIGFuZCBpIGNhbGxlZCBteSBodW50aW5nIHBhcnRuZXIgd2hvIHdhcyB3aXRoIG1lIHRoYXQgZGF5IChoZSBoYWQgbW92ZWQgdG8gZmxvcmlkYSApICwgaSBwbGF5ZWQgdGhlIHNvdW5kcyBvdmVyIHRoZSBwaG9uZSBhbmQgaGUgaGFkIHRoZSBzYW1lIGNoaWlsaW5nIGZlZWxpbmcuIEl0IHdhcyBpbmRlZWQgLCAxMDAlIHBvc2l0aXZlICwgdGhlIGV4YWN0IHNhbWUgdm9jYWxpemF0aW9ucyB3ZSBleHBlcmllbmNlZCB0aGF0IGRheSBodW50aW5nLiBBIG1vbnRoIG9yIHNvIGxhdGVyIGkgY29udGFjdGVkIHRoZSBXTllCSUMgYW5kIGhlIGkgc2VudCB0aGVtIHRoaXMgc3RvcnkgYWxvbmcgd2l0aCB0aGUgdGFwZSBleHBsYWluaW5nIHRoYXQgdGhlIHNvdW5kcyBvbiB0aGUgdGFwZSBhcmUgZXhhY3RseSB3aGF0IHdlIGhlYXJkIHRoYXQgZGF5ICwgaSB3YW50ZWQgdG8ga25vdyBleGFjdGx5IHdoYXQgdGhleSB3ZXJlLiBUaGV5IHJlc3BvbmRlZCB3aXRoIHR3byBvZiB0aGVpciBvd24gdGFwZXMgd2hpY2ggY29udGFpbmVkIGV2ZW4gbW9yZSBzdXBwb3NlZCBiaWdmb290IHZvY2FsaXphdGlvbnMuIGkgY291bGQgbm90IGJlbGlldmUgaSB3YXMgaGVhcmluZyB0aGUgaWRlbnRpY2FsIHNvdW5kcyB3ZSBoZWFyZCB0aGF0IGRheSAsIHRoZW4gVGhleSBldmVuIHRvcCBpdCBieSB0ZWxsaW5nIG1lIHRoYXQgdGhlcmUgaGF2ZSBiZWVuIHNldmVyYWwgb3RoZXIgc2lnaHRpbmdzIGFuZCB2b2NhbGl6YXRpb25zIGZyb20gdGhhdCBhcmVhIGFuZCB0aGF0IHRoZXkgd291bGQgbGlrZSB0byBjb21lIGRvd24gYW5kIGNoZWNrIGl0IG91dCBmb3IgdGhlbXNlbHZlcyAsIHRoYXQgd2FzIHRoZSBsYXN0IGNvbnRhY3QgaSBoYWQgd2l0aCB0aGVtICwgYSBsZXR0ZXIgYWxvbmcgd2l0aCB0aGUgdGFwZXMgZnJvbSAyLzQvMDIuIEkganVzdCB3YW50ZWQgdG8gc2hhcmUgb3VyIHN0b3J5IGFzIGkgaGF2ZSBuZXZlciBpbiBhbGwgbXkgeWVhcnMgYmVlbiBhIGJlbGlldmVyIGluIGEgY3JlYXR1cmUgbGlrZSB0aGlzIGJ1dCB3aWxsIHRlbGwgeW91IG15IG1pbmQgaGFzIHJlbWFpbmVkIHRvdGFsbHkgb3BlbiBzaW5jZSB0aGVuLiBJIGFtIG5vdCBleGFjdGx5IHN1cmUgd2hhdCB3ZSBoZWFyZCBvciB3aGF0IHdhcyB0aGVyZSAsIGJ1dCBpIHdpbGwgZ3VhcmFudGVlIHRoYXQgaXQgd2FzIHRoZXJlLiIsImxvY2F0aW9uX2RldGFpbHMiOiJTdGF0ZSBsYW5kIGFyZWEga25vd24gYXMgXCJNaWNoaWdhbiBoaWxsXCIgaW4gUmljaGZvcmQgLCBOWSAgbWFpbiByb2FkICl0cmF2ZWwgb3V0IG9mIG5ld2FyayB2YWxsZXkgb24gcm91dGUgMzYgLCB5b3UgdHVybiByaWdodCBvZiByb3V0ZSAzNiBqdXN0IGFmdGVyIGZpc2hpbmcgYWNjZXNzIGFyZWEuIGdvIGFib3V0IDEvNCBtaWxlIGFuZCBoYW5nIGEgcmlnaHQgb24gbWljaGlnYW4gaGlsbCByb2FkIGdvIHVwIHRoIG1vdW50YWluIGFwcHJveCAzIG9yIDQgbWlsZXMgYW5kIGhhbmcgbGVmdCBvbiBhY2Nlc3Mgcm9hZC4iLCJjb3VudHkiOiJUaW9nYSBDb3VudHkiLCJzdGF0ZSI6Ik5ldyBZb3JrIiwic2Vhc29uIjoiV2ludGVyIiwidGl0bGUiOiJSZXBvcnQgNzg5MDogVHdvIGh1bnRlcnMgZXhwZXJpZW5jZSB2b2NhbGl6YXRpb25zIGFuZCBlbmNvdW50ZXIgdmVyeSBsYXJnZSB1bmtub3duIGFuaW1hbCIsImxhdGl0dWRlIjo0Mi40MDQ4OSwibG9uZ2l0dWRlIjotNzYuMTczNjYsImRhdGUiOiIyMDAxLTAxLTAxIiwibnVtYmVyIjo3ODkwLCJjbGFzc2lmaWNhdGlvbiI6IkNsYXNzIEIiLCJnZW9oYXNoIjoiZHI5YzR4czQzaCIsInRlbXBlcmF0dXJlX2hpZ2giOjIwLjMsInRlbXBlcmF0dXJlX21pZCI6MTYsInRlbXBlcmF0dXJlX2xvdyI6Ny44LCJkZXdfcG9pbnQiOjEwLjcsImh1bWlkaXR5Ijo3OS40LCJjbG91ZF9jb3ZlciI6NjIuNiwibW9vbl9waGFzZSI6MC4yMywicHJlY2lwX2ludGVuc2l0eSI6MC4wMDEsInByZWNpcF9wcm9iYWJpbGl0eSI6MTAwLCJwcmVjaXBfdHlwZSI6Ilsnc25vdyddIiwicHJlc3N1cmUiOjEwMjIuMiwic3VtbWFyeSI6IlBhcnRseSBjbG91ZHkgdGhyb3VnaG91dCB0aGUgZGF5IHdpdGggbW9ybmluZyBzbm93LiIsImNvbmRpdGlvbnMiOiJTbm93LCBQYXJ0aWFsbHkgY2xvdWR5IiwidXZfaW5kZXgiOm51bGwsInZpc2liaWxpdHkiOjYuNSwid2luZF9iZWFyaW5nIjozMDkuNSwid2luZF9zcGVlZCI6MTUuNywiaWQiOjcwfV0=","status":200,"url":"http://localhost:3000/api/posts?page=6"},"revalidate":31536000,"tags":[]}