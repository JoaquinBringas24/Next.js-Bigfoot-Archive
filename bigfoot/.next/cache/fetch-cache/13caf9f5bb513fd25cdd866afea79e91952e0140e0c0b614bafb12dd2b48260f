{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Sun, 23 Jun 2024 22:59:15 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch"},"body":"[{"observed":"The story I have to tell is not a single sighting but three events that took place during the fall of 1979 and the winter of the same or the year of 1980. During this time I was working, living as a resident of the Portland Job Corps, which is located on the banks of the Sandy River, which enters the Columbia River at Troutdale, Or. The camp which is about 4.5 miles up the Sandy, I'd say, where the students live and worked at the time. I'm not sure if the camp is still there or not. The Sandy River takes a turn to the south [at the confluence with a small tributary] and goes up into the westside of Mount Hood. This is where the camp is located. The kids or students who lived and worked there were able to cut holes in the fence and play and explore in the woods, which we did. There was a path that led to the place called The Falls, which was about a half mile from the camp where a lot of students would go to hang out party etc. On the way to the camp was a structure the kids had made. I remember one of the people who constructed it. He was Jim Hinkly, an Indian, whom I knew to be a likeable sort of guy. It was nothing more than a framework made of poles or cut trees about three or four inches in diameter, put roughly into a big lean-to, using trees for support,  covered with plastic to keep the rain off of us while we sat and smoked chatted etc. This place was used on a daily basises for a couple of weeks or so and every thing was cool till one afternoon, Jim came into the welding shop and told me someone or thing had destroyed the shack. Strange, I thought. So as soon as class was out, I went over to look at it. There was a structure about ten foot deep by about fifteen feet wide, nothing more than trees lashed to the standing trees to make a full roof basically at a slight angle to shed water to the back. The place had a strong smell, very bad, and the place was a wreck. The main trees/poles that formed the roof were broken in two, snapped like toothpicks. I'd personally hung on them many times and they hardly swayed under my weight. Chairs, broken metal, I might add, and the table broken like someone had hit it in the middle of it and broke it. There was hair around the trees also but no one thought to gather; it reddish in colour, about three inches long. The main things were the smell and the fear a person felt when close to the area. I'd say this was in August or September. The next one was probably in October or November. A group of us was out back above the football field at night partying with the full moon. It was cool and foggy, with the fog moving quickly and low to the ground so the moon was seen but the landscape would be changing - sort of a nice night; the hill, a gradual one, was covered with long grass and we were having a good time with lots of noise, carrying on, probably a group of 8-12 kids, me being one. I would have been about 19 at this time, as were most of the others also. The party was going on when all of a sudden the entire group went dead quiet at the same time. We sort of all started looking around at each other and Martin, who was an Alaska Indian, standing next to me, said: \"What is that?\"  Through the fog one could see the form of a large biped close to us, about 30-50 yards away, in the fog. We saw it long enough to know it was not a human, too big, too muscular. I'm a hunter, also have been that from the time I was 6, raised in the woods. I know bear, deer, elk etc., none of the above was what we saw. With the fog moving, it was an eerie scene as the thing would be visible, then fade and then show again. The moon was behind it, so it was a shadow that showed up fairly easily when the fast moving fog didn't obscure it from view. Martin said \"Let's go see what it is\". I said, ok, a couple of girls screamed, and we took off toward it and the  girls and some of the guys took off the other way. What happened next was interesting. As we were moving toward the spot where we last saw it - briskly, I may add, I in the lead,  all of a sudden I couldn't go any futher. My feet wouldn't move and as the fog moved away, it was about the same distance away, looking at us. Martin was close to me and as I turned to look where he was exactly,  when we looked again it was gone in the fog. Total time elapsed was only about one to two minutes from the time we first saw it to the time that it was gone. We moved probable only 100 feet before we couldn't go any farther. The third event happened that winter in a snowstorm - a bad snow storm, I might add. The camp had been stranded for about two days and it had been snowing steadily. It was about 7-9pm. I was dorm leader at this time. Two of the students came in the back door and both where white and moving fast. I said: \"What is wrong with you guys?\" One said nothing and another wouldn't say anything, either. Part of my job as dorm leader was to look into things like this so I followed them to their bunks and lockers where I got one - I forget his name - to admit that they were outback smoking on the football field when something scared the hell out of them. Rocky, the other person, wouldn't say much, just was white and scared. The other kept saying something out is there. Me being the fool I am, said \"Bull\" and headed upstairs to get my coat and boots on and headed out into the snow storm to the football field to find out what was up. Too much snow, about waist deep - I'm 6'2\" tall -  for a  cougar etc. to be wandering around, I thought. So I headed out across the football field, being the brave fool I was. Things were going well until about 20 to 30 yards from the edge of the field, where the physical training stations were located. This camp used to be an FBI training camp, I was told, and it had a track and training stations around the football field and farther down the hill towards the creek where the road and the town of Troutdale sat. As I said, things were going well until about that far from the edge, when I suddenly couldn't go any further forward. It was not that I didn't want to; I couldn't and in the flying snow I kept being drawn to a large clump of blackberry bushes below the situp station. So I stayed there and played with the feeling. I could back up and it went away, I would come forward and it was present. Strange, I thought. I had a feeling about what I was feeling and what created it. No one else wanted to come out and play from the dorm. They thought I was nuts so I stayed for a while and then went back as it was snowing hard.  I won't fill out much more of the details below except name and contact info. If you like I'd tell you the same thing I basically told here. A long time has passed and although I still remember it, I don't know where anyone else is or even if the camp is still in operation. This is in response to reading the Locals book which I found quite interesting and it is something else to add to you list of sightings. The one thing I found most interesting was the inability to move any closer in both situations and the definitive line  where this happened. Subsonic sound I don't know, but whatever it was it worked quite well.","location_details":"From I-84 take the Troutdale exit and go up the Sandy River to the Job Corps camp. On the left side of the road there is a large sculpture of a dragon made by a student at the gate.","county":"Multnomah County","state":"Oregon","season":"Fall","title":"Report 7789: Members of Job Corps group have several encounters","latitude":45.5145,"longitude":-122.3352,"date":"1979-10-15","number":7789,"classification":"Class A","geohash":"c214bjwjpj","temperature_high":68.1,"temperature_mid":58.9,"temperature_low":54.2,"dew_point":54,"humidity":84.9,"cloud_cover":95.6,"moon_phase":0.83,"precip_intensity":0.071,"precip_probability":100,"precip_type":"['rain']","pressure":1019.2,"summary":"Cloudy skies throughout the day with early morning rain.","conditions":"Rain, Overcast","uv_index":null,"visibility":8,"wind_bearing":159.5,"wind_speed":8.1,"id":181},{"observed":"It was on October 28th, a Saturday afternoon about 4:30pm. It was a clear sunny day when my wife and I were on our way down south driving on state route 19 South near Fremont, Ohio. As we came around a corner to a long straight away, we saw a tall brownish hairy creature walking from a field going east to west crossing the road. As I pointed it out to my wife we were probably about a quarter mile from it. As we watched while approaching it, its arms were long and swaying as it walked across the road in long strides. We watched it non-stop as we got closer to where it had just crossed the road. When we got to where it crossed the road, there was a guard rail and beyond the guard rail was a drastic slope into a heavily wooded area. We stopped and looked around but did not see anything around. It was hard to believe what we had seen, we were totally in awe and just could not explain nothing else to what it was except a BIGFOOT!","location_details":"About three miles south on St Rt 19 from St Rt 20","county":"Sandusky County","state":"Ohio","season":"Fall","title":"Report 58458: Daytime road crossing on State Route 19 just outside of Fremont","latitude":41.29247,"longitude":-83.05098,"date":"2017-10-28","number":58458,"classification":"Class A","geohash":"dpkfyjh45f","temperature_high":41.9,"temperature_mid":39.6,"temperature_low":38.2,"dew_point":32.4,"humidity":75.6,"cloud_cover":85.2,"moon_phase":0.29,"precip_intensity":0.127,"precip_probability":100,"precip_type":"['rain']","pressure":1011.7,"summary":"Partly cloudy throughout the day with rain clearing later.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":9.5,"wind_bearing":239.3,"wind_speed":15.7,"id":182},{"observed":"My then girlfriend, and eventual ex wife were bowling in a mixed bowling league that ended around 7 PM. We chatted with some teammates and friends for a few moments then left. I had two beers during the three games, along with several cans of pop. Melody was in a mood and she wanted to go out to the forest and relax. We stopped by the local Jim Dandy and picked up two specials, (a burger and very small drink) and headed to the Shawnee Forest. I suggested Picnic Point and that is where we went. Our car was a VW bug that she drove. I had finished my burger and drink and she gave me her drink, she drank like a bird, and never finished anything. We got to the point, drove around the circle so the car was pointing back out the way we came. We got out of the car, I placed the drink on the roof of the passenger side, while she was getting the blanket I trotted over to a nice tree, just over the lip of the hill to release some of the liquids I had consumed. I had just began to relieve myself when it started. I had commented as we got out of the car how quiet it was, no birds, no sounds of any kind. As I began to do my thing there were three loud crashes, down the hill in front of me, coming straight up. Now, these crashes, were strides, you could tell something big and heavy was striding up the hillside. The strides stopped, I looked up, Melody asked if I heard that, I nodded and put my free finger to my lips, indicating quiet, I was trying to fix the exact location. Then several more strides and it stopped again. Ok, I was zipped and ready to move and slowly backing towards the car, eyes fixed on the direction of the sound. Mel asked me if I had any idea what that was, as I said, the sounds were obviously strides, not a deer crashing through the brush. I answered I did not know. Then there was a low sound, almost like a growl, and what ever it was, it was coming up the hill now, very hard and very fast. We both said \"let's get the hell out of here.\" As we jumped in the car, I, out of habit, grabbed the cup off the roof and placed it between my legs. Let pause the narration for a moment, for a personal description. I am a very curious fellow, I am not one to turn tail and run...that part of my nature took hold for a second and I suggested since we were in the car, let's wait and see what pops up over the hillside...Melody would have none of that..she was driving and we were leaving, period. As I looked at her to argue the point, there was a thump on the car, she had already started it, she popped the clutch and the car lurched. There was a flash of something that went by my window, she screamed, I told her to drive it was just my cup falling off the roof...yes, the same cup I secured between my legs. We sped back into town and went to the local Moose Lodge where I was a member. There were several reasons, one, I wlll try to explain later, I was shaking uncontrollably...two we had friends there, and three they had the best set of floodlights in the city, I wanted to see the car. We got to the lodge, I got out and looked at the car. The car was very dusty and dirty. On the top of the car was an enormous hand print, very obvious it was a hand, fingers, not claws. One the right rear side quarter panel was another hand print. Whatever it was had been looking in that small window that all Beetles had. On the door on my side, in the dust, you can see where fingers had slid down the side. The only thing I could think of was is reached for the door as we lurched away, that was the flash and the second thump. Several friends saw this, we went back out later that night, but were turned away by the Rangers, forest closed after dark. Far and away the scariest part of all this..when we were in the car and heard the first thump, I turned in my seat and looked in the direction of that thump, that meant I looked out that little window...I must have looked it straight in the eyes. I say must because I don't remember, I remember turning to look, turning back and urging her to drive, but I cannot tell you what I saw that night. It just happened so quickly! I have not had a good night sleep since...I used to be at home in the woods, and I still have fun, until the sun begins to go down, or I get \"a feeling.\"","location_details":"Picnic Point, off State Route 125, near the Riffee 3C camp","county":"Scioto County","state":"Ohio","season":"Summer","title":"Report 10421: A couple has a frightening encounter in Shawnee State Forest.","latitude":38.68516,"longitude":-83.12916,"date":"1982-07-21","number":10421,"classification":"Class B","geohash":"dnuuh67jqh","temperature_high":83,"temperature_mid":72.3,"temperature_low":62,"dew_point":66.1,"humidity":83,"cloud_cover":25,"moon_phase":0.03,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1017.1,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":7.7,"wind_bearing":87.7,"wind_speed":8.1,"id":183},{"observed":"I was in High School in 1986 and we just came home from an away football game and were cruising around town late one night, about 12:30 or so. My friend was driving and my other buddy was in the back seat in the middle. I was riding in the passenger seat. After riding around for a while, we decided to go to the other side of town and took a shortcut on the very curvy Timlin Hill Road. The area has some nice homes and has a huge old Montessori at the top of the hill that was abandoned by the nuns a few years earlier. So you can imaging the ghost stories that emulate from this such place. It is still well kept and was a popular make out spot for the area teens, it overlooked Portsmouth and was at the top of a hill-like region... Anyway, just at the entrance to the Montessori are well lighted street lights that provide more that ample light. We were turning a sharp corner at the bottom of the hill and started to the top of the hill toward the Montessori when we turned the corner and saw a \"thing\" sitting in the middle of the road all crouched down. When it saw our car/headlights, it arose and took three large steps and leaped over and down the hill. My friends and I said nothing until we got to the other side of the hill (stop light). I finally had to say something and turned to my friend driving and he was almost crying, my friend in the back was in total disbelief of what we had just seen. We went back (going about 100 mph) but obviously that thing had vanished. Later that night, we went back with a few more people and saw where some branches were broken. I had never been a believer in Bigfoot, but the thing I saw was something I cannot to this day explain. I was about 17 then, now I am 34 and still recall vividly how that night was when I didn't expect to encounter this thing. It was slender, tall and had fur hanging off of it, its arms swung down past its knees almost. It took two to three steps and leaped over these reeds that were at least 4 foot tall. It was almost like it was warming itself under the lights and the warmth of the pavement.","location_details":"Off of State Route 23","county":"Scioto County","state":"Ohio","season":"Fall","title":"Report 6062: Three teenagers witness a \"thing\" crouched on the road, stand up, take three quick steps, and jump over the reeds down a hill","latitude":38.74899,"longitude":-82.97854,"date":"1986-10-01","number":6062,"classification":"Class A","geohash":"dnuury0c5z","temperature_high":83.9,"temperature_mid":74.4,"temperature_low":68.1,"dew_point":68.6,"humidity":82.8,"cloud_cover":70,"moon_phase":0.93,"precip_intensity":0.012,"precip_probability":100,"precip_type":"['rain']","pressure":1016.3,"summary":"Partly cloudy throughout the day with afternoon rain.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":7.3,"wind_bearing":218.5,"wind_speed":13.9,"id":184},{"observed":"I was 18 then just out of high school and was camping with friends behind my parents house in the Shawnee forest. I remember now that one of my friends said that he felt as though we were being watched and he was very uncomfortable and didn't leave the area of the fire much. We had heard something moving across the field from where we were camped and I wanted to see what it was. There were many small apple trees in this field and I went down and sat under one so I could see the other side of the field with out the glare of the fire. The moon was bright that night and afforded a fairly good look at what was going on. Along the tree line was a possible sasquatch walking slightly hunched over but looking toward the camp fire and the camp area in general. I remember his eyes flashing red as the fire would reflect in them. I refer to it as a him simply for the fact that I assumed that it was the same from the first sighting years before and had now evident breasts. It cleared the field in very short time and headed into a small ravine. We didn't hear it or see it again. This was in October of 1990. Seemed to be between 7 and 7 1/2 feet tall. Dark hair color most likely black or a very dark brown. The head came to a slight point at the top, eyes seemed smallish and would reflect red at night. Chest was large and barrel like, arms longer than that of a man, stout thick legs. Nose was broad and flat and mouth jutted out slightly, ape like. One thing I do remember is that when it turned and walked away that the hair on it's hind quarters was thinner and that it's butt was visible. First sighting- 1980 I was young anywhere from 8-10 years old, I was awakened one morning by the sounds of our dogs baying and running around the house and under the porch. I got up and looked out my window to see this creature standing in the edge of the forest, roughly 70 feet away across a small stream and the road. I watched it for what seemed like forever but was probably only a minute or two at the most before it casually turned and walked back into the woods and up the hill. Late fall is when this took place.","location_details":"Southwestern portion of the Shawnee State Forest","county":"Scioto County","state":"Ohio","season":"Fall","title":"Report 4976: Witness has two sightings, ten years apart in Cut Rock area","latitude":38.83628,"longitude":-83.12873,"date":"1990-10-01","number":4976,"classification":"Class A","geohash":"dnuuumgt8p","temperature_high":71,"temperature_mid":58.1,"temperature_low":50.1,"dew_point":50.6,"humidity":79.6,"cloud_cover":51.7,"moon_phase":0.41,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1019.5,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":7.1,"wind_bearing":227.9,"wind_speed":9.2,"id":185},{"observed":"I was 15 years old at the time, I remember because I didn't have my drivers license yet. My brother and father and I were hunting squirrel. The funny thing was, this was our first hunting experience except for our father. Dad was born and raised in this part of the country. We had moved to Springboro, which is south of Dayton, when he decided to take us on a \"hunting trip.\"... Me and my brother were not the \"outdoors type,\" both of us being born in Dayton. My father had borrowed the guns we were using, since we would probably never go again. Me and my brother both knew how to shoot a gun, just never hunted wildlife before. Anyway, we were on our first \"safari,\" very excited and scared at the same time. The year before, my brother and I had got walkie talkies for Christmas. Not the cheap kind, but a nice set with a range of a \"mile\" under normal circumstances.. which was..... ha ha apparently not hills and \"hollers.\" Sorry, back to the sighting... We had split up a few hills back, each combing a hill or two. I heard a few shots from two different directions before it got very quiet. Birds had been chirping as the sun was high and the temperature had to be well within the 80's. I was at the top of a \"holler\" and decided to go down, instead of staying on top of the hill. As I descended, I got a weird feeling, as though I shouldn't be there or something else. I started to call my brother on the walkie talkie when I heard a loud sound coming from the right of me and fifty some yards down. I thought, why is someone running? As I approached it from behind, I turned off the walkie talkie so I didn't disturb what I was about to see. At first I thought it was a bear, but it was sitting on a large rock. Then I thought it was my father playing a trick on me, trying to scare me, but he didn't have a costume when we started to hunt. Did he bring one earlier? As this is going through my mind it stood up, I was coming quietly down the \"holler.\" I now could hear noise to my left and then right, like people just walking, not trying to draw attention to themselves. What gets me is that it never turned around, like it knew I was there. I was above wind, so how? As it stood, I was maybe 30 yards behind it, I never saw what was to my left and right, but it took off like a shot of lightning. I am now 6 foot 2 and 300 pounds, this thing was at least 8 foot tall and between 350 pounds and 450 pounds. I stood there for what felt like forever, a horrid odor had filled my senses, making me want to cry. I decided to go back up the \"holler\" away from what I had seen. I stood on top of that hill, calling my brother on the walkie talkie telling him to hurry. My father got there first, which I never understood, and he looked old and tired. I asked why are you standing so alert? He said \"we should leave now.\" As we were leaving in the truck, I asked why leave so early? He said \"son some things can't be explained.\" I understand now.","location_details":"A few miles off of State Route 139.","county":"Scioto County","state":"Ohio","season":"Summer","title":"Report 5229: Man recalls seeing a strange bipedal animal during his one and only hunting trip","latitude":38.79215,"longitude":-82.93085,"date":"2004-06-25","number":5229,"classification":"Class A","geohash":"dnvh8vgseh","temperature_high":71.7,"temperature_mid":69.4,"temperature_low":64.5,"dew_point":66.1,"humidity":89.6,"cloud_cover":51,"moon_phase":0.25,"precip_intensity":0.213,"precip_probability":100,"precip_type":"['rain']","pressure":1016.3,"summary":"Becoming cloudy in the afternoon with rain.","conditions":"Rain, Partially cloudy","uv_index":null,"visibility":4.4,"wind_bearing":158.7,"wind_speed":5.8,"id":186},{"observed":"My husband and I and three children decided to go camping for the 4th of July weekend at the Shawnee National Forrest Park in Ohio. We left on friday July 2,2010 and came home on July 6th. On July 6th at 4:00 a.m. in the morning my husband was awakened by a very strange noise and thought maybe raccoons were in our trash but then listened and thought that it couldnt be raccoons by the noise it was making. It sounded like it was calling the other one from the woods into the site. We heard the other one walking behind our tent and my husband started to yell \"HEY HEY GET OUT OF HERE\" and then they ran into the woods and it sounded like stomping.....we then knew it was something very very large. I got the kids and we ran to the car. We drove into Portsmouth for about an hour and half...we couldnt think of any animal that could make that noise or stomp like that through the woods. Maybe a bear but bears couldnt make that noise. So we went back to the campsite this was about 5:30 a.m. and my husband went up first to check it out....it was a liltle light out but not light enough to see into the woods... after he was up there for a little bit i went up and we herd something breathing heavy and then a stick was thrown at me and it made that noise again and we both ran to the car and just slept in our car. Finally when it was like 8:30a.m. we went up to the site and looked around and couldnt find anything missing and our garbage was ripped open but not spread out all over the place.....and my husband went up into the woods and found a pack of our raymon noodles that was opened but not eaten( i thought that was weird most animals eat anything).. So we packed everything up and left. Later that day when i was home i was thinking about the night before all this happened that when i was sitting by our fire i could hear something throwing stuff at our campsite and felt like something was watching us but i thought i was just scaring myself...but it all makes sense now they were watching us and finally came into our camping area the last day we were there! We were camping at 2 different sites that week the first site was xxx and the site that everything happened at was right next to that one just farther back in the woods and that one was xxx..... It was deffinately a night to remember and i have never had any kind of experience like this before in my life! I am scared and curious at the same time.....if only we would have had a flashlight we would have been able to see it but we only had a lantern!","location_details":"campsite xxx at the campgrounds of Shawnee National Forrest Park","county":"Scioto County","state":"Ohio","season":"Summer","title":"Report 27972: Family camping at Shawnee State Forest has possible encounter","latitude":38.69322,"longitude":-83.12891,"date":"2010-07-06","number":27972,"classification":"Class B","geohash":"dnuuh7gkk4","temperature_high":93,"temperature_mid":81,"temperature_low":68,"dew_point":67.5,"humidity":67.4,"cloud_cover":13.9,"moon_phase":0.83,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1017.9,"summary":"Clear conditions throughout the day.","conditions":"Clear","uv_index":"10.0","visibility":5.6,"wind_bearing":7.1,"wind_speed":4.7,"id":187},{"observed":"2-4-14: 4 miles south of Piketon, OH at State Rest Area (north end) after 12\" overnight snow.  Stopped by rest area at 1600hrs to let dog out (Rhodesian Lab). Followed septic area fence line to towards back of area, turned north only to discover tracks in (3) path's from 5-7' spread.  BFRO was immediately contacted with Investigator Marc from Cleveland contacting me about the incident (he has field info.).  I returned to area 2-7-14 at 1330hrs & took numerous photos using items for scaling purposes.  A possible nest was also found at north end near ravine & wood line, again given to Marc at BFRO.  Marc returned call last night (2-7-14) saying his contact visited the area, found prints & documented spread & locations.  The field personnel were to return again today (2-8-14) to cast prints where toes were visible.  There was no way any other North American animal could've produced these tracks at 15.5\" & 5-7' increments.  I have several quality photos now that depict the event.","location_details":"North end of State Rest area, NW qaudrant","county":"Scioto County","state":"Ohio","season":"Winter","title":"Report 44173: Possible tracks found by a man and his dog at a rest stop near Piketon","latitude":38.9506,"longitude":-83.02551,"date":"2014-02-14","number":44173,"classification":"Class B","geohash":"dnuvwdwxtq","temperature_high":41.8,"temperature_mid":35,"temperature_low":30.3,"dew_point":22.9,"humidity":61.8,"cloud_cover":51.4,"moon_phase":0.5,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1005.4,"summary":"Becoming cloudy in the afternoon.","conditions":"Partially cloudy","uv_index":null,"visibility":8.6,"wind_bearing":236.5,"wind_speed":14.1,"id":188},{"observed":"i went to feed the dogs at about 1100 pm an something was coming towards me threw the corn field i thought it was a deer it stopped about 75 feet from me and stood erect it was aclear night and the corn had a bright haze over it i could see it very clearly i turned and ran into the house the next day i went into the cornto look for foot prints but the soil was very dry there were scuff marks and some ears of corn were missing it went straight back the way it came the corn was 6 feet high it cleared the corn by 2 feet it had squared shoulders and no neck shoulders were about 36 inches wide","location_details":"i live at the end of the street its leander st it connects into trump rd","county":"Stark County","state":"Ohio","season":"Fall","title":"Report 24435: Man sees silhouette of an 8'-9' tall creature looking back at him from a cornfield near Canton","latitude":40.79362,"longitude":-81.32337,"date":"1976-08-10","number":24435,"classification":"Class B","geohash":"dpq0j6q0h1","temperature_high":83.6,"temperature_mid":67.1,"temperature_low":55.2,"dew_point":59.2,"humidity":78.1,"cloud_cover":39.4,"moon_phase":0.52,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1021.4,"summary":"Partly cloudy throughout the day.","conditions":"Partially cloudy","uv_index":null,"visibility":6.8,"wind_bearing":311.9,"wind_speed":7,"id":189},{"observed":"In the late 70s I used to walk to my friends house via a swampy area. One night around 10 PM, I started walking to his house. About halfway there I heard this very strange sound. It was like a low pitched growl that became a high pitched scream. Being only 12 years old I started running my ass off back home trying to get away from whatever it was. I could hear it following me and there was a smell in the air that was awful. At one point it sounded like it was 20 feet from me!! I finally made it to my backyard and whatever it was never came out of the woodline to show itself to me. Then, about a month later, while riding my bike to my friends house the long way I heard it again. That sound just made the hair on the back of my neck stand up just thinking about it. This thing just never seemed to go away during the summer months. My older brother thought I was pulling a fast one on him with this story until one night that changed his mind completely. He was out at the old makeshift cabin we built back there with a friend. They both heard something come up behind them and when my brother turned around it was right there. When they turned to run the creature grabbed my brother and ripped a mark on his back. He had three claw looking scratches about an inch or two long. They ran back down the hill until they hit the road and just like before it never left the cover of the woods. He said it stayed there and bellowed out an awful scream that scared them to death. I have never seen him that visibly scared in my entire life. One morning around 3 AM my brother slipped outside to have a smoke (since mom and dad didn't allow us to smoke). After about three minutes I heard banging on the back door. Just before the banging on the door our dog started acting very strange. It ran under the bed and started whimpering like something was wrong. When I opened the door the awful smell was in the air. It was like a mix between a skunk and rotten flesh. My brother almost tore the screen door off the hinges. He looked back to the yard and said, \"Look..there it is.\" I looked in the direction he was pointing and there was this huge hairy thing walking out of the woods with the moonlight on its back. It looked around seven to eight feet tall. When it walked it looked slumped over and we could see its arms moving as it walked out of the woods and through my neighbors yard. That was just one of the many things that happened by our house during the three summers this thing was coming around. ","location_details":"State Route 21 south out of Navarre to Hensel Road. Make a left and follow about 100 yards to Shelter Road and turn right. We lived the right hand side about two houses before Redmont Drive. The strip mines and woods were right behind the houses in the area.","county":"Stark County","state":"Ohio","season":"Summer","title":"Report 4484: A series of sightings, screams, and smells near an abandoned strip mine","latitude":40.67979,"longitude":-81.51075,"date":"1978-07-01","number":4484,"classification":"Class A","geohash":"dpnp3jt8vy","temperature_high":71,"temperature_mid":66.1,"temperature_low":62,"dew_point":54,"humidity":66,"cloud_cover":96.1,"moon_phase":0.87,"precip_intensity":0,"precip_probability":0,"precip_type":null,"pressure":1017.1,"summary":"Cloudy skies throughout the day.","conditions":"Overcast","uv_index":null,"visibility":9.1,"wind_bearing":85,"wind_speed":13.6,"id":190}]","status":200,"url":"http://localhost:3000/api/posts?page=18"},"revalidate":31536000,"tags":[]}